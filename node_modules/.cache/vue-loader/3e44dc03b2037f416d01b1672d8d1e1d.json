{"remainingRequest":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/sharewani/front-end/src/views/configuration/screening-data/Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/sharewani/front-end/src/views/configuration/screening-data/Main.vue","mtime":1570886746920},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport cardData from '@/components/CardData.vue'\nimport uploadFile from '@/components/UploadFile.vue'\nimport { directive as onClickOutside } from 'vue-on-click-outside'\nexport default {\n    components: {\n        cardData,\n        uploadFile,\n    },\n\n    directives: {\n        onClickOutside: onClickOutside,\n    },\n    /*\n    |--------------------------------------------------------------------------\n    | Component > props\n    |--------------------------------------------------------------------------\n    */\n    props: {}, // End of Component > props\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > data\n    |--------------------------------------------------------------------------\n    */\n    data() {\n        return {\n            tabData: 0,\n            listData: null,\n            tableItemData: null,\n            listVal: null,\n            listDropdown: false,\n            menuListingChanges: '/configuration/screening-data/',\n            menuListing: [\n                {\n                    value: '/configuration/screening-data/',\n                    text: 'Gender',\n                },\n                {\n                    value: '/configuration/screening-data/deceased',\n                    text: 'Deceased',\n                },\n                {\n                    value: '/configuration/screening-data/record-status',\n                    text: 'Record Status',\n                },\n                {\n                    value: '/configuration/screening-data/name-type',\n                    text: 'Name Type',\n                },\n                {\n                    value: '/configuration/screening-data/descprition-1',\n                    text: 'Description 1',\n                },\n                {\n                    value: '/configuration/screening-data/descprition-2',\n                    text: 'Description 2',\n                },\n                {\n                    value: '/configuration/screening-data/descprition-3',\n                    text: 'Description 3',\n                },\n                {\n                    value: '/configuration/screening-data/role-type',\n                    text: 'Role Type',\n                },\n                {\n                    value: '/configuration/screening-data/occupation',\n                    text: 'Occupation',\n                },\n                {\n                    value: '/configuration/screening-data/date-type',\n                    text: 'Date Type',\n                },\n                {\n                    value: '/configuration/screening-data/sanction-reference',\n                    text: 'Sanctions Reference',\n                },\n                {\n                    value: '/configuration/screening-data/country',\n                    text: 'Country',\n                },\n                {\n                    value: '/configuration/screening-data/country-type',\n                    text: 'Country Type',\n                },\n                {\n                    value: '/configuration/screening-data/identification',\n                    text: 'Identification Type',\n                },\n                {\n                    value: '/configuration/screening-data/relationship-type',\n                    text: 'Relationship Type',\n                },\n            ],\n        }\n    }, // End of Component > data\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > computed\n    |--------------------------------------------------------------------------\n    */\n    computed: {\n        ...mapGetters(['configurationData']),\n    }, // End of Component > computed\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > methods\n    |--------------------------------------------------------------------------\n    */\n    methods: {\n        listWidthVal() {\n            this.listVal = this.$refs.listingArea.offsetWidth\n        },\n        tableItemLength(val) {\n            this.tableItemData = val\n        },\n        initializeData() {\n            //system log table\n            let configImportFields = this.configurationData.importData //get user data from store\n            this.listData = configImportFields //push data into array\n        },\n        close() {\n            this.listDropdown = false\n        },\n        tabFilter(index) {\n            this.tabData = index\n        },\n        onChange() {\n            this.$router.push('' + this.menuListingChanges + '')\n        },\n    }, // End of Component > methods\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > mounted\n    |--------------------------------------------------------------------------\n    */\n    mounted() {\n        this.listWidthVal()\n        this.initializeData()\n    }, // End of Component > mounted\n} // End of export default\n",{"version":3,"sources":["Main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Main.vue","sourceRoot":"src/views/configuration/screening-data","sourcesContent":["<template>\n    <div class=\"wrap-content\">\n        <div class=\"data-import small-card\">\n            <div class=\"row\">\n                <div\n                    class=\"col-md-3\"\n                    v-for=\"(data, index) in listData\"\n                    :key=\"index\"\n                    :class=\"index == tabData ? 'active' : ''\"\n                    @click=\"tabFilter(index)\"\n                >\n                    <card-data\n                        :logo=\"data.logo\"\n                        :name=\"data.name\"\n                        :description=\"data.description\"\n                    ></card-data>\n                </div>\n            </div>\n        </div>\n\n        <div v-if=\"tabData == 0 || tabData == 1\">\n            <div class=\"config-list\" ref=\"listingArea\">\n                <div v-show=\"listVal <= 850\" class=\"config-list-dropdown\">\n                    <b-form-group\n                        id=\"input-group-5\"\n                        label=\"Screening Data\"\n                        label-for=\"screening-data\"\n                    >\n                        <b-form-select\n                            id=\"screening-data\"\n                            class=\"form-control\"\n                            v-model=\"menuListingChanges\"\n                            :options=\"menuListing\"\n                            v-on:change=\"onChange\"\n                        >\n                        </b-form-select>\n                    </b-form-group>\n                </div>\n                <ul v-show=\"listVal >= 850 && listVal <= 1500\">\n                    <li\n                        v-for=\"(list, index) in menuListing.slice(0, 8)\"\n                        :key=\"index\"\n                    >\n                        <router-link :to=\"list.value\">\n                            <span>{{ list.text }}</span>\n                        </router-link>\n                    </li>\n                    <li\n                        class=\"open-dropdown\"\n                        :class=\"[\n                            $route.meta.responsiveMenuItem == true\n                                ? 'router-link-exact-active'\n                                : '' || listDropdown == true\n                                ? 'router-link-exact-active'\n                                : '',\n                        ]\"\n                    >\n                        <a\n                            @click=\"listDropdown ^= true\"\n                            href=\"javascript:void(0);\"\n                        >\n                            <i class=\"icon-dropdown-icon\"></i>\n                        </a>\n\n                        <div\n                            v-if=\"listDropdown\"\n                            class=\"dropdown-open\"\n                            v-on-click-outside=\"close\"\n                        >\n                            <ul>\n                                <li\n                                    v-for=\"(listo, index) in menuListing.slice(\n                                        8,\n                                        menuListing.length\n                                    )\"\n                                    :key=\"index\"\n                                    @click=\"listDropdown ^= true\"\n                                >\n                                    <router-link :to=\"listo.value\">\n                                        <span>{{ listo.text }}</span>\n                                    </router-link>\n                                </li>\n                            </ul>\n                        </div>\n                    </li>\n                </ul>\n                <ul v-show=\"listVal >= 1499\">\n                    <li v-for=\"(list, index) in menuListing\" :key=\"index\">\n                        <router-link :to=\"list.value\">\n                            <span>{{ list.text }}</span>\n                        </router-link>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"config-card-block\">\n                <router-view @item-length=\"tableItemLength\" />\n            </div>\n        </div>\n\n        <!-- <div v-if=\"tabData == 1\"></div> -->\n\n        <div v-if=\"tabData == 2\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <div class=\"config-card-block card sm-radius\">\n                        <upload-file></upload-file>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport cardData from '@/components/CardData.vue'\nimport uploadFile from '@/components/UploadFile.vue'\nimport { directive as onClickOutside } from 'vue-on-click-outside'\nexport default {\n    components: {\n        cardData,\n        uploadFile,\n    },\n\n    directives: {\n        onClickOutside: onClickOutside,\n    },\n    /*\n    |--------------------------------------------------------------------------\n    | Component > props\n    |--------------------------------------------------------------------------\n    */\n    props: {}, // End of Component > props\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > data\n    |--------------------------------------------------------------------------\n    */\n    data() {\n        return {\n            tabData: 0,\n            listData: null,\n            tableItemData: null,\n            listVal: null,\n            listDropdown: false,\n            menuListingChanges: '/configuration/screening-data/',\n            menuListing: [\n                {\n                    value: '/configuration/screening-data/',\n                    text: 'Gender',\n                },\n                {\n                    value: '/configuration/screening-data/deceased',\n                    text: 'Deceased',\n                },\n                {\n                    value: '/configuration/screening-data/record-status',\n                    text: 'Record Status',\n                },\n                {\n                    value: '/configuration/screening-data/name-type',\n                    text: 'Name Type',\n                },\n                {\n                    value: '/configuration/screening-data/descprition-1',\n                    text: 'Description 1',\n                },\n                {\n                    value: '/configuration/screening-data/descprition-2',\n                    text: 'Description 2',\n                },\n                {\n                    value: '/configuration/screening-data/descprition-3',\n                    text: 'Description 3',\n                },\n                {\n                    value: '/configuration/screening-data/role-type',\n                    text: 'Role Type',\n                },\n                {\n                    value: '/configuration/screening-data/occupation',\n                    text: 'Occupation',\n                },\n                {\n                    value: '/configuration/screening-data/date-type',\n                    text: 'Date Type',\n                },\n                {\n                    value: '/configuration/screening-data/sanction-reference',\n                    text: 'Sanctions Reference',\n                },\n                {\n                    value: '/configuration/screening-data/country',\n                    text: 'Country',\n                },\n                {\n                    value: '/configuration/screening-data/country-type',\n                    text: 'Country Type',\n                },\n                {\n                    value: '/configuration/screening-data/identification',\n                    text: 'Identification Type',\n                },\n                {\n                    value: '/configuration/screening-data/relationship-type',\n                    text: 'Relationship Type',\n                },\n            ],\n        }\n    }, // End of Component > data\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > computed\n    |--------------------------------------------------------------------------\n    */\n    computed: {\n        ...mapGetters(['configurationData']),\n    }, // End of Component > computed\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > methods\n    |--------------------------------------------------------------------------\n    */\n    methods: {\n        listWidthVal() {\n            this.listVal = this.$refs.listingArea.offsetWidth\n        },\n        tableItemLength(val) {\n            this.tableItemData = val\n        },\n        initializeData() {\n            //system log table\n            let configImportFields = this.configurationData.importData //get user data from store\n            this.listData = configImportFields //push data into array\n        },\n        close() {\n            this.listDropdown = false\n        },\n        tabFilter(index) {\n            this.tabData = index\n        },\n        onChange() {\n            this.$router.push('' + this.menuListingChanges + '')\n        },\n    }, // End of Component > methods\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > mounted\n    |--------------------------------------------------------------------------\n    */\n    mounted() {\n        this.listWidthVal()\n        this.initializeData()\n    }, // End of Component > mounted\n} // End of export default\n</script>\n"]}]}