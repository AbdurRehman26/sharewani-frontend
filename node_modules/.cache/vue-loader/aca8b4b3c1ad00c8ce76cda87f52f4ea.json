{"remainingRequest":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/sharewani/front-end/src/views/configuration/idenfo-engine/IndustryFactor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/sharewani/front-end/src/views/configuration/idenfo-engine/IndustryFactor.vue","mtime":1570886746916},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport addIndustryPopup from '@/components/popups/AddIndustryPopup.vue'\nimport archivePopup from '@/components/popups/ArchivePopup.vue'\nimport pagination from '@/components/Pagination.vue'\nexport default {\n    components: {\n        addIndustryPopup,\n        archivePopup,\n        pagination,\n    },\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > props\n    |--------------------------------------------------------------------------\n    */\n    props: {}, // End of Component > props\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > data\n    |--------------------------------------------------------------------------\n    */\n    data() {\n        return {\n            fields: [],\n            items: [],\n            title: '',\n            buttonText: '',\n            recordShow: [\n                { text: 'Show 10 records', value: null },\n                { text: 'Show 20 records', value: 20 },\n                { text: 'Show 30 records', value: 30 },\n            ],\n        }\n    }, // End of Component > data\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > computed\n    |--------------------------------------------------------------------------\n    */\n    computed: {\n        ...mapGetters(['configurationData']),\n    }, // End of Component > computed\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > methods\n    |--------------------------------------------------------------------------\n    */\n    methods: {\n        initializeData() {\n            let configTableFields = this.configurationData.idenfoEngine.industry\n                .fields //get user data from store\n            this.fields = configTableFields //push data into array\n            let configTableItems = this.configurationData.idenfoEngine.industry\n                .items //get user data from store\n            this.items = configTableItems //push data into array\n            this.$emit('item-length', this.items.length)\n        },\n\n        addModify(e, f) {\n            this.title = e\n            this.buttonText = f\n            this.$bvModal.show('add-industry-popup')\n        },\n    }, // End of Component > methods\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > mounted\n    |--------------------------------------------------------------------------\n    */\n    mounted() {\n        this.initializeData()\n    }, // End of Component > mounted\n} // End of export default\n",{"version":3,"sources":["IndustryFactor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IndustryFactor.vue","sourceRoot":"src/views/configuration/idenfo-engine","sourcesContent":["<template>\n    <div class=\"infoengine industry-factor-page\">\n        <div class=\"filter-section row-min-space\">\n            <div class=\"row\">\n                <div class=\"col-md-5 filter-title-section\">\n                    <h2>Industry Factor</h2>\n                </div>\n                <div class=\"col-md-7 text-right\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <base-search\n                                placeholder=\"Search industry\"\n                            ></base-search>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"row\">\n                                <div class=\"col-md-4\">\n                                    <base-button\n                                        btnLabel=\"Apply\"\n                                        btnType=\"button\"\n                                        btnVariant=\"primary\"\n                                    ></base-button>\n                                </div>\n                                <div class=\"col-md-8\">\n                                    <base-button\n                                        @click=\"\n                                            addModify(\n                                                'Add Industry Factor',\n                                                'Create'\n                                            )\n                                        \"\n                                        btnLabel=\"+ Add Industry\"\n                                        btnType=\"button\"\n                                        btnVariant=\"secondary\"\n                                        class=\"secondary-add-btn\"\n                                    ></base-button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"table-section tablet-table-xxs-min-width\">\n            <b-table :items=\"items\" :fields=\"fields\">\n                <template slot=\"worktypeimpact\" slot-scope=\"data\">\n                    <a href=\"#\" class=\"work-impact\">\n                        <span>{{ data.value }}</span>\n                        <i class=\"icon-caret-right\"></i>\n                        <div class=\"custom-popover\">\n                            <ul>\n                                <li>\n                                    <label\n                                        >Self-Employed/Business Owner:\n                                    </label>\n                                    <span class=\"high\">High</span>\n                                </li>\n                                <li>\n                                    <label>Salaried-Executive Level: </label>\n                                    <span class=\"high\">High</span>\n                                </li>\n                                <li>\n                                    <label>Salaried-General: </label>\n                                    <span class=\"low\">Low</span>\n                                </li>\n                                <li>\n                                    <label>Homemaker: </label>\n                                    <span class=\"low\">Low</span>\n                                </li>\n                                <li>\n                                    <label>Student: </label>\n                                    <span class=\"low\">Low</span>\n                                </li>\n                                <li>\n                                    <label>Unemployed: </label>\n                                    <span class=\"low\">Low</span>\n                                </li>\n                                <li>\n                                    <label>Retired: </label>\n                                    <span class=\"low\">Low</span>\n                                </li>\n                            </ul>\n                        </div>\n                    </a>\n                </template>\n                <template slot=\"action\" slot-scope=\"data\">\n                    <div class=\"action-review\">\n                        <!-- if action modify -->\n                        <base-action\n                            v-if=\"data.value == 'active'\"\n                            icon=\"icon-edit\"\n                            label=\"Modify\"\n                            @click=\"\n                                addModify('Modify Industry Factor', 'Update')\n                            \"\n                        ></base-action>\n                        <!-- if action archive -->\n                        <base-action\n                            v-if=\"data.value == 'active'\"\n                            icon=\"icon-trash\"\n                            label=\"Archive\"\n                            v-b-modal.archive-popup\n                        ></base-action>\n                    </div>\n                </template>\n            </b-table>\n        </div>\n        <pagination\n            totalRecords=\"Showing 1 to 10 of 21 records\"\n            :showRecords=\"recordShow\"\n        ></pagination>\n        <add-industry-popup\n            :title=\"title\"\n            :buttonText=\"buttonText\"\n        ></add-industry-popup>\n        <archive-popup\n            title=\"Archive Industry Factor\"\n            description=\"Are you sure you want to archive this industry factor? You can re-activate it later.\"\n        ></archive-popup>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport addIndustryPopup from '@/components/popups/AddIndustryPopup.vue'\nimport archivePopup from '@/components/popups/ArchivePopup.vue'\nimport pagination from '@/components/Pagination.vue'\nexport default {\n    components: {\n        addIndustryPopup,\n        archivePopup,\n        pagination,\n    },\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > props\n    |--------------------------------------------------------------------------\n    */\n    props: {}, // End of Component > props\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > data\n    |--------------------------------------------------------------------------\n    */\n    data() {\n        return {\n            fields: [],\n            items: [],\n            title: '',\n            buttonText: '',\n            recordShow: [\n                { text: 'Show 10 records', value: null },\n                { text: 'Show 20 records', value: 20 },\n                { text: 'Show 30 records', value: 30 },\n            ],\n        }\n    }, // End of Component > data\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > computed\n    |--------------------------------------------------------------------------\n    */\n    computed: {\n        ...mapGetters(['configurationData']),\n    }, // End of Component > computed\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > methods\n    |--------------------------------------------------------------------------\n    */\n    methods: {\n        initializeData() {\n            let configTableFields = this.configurationData.idenfoEngine.industry\n                .fields //get user data from store\n            this.fields = configTableFields //push data into array\n            let configTableItems = this.configurationData.idenfoEngine.industry\n                .items //get user data from store\n            this.items = configTableItems //push data into array\n            this.$emit('item-length', this.items.length)\n        },\n\n        addModify(e, f) {\n            this.title = e\n            this.buttonText = f\n            this.$bvModal.show('add-industry-popup')\n        },\n    }, // End of Component > methods\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > mounted\n    |--------------------------------------------------------------------------\n    */\n    mounted() {\n        this.initializeData()\n    }, // End of Component > mounted\n} // End of export default\n</script>\n"]}]}