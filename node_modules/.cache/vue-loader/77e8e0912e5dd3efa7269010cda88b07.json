{"remainingRequest":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/sharewani/front-end/src/views/register-customer/AccountInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/sharewani/front-end/src/views/register-customer/AccountInfo.vue","mtime":1570886746920},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nexport default {\n    components: {\n        Multiselect,\n    },\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > props\n    |--------------------------------------------------------------------------\n    */\n    props: {}, // End of Component > props\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > data\n    |--------------------------------------------------------------------------\n    */\n    data() {\n        return {\n            form: {\n                purposeaction: null,\n                currency: null,\n                productType: null,\n                monthlyCredit: '',\n                monthlyExpectation: '',\n                grossIncome: '',\n                purposeactionOptions: [\n                    {\n                        value: null,\n                        text: 'Select why did customer opened account',\n                    },\n                    'For Business Purpose',\n                    'For Saving Purpose',\n                ],\n\n                productSelected: ['Saving Account', 'Current Account'],\n                initialBalance: '',\n            },\n\n            productType: [\n                { name: 'Saving Account', code: 'savingAccount' },\n                { name: 'Current Account', code: 'currentAccount' },\n            ],\n            options: [\n                { name: 'Saving Account', code: 'savingAccount' },\n                { name: 'Current Account', code: 'currentAccount' },\n                { name: 'Credit Card', code: 'creditCard' },\n                { name: 'Short Term Loan', code: 'shortLoan' },\n                { name: 'Financial Investment', code: 'financialInvestment' },\n            ],\n        }\n    }, // End of Component > data\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > computed\n    |--------------------------------------------------------------------------\n    */\n    computed: {}, // End of Component > computed\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > methods\n    |--------------------------------------------------------------------------\n    */\n    methods: {\n        linking() {\n            if (this.$route.meta.publicRegistration === true) {\n                this.$router.push('/public-registration/finish')\n            } else {\n                this.$router.push('/register-customer/finish')\n            }\n        },\n\n        addTag(newTag) {\n            const tag = {\n                name: newTag,\n                code:\n                    newTag.substring(0, 2) +\n                    Math.floor(Math.random() * 10000000),\n            }\n            this.options.push(tag)\n            this.value.push(tag)\n        },\n    }, // End of Component > methods\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > mounted\n    |--------------------------------------------------------------------------\n    */\n    mounted() {}, // End of Component > mounted\n} // End of export default\n",{"version":3,"sources":["AccountInfo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AccountInfo.vue","sourceRoot":"src/views/register-customer","sourcesContent":["<template>\n    <b-form class=\"step-form\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"fields-area\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-12\">\n                            <h3>Account Information</h3>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <b-form-group\n                                label=\"Purpose of action\"\n                                label-for=\"purpose-action\"\n                            >\n                                <b-form-select\n                                    id=\"purpose-action\"\n                                    class=\"form-control\"\n                                    v-model=\"form.purposeaction\"\n                                    autocomplete=\"no\"\n                                    :options=\"form.purposeactionOptions\"\n                                ></b-form-select>\n                            </b-form-group>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <div class=\"form-group\">\n                                <label for=\"data-segments\">Product Type</label>\n                                <multiselect\n                                    v-model=\"productType\"\n                                    label=\"name\"\n                                    placeholder=\"Select product type\"\n                                    track-by=\"code\"\n                                    :options=\"options\"\n                                    :multiple=\"true\"\n                                    :taggable=\"true\"\n                                    @tag=\"addTag\"\n                                ></multiselect>\n                            </div>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <b-form-group\n                                label=\"Expected Monthly Credit TurnOver\"\n                                label-for=\"credit-turnover\"\n                            >\n                                <b-form-input\n                                    id=\"credit-turnover\"\n                                    type=\"text\"\n                                    v-model=\"form.monthlyCredit\"\n                                    required\n                                    autocomplete=\"no\"\n                                    placeholder=\"Enter expected monthly credit turnover\"\n                                ></b-form-input>\n                            </b-form-group>\n                        </div>\n\n                        <div class=\"col-md-8\">\n                            <b-form-group\n                                label=\"Maxiumum Upper Limit of Single Credit Expected in a Month\"\n                                label-for=\"expectation-in-month\"\n                            >\n                                <b-form-input\n                                    id=\"expectation-in-month\"\n                                    type=\"text\"\n                                    v-model=\"form.monthlyExpectation\"\n                                    required\n                                    autocomplete=\"no\"\n                                    placeholder=\"Enter Maxiumum upper limit of single credit expected in a month\"\n                                ></b-form-input>\n                            </b-form-group>\n                        </div>\n                        <div class=\"col-md-4\">\n                            <b-form-group\n                                label=\"Gross Income of client\"\n                                label-for=\"gross-income\"\n                            >\n                                <b-form-input\n                                    id=\"gross-income\"\n                                    type=\"text\"\n                                    v-model=\"form.grossIncome\"\n                                    required\n                                    autocomplete=\"no\"\n                                    placeholder=\"Enter gross income of client\"\n                                ></b-form-input>\n                            </b-form-group>\n                        </div>\n                        <div class=\"col-md-8\">\n                            <b-form-group\n                                label=\"Initial Balance\"\n                                label-for=\"initial-balance\"\n                            >\n                                <b-form-input\n                                    id=\"initial-balance\"\n                                    type=\"text\"\n                                    v-model=\"form.initialBalance\"\n                                    required\n                                    autocomplete=\"no\"\n                                    placeholder=\"Enter Initial balance (expected within 30 days of account opening)\"\n                                ></b-form-input>\n                            </b-form-group>\n                        </div>\n                    </div>\n                </div>\n                <base-button\n                    btnType=\"submit\"\n                    btnVariant=\"primary\"\n                    btnLabel=\"CONTINUE\"\n                    @preventFunction=\"linking()\"\n                ></base-button>\n            </div>\n        </div>\n    </b-form>\n</template>\n<script>\nimport Multiselect from 'vue-multiselect'\nexport default {\n    components: {\n        Multiselect,\n    },\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > props\n    |--------------------------------------------------------------------------\n    */\n    props: {}, // End of Component > props\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > data\n    |--------------------------------------------------------------------------\n    */\n    data() {\n        return {\n            form: {\n                purposeaction: null,\n                currency: null,\n                productType: null,\n                monthlyCredit: '',\n                monthlyExpectation: '',\n                grossIncome: '',\n                purposeactionOptions: [\n                    {\n                        value: null,\n                        text: 'Select why did customer opened account',\n                    },\n                    'For Business Purpose',\n                    'For Saving Purpose',\n                ],\n\n                productSelected: ['Saving Account', 'Current Account'],\n                initialBalance: '',\n            },\n\n            productType: [\n                { name: 'Saving Account', code: 'savingAccount' },\n                { name: 'Current Account', code: 'currentAccount' },\n            ],\n            options: [\n                { name: 'Saving Account', code: 'savingAccount' },\n                { name: 'Current Account', code: 'currentAccount' },\n                { name: 'Credit Card', code: 'creditCard' },\n                { name: 'Short Term Loan', code: 'shortLoan' },\n                { name: 'Financial Investment', code: 'financialInvestment' },\n            ],\n        }\n    }, // End of Component > data\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > computed\n    |--------------------------------------------------------------------------\n    */\n    computed: {}, // End of Component > computed\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > methods\n    |--------------------------------------------------------------------------\n    */\n    methods: {\n        linking() {\n            if (this.$route.meta.publicRegistration === true) {\n                this.$router.push('/public-registration/finish')\n            } else {\n                this.$router.push('/register-customer/finish')\n            }\n        },\n\n        addTag(newTag) {\n            const tag = {\n                name: newTag,\n                code:\n                    newTag.substring(0, 2) +\n                    Math.floor(Math.random() * 10000000),\n            }\n            this.options.push(tag)\n            this.value.push(tag)\n        },\n    }, // End of Component > methods\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > mounted\n    |--------------------------------------------------------------------------\n    */\n    mounted() {}, // End of Component > mounted\n} // End of export default\n</script>\n"]}]}