{"remainingRequest":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/sharewani/front-end/src/views/configuration/idenfo-engine/NameScreenScore.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/sharewani/front-end/src/views/configuration/idenfo-engine/NameScreenScore.vue","mtime":1570886746916},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport modifyScorePopup from '@/components/popups/ModifyScorePopup.vue'\nexport default {\n    components: {\n        modifyScorePopup,\n    },\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > props\n    |--------------------------------------------------------------------------\n    */\n    props: {}, // End of Component > props\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > data\n    |--------------------------------------------------------------------------\n    */\n    data() {\n        return {\n            fields: [],\n            items: [],\n        }\n    }, // End of Component > data\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > computed\n    |--------------------------------------------------------------------------\n    */\n    computed: {\n        ...mapGetters(['configurationData']),\n    }, // End of Component > computed\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > methods\n    |--------------------------------------------------------------------------\n    */\n    methods: {\n        initializeData() {\n            let screenScoreFactorFields = this.configurationData.idenfoEngine\n                .screenScoreFactor.fields //get user data from store\n            this.fields = screenScoreFactorFields //push data into array\n            let screenScoreFactorItems = this.configurationData.idenfoEngine\n                .screenScoreFactor.items //get user data from store\n            this.items = screenScoreFactorItems //push data into array\n            this.$emit('item-length', this.items.length)\n        },\n    }, // End of Component > methods\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > mounted\n    |--------------------------------------------------------------------------\n    */\n    mounted() {\n        this.initializeData()\n    }, // End of Component > mounted\n} // End of export default\n",{"version":3,"sources":["NameScreenScore.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"NameScreenScore.vue","sourceRoot":"src/views/configuration/idenfo-engine","sourcesContent":["<template>\n    <div class=\"infoengine\">\n        <div class=\"filter-section\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <h2 class=\"filter-heading\">Name Screening Score Factors</h2>\n                </div>\n            </div>\n        </div>\n        <div class=\"table-section\">\n            <b-table :items=\"items\" :fields=\"fields\">\n                <template slot=\"action\" slot-scope=\"data\">\n                    <div class=\"action-review\">\n                        <base-action\n                            v-if=\"data.value == 'active'\"\n                            icon=\"icon-edit\"\n                            label=\"Modify\"\n                            v-b-modal.modify-score-popup\n                        ></base-action>\n                    </div>\n                </template>\n            </b-table>\n        </div>\n        <modify-score-popup></modify-score-popup>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport modifyScorePopup from '@/components/popups/ModifyScorePopup.vue'\nexport default {\n    components: {\n        modifyScorePopup,\n    },\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > props\n    |--------------------------------------------------------------------------\n    */\n    props: {}, // End of Component > props\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > data\n    |--------------------------------------------------------------------------\n    */\n    data() {\n        return {\n            fields: [],\n            items: [],\n        }\n    }, // End of Component > data\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > computed\n    |--------------------------------------------------------------------------\n    */\n    computed: {\n        ...mapGetters(['configurationData']),\n    }, // End of Component > computed\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > methods\n    |--------------------------------------------------------------------------\n    */\n    methods: {\n        initializeData() {\n            let screenScoreFactorFields = this.configurationData.idenfoEngine\n                .screenScoreFactor.fields //get user data from store\n            this.fields = screenScoreFactorFields //push data into array\n            let screenScoreFactorItems = this.configurationData.idenfoEngine\n                .screenScoreFactor.items //get user data from store\n            this.items = screenScoreFactorItems //push data into array\n            this.$emit('item-length', this.items.length)\n        },\n    }, // End of Component > methods\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > mounted\n    |--------------------------------------------------------------------------\n    */\n    mounted() {\n        this.initializeData()\n    }, // End of Component > mounted\n} // End of export default\n</script>\n"]}]}