{"remainingRequest":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/sharewani/front-end/src/views/register-customer/AccountInfo.vue?vue&type=template&id=06781aea&","dependencies":[{"path":"/var/www/sharewani/front-end/src/views/register-customer/AccountInfo.vue","mtime":1570886746920},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"b-form\", { staticClass: \"step-form\" }, [\n    _c(\"div\", { staticClass: \"row\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"col-lg-12\" },\n        [\n          _c(\"div\", { staticClass: \"fields-area\" }, [\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-lg-12\" }, [\n                _c(\"h3\", [_vm._v(\"Account Information\")])\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"col-md-4\" },\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Purpose of action\",\n                        \"label-for\": \"purpose-action\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-select\", {\n                        staticClass: \"form-control\",\n                        attrs: {\n                          id: \"purpose-action\",\n                          autocomplete: \"no\",\n                          options: _vm.form.purposeactionOptions\n                        },\n                        model: {\n                          value: _vm.form.purposeaction,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"purposeaction\", $$v)\n                          },\n                          expression: \"form.purposeaction\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"div\", { staticClass: \"col-md-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"data-segments\" } }, [\n                      _vm._v(\"Product Type\")\n                    ]),\n                    _c(\"multiselect\", {\n                      attrs: {\n                        label: \"name\",\n                        placeholder: \"Select product type\",\n                        \"track-by\": \"code\",\n                        options: _vm.options,\n                        multiple: true,\n                        taggable: true\n                      },\n                      on: { tag: _vm.addTag },\n                      model: {\n                        value: _vm.productType,\n                        callback: function($$v) {\n                          _vm.productType = $$v\n                        },\n                        expression: \"productType\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ]),\n              _c(\n                \"div\",\n                { staticClass: \"col-md-4\" },\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Expected Monthly Credit TurnOver\",\n                        \"label-for\": \"credit-turnover\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"credit-turnover\",\n                          type: \"text\",\n                          required: \"\",\n                          autocomplete: \"no\",\n                          placeholder: \"Enter expected monthly credit turnover\"\n                        },\n                        model: {\n                          value: _vm.form.monthlyCredit,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"monthlyCredit\", $$v)\n                          },\n                          expression: \"form.monthlyCredit\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"col-md-8\" },\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label:\n                          \"Maxiumum Upper Limit of Single Credit Expected in a Month\",\n                        \"label-for\": \"expectation-in-month\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"expectation-in-month\",\n                          type: \"text\",\n                          required: \"\",\n                          autocomplete: \"no\",\n                          placeholder:\n                            \"Enter Maxiumum upper limit of single credit expected in a month\"\n                        },\n                        model: {\n                          value: _vm.form.monthlyExpectation,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"monthlyExpectation\", $$v)\n                          },\n                          expression: \"form.monthlyExpectation\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"col-md-4\" },\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Gross Income of client\",\n                        \"label-for\": \"gross-income\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"gross-income\",\n                          type: \"text\",\n                          required: \"\",\n                          autocomplete: \"no\",\n                          placeholder: \"Enter gross income of client\"\n                        },\n                        model: {\n                          value: _vm.form.grossIncome,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"grossIncome\", $$v)\n                          },\n                          expression: \"form.grossIncome\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"div\",\n                { staticClass: \"col-md-8\" },\n                [\n                  _c(\n                    \"b-form-group\",\n                    {\n                      attrs: {\n                        label: \"Initial Balance\",\n                        \"label-for\": \"initial-balance\"\n                      }\n                    },\n                    [\n                      _c(\"b-form-input\", {\n                        attrs: {\n                          id: \"initial-balance\",\n                          type: \"text\",\n                          required: \"\",\n                          autocomplete: \"no\",\n                          placeholder:\n                            \"Enter Initial balance (expected within 30 days of account opening)\"\n                        },\n                        model: {\n                          value: _vm.form.initialBalance,\n                          callback: function($$v) {\n                            _vm.$set(_vm.form, \"initialBalance\", $$v)\n                          },\n                          expression: \"form.initialBalance\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ])\n          ]),\n          _c(\"base-button\", {\n            attrs: {\n              btnType: \"submit\",\n              btnVariant: \"primary\",\n              btnLabel: \"CONTINUE\"\n            },\n            on: {\n              preventFunction: function($event) {\n                return _vm.linking()\n              }\n            }\n          })\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}