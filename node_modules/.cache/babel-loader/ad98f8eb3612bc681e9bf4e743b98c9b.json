{"remainingRequest":"/var/www/sharewani/front-end/node_modules/babel-loader/lib/index.js!/var/www/sharewani/front-end/node_modules/eslint-loader/index.js??ref--13-0!/var/www/sharewani/front-end/src/auto-import.js","dependencies":[{"path":"/var/www/sharewani/front-end/src/auto-import.js","mtime":1571336225966},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1571377057617},{"path":"/var/www/sharewani/front-end/node_modules/babel-loader/lib/index.js","mtime":1571377057453},{"path":"/var/www/sharewani/front-end/node_modules/eslint-loader/index.js","mtime":1571377058021}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport upperFirst from 'lodash/upperFirst';\nimport camelCase from 'lodash/camelCase';\n\nvar requireComponent = require.context( // The relative path of the components folder\n'./components', // Whether or not to look in subfolders\nfalse, // The regular expression used to match base component filenames\n/Base[A-Z]\\w+\\.(vue|js)$/);\n\nrequireComponent.keys().forEach(function (fileName) {\n  // Get component config\n  var componentConfig = requireComponent(fileName); // Get PascalCase name of component\n\n  var componentName = upperFirst(camelCase( // Strip the leading `./` and extension from the filename\n  fileName.replace(/^\\.\\/(.*)\\.\\w+$/, '$1'))); // Register component globally\n\n  Vue.component(componentName, // Look for the component options on `.default`, which will\n  // exist if the component was exported with `export default`,\n  // otherwise fall back to module's root.\n  componentConfig.default || componentConfig);\n});",{"version":3,"sources":["/var/www/sharewani/front-end/src/auto-import.js"],"names":["Vue","upperFirst","camelCase","requireComponent","require","context","keys","forEach","fileName","componentConfig","componentName","replace","component","default"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;AAEA,IAAMC,gBAAgB,GAAGC,OAAO,CAACC,OAAR,EACrB;AACA,cAFqB,EAGrB;AACA,KAJqB,EAKrB;AACA,yBANqB,CAAzB;;AASAF,gBAAgB,CAACG,IAAjB,GAAwBC,OAAxB,CAAgC,UAACC,QAAD,EAAc;AAC1C;AACA,MAAMC,eAAe,GAAGN,gBAAgB,CAACK,QAAD,CAAxC,CAF0C,CAI1C;;AACA,MAAME,aAAa,GAAGT,UAAU,CAC5BC,SAAS,EACL;AACAM,EAAAA,QAAQ,CAACG,OAAT,CAAiB,iBAAjB,EAAoC,IAApC,CAFK,CADmB,CAAhC,CAL0C,CAY1C;;AACAX,EAAAA,GAAG,CAACY,SAAJ,CACIF,aADJ,EAEI;AACA;AACA;AACAD,EAAAA,eAAe,CAACI,OAAhB,IAA2BJ,eAL/B;AAOH,CApBD","sourcesContent":["import Vue from 'vue'\nimport upperFirst from 'lodash/upperFirst'\nimport camelCase from 'lodash/camelCase'\n\nconst requireComponent = require.context(\n    // The relative path of the components folder\n    './components',\n    // Whether or not to look in subfolders\n    false,\n    // The regular expression used to match base component filenames\n    /Base[A-Z]\\w+\\.(vue|js)$/\n)\n\nrequireComponent.keys().forEach((fileName) => {\n    // Get component config\n    const componentConfig = requireComponent(fileName)\n\n    // Get PascalCase name of component\n    const componentName = upperFirst(\n        camelCase(\n            // Strip the leading `./` and extension from the filename\n            fileName.replace(/^\\.\\/(.*)\\.\\w+$/, '$1')\n        )\n    )\n\n    // Register component globally\n    Vue.component(\n        componentName,\n        // Look for the component options on `.default`, which will\n        // exist if the component was exported with `export default`,\n        // otherwise fall back to module's root.\n        componentConfig.default || componentConfig\n    )\n})\n"]}]}