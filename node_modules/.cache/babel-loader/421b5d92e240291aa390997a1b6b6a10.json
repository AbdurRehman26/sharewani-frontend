{"remainingRequest":"/var/www/sharewani/front-end/node_modules/babel-loader/lib/index.js!/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/sharewani/front-end/src/views/configuration/idenfo-engine/PurposeAction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/sharewani/front-end/src/views/configuration/idenfo-engine/PurposeAction.vue","mtime":1570886746920},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/sharewani/front-end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/var/www/sharewani/front-end/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport addPurposePopup from '@/components/popups/AddPurposePopup.vue';\nimport archivePopup from '@/components/popups/ArchivePopup.vue';\nimport pagination from '@/components/Pagination.vue';\nexport default {\n  components: {\n    addPurposePopup: addPurposePopup,\n    archivePopup: archivePopup,\n    pagination: pagination\n  },\n\n  /*\n  |--------------------------------------------------------------------------\n  | Component > props\n  |--------------------------------------------------------------------------\n  */\n  props: {},\n  // End of Component > props\n\n  /*\n  |--------------------------------------------------------------------------\n  | Component > data\n  |--------------------------------------------------------------------------\n  */\n  data: function data() {\n    return {\n      fields: [],\n      items: [],\n      title: '',\n      buttonText: '',\n      recordShow: [{\n        text: 'Show 10 records',\n        value: null\n      }]\n    };\n  },\n  // End of Component > data\n\n  /*\n  |--------------------------------------------------------------------------\n  | Component > computed\n  |--------------------------------------------------------------------------\n  */\n  computed: _objectSpread({}, mapGetters(['configurationData'])),\n  // End of Component > computed\n\n  /*\n  |--------------------------------------------------------------------------\n  | Component > methods\n  |--------------------------------------------------------------------------\n  */\n  methods: {\n    initializeData: function initializeData() {\n      var configTableFields = this.configurationData.idenfoEngine.purposeActionManagement.fields; //get user data from store\n\n      this.fields = configTableFields; //push data into array\n\n      var configTableItems = this.configurationData.idenfoEngine.purposeActionManagement.items; //get user data from store\n\n      this.items = configTableItems; //push data into array\n\n      this.$emit('item-length', this.items.length);\n    },\n    addModify: function addModify(e, f) {\n      this.title = e;\n      this.buttonText = f;\n      this.$bvModal.show('add-purpose-popup');\n    }\n  },\n  // End of Component > methods\n\n  /*\n  |--------------------------------------------------------------------------\n  | Component > mounted\n  |--------------------------------------------------------------------------\n  */\n  mounted: function mounted() {\n    this.initializeData();\n  }\n};",{"version":3,"sources":["PurposeAction.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4FA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,eAAA,MAAA,yCAAA;AACA,OAAA,YAAA,MAAA,sCAAA;AACA,OAAA,UAAA,MAAA,6BAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,eAAA,EAAA,eADA;AAEA,IAAA,YAAA,EAAA,YAFA;AAGA,IAAA,UAAA,EAAA;AAHA,GADA;;AAOA;;;;;AAKA,EAAA,KAAA,EAAA,EAZA;AAYA;;AAEA;;;;;AAKA,EAAA,IAnBA,kBAmBA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA,EAJA;AAKA,MAAA,UAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA,iBAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AALA,KAAA;AAOA,GA3BA;AA2BA;;AAEA;;;;;AAKA,EAAA,QAAA,oBACA,UAAA,CAAA,CAAA,mBAAA,CAAA,CADA,CAlCA;AAoCA;;AAEA;;;;;AAKA,EAAA,OAAA,EAAA;AACA,IAAA,cADA,4BACA;AACA,UAAA,iBAAA,GAAA,KAAA,iBAAA,CAAA,YAAA,CACA,uBADA,CACA,MADA,CADA,CAEA;;AACA,WAAA,MAAA,GAAA,iBAAA,CAHA,CAGA;;AACA,UAAA,gBAAA,GAAA,KAAA,iBAAA,CAAA,YAAA,CACA,uBADA,CACA,KADA,CAJA,CAKA;;AACA,WAAA,KAAA,GAAA,gBAAA,CANA,CAMA;;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA,KAAA,CAAA,MAAA;AACA,KATA;AAWA,IAAA,SAXA,qBAWA,CAXA,EAWA,CAXA,EAWA;AACA,WAAA,KAAA,GAAA,CAAA;AACA,WAAA,UAAA,GAAA,CAAA;AACA,WAAA,QAAA,CAAA,IAAA,CAAA,mBAAA;AACA;AAfA,GA3CA;AA2DA;;AAEA;;;;;AAKA,EAAA,OAlEA,qBAkEA;AACA,SAAA,cAAA;AACA;AApEA,CAAA","sourcesContent":["<template>\n    <div class=\"infoengine purpose-section\">\n        <div class=\"filter-section row-min-space\">\n            <div class=\"row\">\n                <div class=\"col-md-6 filter-title-section\">\n                    <h2>Purpose of Action Management</h2>\n                </div>\n                <div class=\"col-md-6 text-right filter-fields\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <base-search\n                                placeholder=\"Search purpose of action\"\n                            ></base-search>\n                        </div>\n                        <div class=\"col-md-6\">\n                            <div class=\"row\">\n                                <div class=\"col-md-4\">\n                                    <base-button\n                                        btnLabel=\"Apply\"\n                                        btnType=\"button\"\n                                        btnVariant=\"primary\"\n                                    ></base-button>\n                                </div>\n                                <div class=\"col-md-8\">\n                                    <base-button\n                                        @click=\"\n                                            addModify(\n                                                'Add Purpose of Action',\n                                                'Create'\n                                            )\n                                        \"\n                                        btnLabel=\"+ Add Purpose\"\n                                        btnType=\"button\"\n                                        btnVariant=\"secondary\"\n                                        class=\"secondary-add-btn\"\n                                    ></base-button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"table-section mobile-table-responsive\">\n            <b-table :items=\"items\" :fields=\"fields\">\n                <template slot=\"scorescale\" slot-scope=\"data\">\n                    <div class=\"work-impact\">\n                        <span>{{ data.value }}</span>\n                        <i class=\"icon-caret-right\"></i>\n                    </div>\n                </template>\n                <template slot=\"action\" slot-scope=\"data\">\n                    <div class=\"action-review\">\n                        <!-- if action modify -->\n                        <base-action\n                            v-if=\"data.value == 'active'\"\n                            icon=\"icon-edit\"\n                            label=\"Modify\"\n                            @click=\"\n                                addModify('Modify Purpose of Action', 'Update')\n                            \"\n                        ></base-action>\n                        <!-- if action archive -->\n                        <base-action\n                            v-if=\"data.value == 'active'\"\n                            icon=\"icon-trash\"\n                            label=\"Archive\"\n                            v-b-modal.archive-popup\n                        ></base-action>\n                    </div>\n                </template>\n            </b-table>\n        </div>\n        <pagination\n            totalRecords=\"Showing 1 to 2 of 2 records\"\n            nextBtnDisable\n            selectPaginationDisable\n            :showRecords=\"recordShow\"\n        ></pagination>\n        <add-purpose-popup\n            :title=\"title\"\n            :buttonText=\"buttonText\"\n        ></add-purpose-popup>\n        <archive-popup\n            title=\"Archive Purpose of Action\"\n            description=\"Are you sure you want to archive this purpose of action? You can re-activate it later.\"\n        ></archive-popup>\n    </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport addPurposePopup from '@/components/popups/AddPurposePopup.vue'\nimport archivePopup from '@/components/popups/ArchivePopup.vue'\nimport pagination from '@/components/Pagination.vue'\nexport default {\n    components: {\n        addPurposePopup,\n        archivePopup,\n        pagination,\n    },\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > props\n    |--------------------------------------------------------------------------\n    */\n    props: {}, // End of Component > props\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > data\n    |--------------------------------------------------------------------------\n    */\n    data() {\n        return {\n            fields: [],\n            items: [],\n            title: '',\n            buttonText: '',\n            recordShow: [{ text: 'Show 10 records', value: null }],\n        }\n    }, // End of Component > data\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > computed\n    |--------------------------------------------------------------------------\n    */\n    computed: {\n        ...mapGetters(['configurationData']),\n    }, // End of Component > computed\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > methods\n    |--------------------------------------------------------------------------\n    */\n    methods: {\n        initializeData() {\n            let configTableFields = this.configurationData.idenfoEngine\n                .purposeActionManagement.fields //get user data from store\n            this.fields = configTableFields //push data into array\n            let configTableItems = this.configurationData.idenfoEngine\n                .purposeActionManagement.items //get user data from store\n            this.items = configTableItems //push data into array\n            this.$emit('item-length', this.items.length)\n        },\n\n        addModify(e, f) {\n            this.title = e\n            this.buttonText = f\n            this.$bvModal.show('add-purpose-popup')\n        },\n    }, // End of Component > methods\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > mounted\n    |--------------------------------------------------------------------------\n    */\n    mounted() {\n        this.initializeData()\n    }, // End of Component > mounted\n} // End of export default\n</script>\n"],"sourceRoot":"src/views/configuration/idenfo-engine"}]}