{"version":3,"sources":["webpack:///./node_modules/mux.js/lib/m2ts/m2ts.js","webpack:///./node_modules/es-abstract/es5.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/mux.js/lib/mp4/audio-frame-utils.js","webpack:///./node_modules/mux.js/lib/mp4/mp4-generator.js","webpack:///./node_modules/string.prototype.trim/polyfill.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/es-abstract/helpers/isNaN.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/mux.js/lib/m2ts/timestamp-rollover-stream.js","webpack:///./node_modules/mux.js/lib/mp4/probe.js","webpack:///./node_modules/sdp/sdp.js","webpack:///./node_modules/mux.js/lib/mp4/index.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/mux.js/lib/mp4/frame-utils.js","webpack:///./node_modules/es-to-primitive/es5.js","webpack:///./node_modules/mux.js/lib/mp4/transmuxer.js","webpack:///./node_modules/mux.js/lib/utils/exp-golomb.js","webpack:///./node_modules/mux.js/lib/utils/clock.js","webpack:///./node_modules/videojs-record/dist/videojs.record.js","webpack:///./node_modules/mux.js/lib/m2ts/probe.js","webpack:///./node_modules/mux.js/lib/utils/stream.js","webpack:///./node_modules/es-to-primitive/helpers/isPrimitive.js","webpack:///./node_modules/mux.js/lib/m2ts/caption-stream.js","webpack:///./node_modules/mux.js/lib/codecs/adts.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/string.prototype.trim/implementation.js","webpack:///./node_modules/es-abstract/helpers/sign.js","webpack:///./node_modules/mux.js/lib/m2ts/metadata-stream.js","webpack:///./node_modules/mux.js/lib/codecs/h264.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/video.js/node_modules/global/window.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/mux.js/lib/data/silence.js","webpack:///./node_modules/mux.js/lib/utils/bin.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/mpd-parser/dist/mpd-parser.es.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/mux.js/lib/tools/mp4-inspector.js","webpack:///./node_modules/mux.js/lib/aac/index.js","webpack:///./node_modules/has/src/index.js","webpack:///./node_modules/mux.js/lib/mp4/caption-parser.js","webpack:///./node_modules/recordrtc/RecordRTC.js","webpack:///./node_modules/mux.js/lib/m2ts/stream-types.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/object-keys/implementation.js","webpack:///./node_modules/string.prototype.trim/shim.js","webpack:///./node_modules/es-abstract/helpers/mod.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/es-abstract/helpers/assertRecord.js","webpack:///./node_modules/es-abstract/helpers/isFinite.js","webpack:///./node_modules/string.prototype.trim/index.js","webpack:///./node_modules/video.js/node_modules/global/document.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/url-toolkit/src/url-toolkit.js","webpack:///./node_modules/object-keys/isArguments.js","webpack:///./node_modules/object-keys/index.js","webpack:///./node_modules/mux.js/lib/tools/ts-inspector.js","webpack:///./node_modules/mux.js/lib/tools/caption-packet-parser.js","webpack:///./node_modules/keycode/index.js","webpack:///./node_modules/es-abstract/GetIntrinsic.js","webpack:///./node_modules/xhr/node_modules/global/window.js","webpack:///./src/views/register-customer/RecordVideo.vue?c1c2","webpack:///./src/components/VideoJSRecord.vue?76fa","webpack:///./node_modules/webrtc-adapter/src/js/utils.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/filtericeservers.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/common_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack:///src/components/VideoJSRecord.vue","webpack:///./src/components/VideoJSRecord.vue?fb69","webpack:///./src/components/VideoJSRecord.vue","webpack:///src/views/register-customer/RecordVideo.vue","webpack:///./src/views/register-customer/RecordVideo.vue?0344","webpack:///./src/views/register-customer/RecordVideo.vue","webpack:///./node_modules/mux.js/lib/mp4/track-decode-info.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","webpack:///./node_modules/m3u8-parser/dist/m3u8-parser.es.js","webpack:///./node_modules/pkcs7/dist/pkcs7.es.js","webpack:///./node_modules/aes-decrypter/dist/aes-decrypter.es.js","webpack:///./node_modules/video.js/dist/video.es.js","webpack:///./node_modules/define-properties/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/mux.js/lib/aac/utils.js"],"names":["TransportPacketStream","TransportParseStream","ElementaryStream","Stream","__webpack_require__","CaptionStream","StreamTypes","TimestampRolloverStream","m2tsStreamTypes","MP2T_PACKET_LENGTH","SYNC_BYTE","buffer","Uint8Array","bytesInBuffer","prototype","init","call","this","push","bytes","everything","startIndex","endIndex","byteLength","set","subarray","trigger","flush","parsePsi","parsePat","parsePmt","self","packetsWaitingForPmt","programMapTable","undefined","payload","psi","offset","payloadUnitStartIndicator","type","pat","section_number","last_section_number","pmtPid","pmt","sectionLength","tableEnd","programInfoLength","video","audio","timed-metadata","streamType","pid","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","packet","result","length","processPes_","apply","shift","data","STREAM_TYPES","h264","adts","size","timedMetadata","parsePes","pes","ptsDtsFlags","packetLength","dataAlignmentIndicator","pts","dts","flushStream","stream","forceFlush","fragment","packetData","event","i","packetFlushable","trackId","tracks","timelineStartInfo","baseMediaDecodeTime","id","codec","m2ts","PAT_PID","Cea608Stream","MetadataStream","hasOwnProperty","module","exports","GetIntrinsic","$Object","$TypeError","$String","assertRecord","$isNaN","$isFinite","sign","mod","IsCallable","toPrimitive","has","ES5","ToPrimitive","ToBoolean","value","ToNumber","ToInteger","number","Math","floor","abs","ToInt32","x","ToUint32","ToUint16","posInt","ToString","ToObject","CheckObjectCoercible","optMessage","SameValue","y","Type","IsPropertyDescriptor","Desc","allowed","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","key","isData","IsAccessor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","writable","enumerable","configurable","get","ToPropertyDescriptor","Obj","desc","getter","TypeError","setter","implementation","Function","bind","coneOfSilence","clock","ONE_SECOND_IN_TS","sumFrameByteLengths","array","currentObj","sum","prefixWithSilence","track","frames","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","silentFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","audioTsToVideoTs","samplerate","ceil","max","splice","videoTsToAudioTs","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","Infinity","filter","currentFrame","min","minSegmentPts","generateSampleTable","samples","duration","concatenateFrameData","dataOffset","box","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun","types","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","UINT32_MAX","pow","avc1","avcC","btrt","dref","mp4a","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","vmhd","charCodeAt","view","arguments","DataView","byteOffset","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","sequenceNumber","trackFragments","concat","boxes","flags","dependsOn","isDependedOn","videoSample","audioSample","sps","pps","sequenceParameterSets","pictureParameterSets","Array","slice","width","height","profileIdc","profileCompatibility","levelIdc","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","sample","isLeading","hasRedundancy","paddingValue","isNonSyncSample","degradationPriority","initSegment","fileType","movie","zeroWidthSpace","String","trim","clean","s","replace","sa","Number","isNaN","a","fnToStr","toString","constructorRegex","isES6ClassFn","fnStr","test","e","tryFunctionObject","toStr","Object","fnClass","genClass","hasToStringTag","Symbol","toStringTag","strClass","MAX_TS","RO_THRESH","handleRollover","reference","direction","lastDTS","referenceDTS","type_","discontinuity","findBox","parseType","timescale","startTime","getVideoTrackIds","toUnsigned","path","end","subresults","results","fromCharCode","traks","reduce","version","index","trafs","baseTimes","map","scale","baseTime","isFinite","videoTrackIds","forEach","hdlrs","tkhds","handlerType","getUint8","getUint32","SDPUtils","generateIdentifier","random","substr","localCName","splitLines","blob","split","line","splitSections","parts","part","getDescription","sections","getMediaSections","matchPrefix","prefix","indexOf","parseCandidate","substring","candidate","foundation","component","parseInt","protocol","toLowerCase","priority","ip","address","port","relatedAddress","relatedPort","tcpType","ufrag","usernameFragment","writeCandidate","sdp","toUpperCase","join","parseIceOptions","parseRtpMap","parsed","payloadType","name","clockRate","channels","numChannels","writeRtpMap","pt","preferredPayloadType","parseExtmap","uri","writeExtmap","headerExtension","preferredId","parseFmtp","kv","j","writeFmtp","parameters","keys","params","param","parseRtcpFb","parameter","writeRtcpFb","lines","rtcpFeedback","fb","parseSsrcMedia","sp","ssrc","colon","attribute","parseSsrcGroup","semantics","ssrcs","getMid","mediaSection","mid","parseFingerprint","algorithm","getDtlsParameters","sessionpart","role","fingerprints","writeDtlsParameters","setupType","fp","getIceParameters","iceParameters","password","writeIceParameters","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","mline","rtpmapline","fmtps","writeRtpDescription","kind","caps","maxptime","extension","parseRtpEncodingParameters","secondarySsrc","encodingParameters","hasRed","hasUlpfec","primarySsrc","flows","apt","encParam","codecPayloadType","rtx","JSON","parse","stringify","fec","mechanism","bandwidth","maxBitrate","parseRtcpParameters","rtcpParameters","remoteSsrc","obj","cname","rsize","reducedSize","compound","mux","parseMsid","spec","planB","msidParts","parseSctpDescription","maxMessageSize","parseMLine","maxSizeLine","sctpPort","fmt","sctpMapLines","writeSctpDescription","media","sctp","output","generateSessionId","writeSessionBoilerplate","sessId","sessVer","sessUser","sessionId","user","writeMediaSection","transceiver","iceGatherer","getLocalParameters","dtlsTransport","rtpSender","rtpReceiver","msid","sendEncodingParameters","getDirection","getKind","isRejected","parseOLine","username","sessionVersion","netType","addressType","isValidSDP","charAt","generator","probe","Transmuxer","AudioSegmentStream","VideoSegmentStream","CaptionParser","window","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","groupNalsIntoFrames","nalUnits","currentNal","nalUnitType","keyFrame","groupFramesIntoGops","currentGop","gops","nalCount","extendFirstKeyFrame","createDefaultSample","sampleForFrame","frame","baseDataOffset","h","concatenateNalData","nalsByteLength","numberOfNals","totalByteLength","isPrimitive","isCallable","ES5internalSlots","[[DefaultValue]]","O","actualHint","methods","input","CoalesceStream","mp4","frameUtils","audioFrameUtils","trackDecodeInfo","AdtsStream","H264Stream","AacStream","isLikelyAacData","AUDIO_PROPERTIES","VIDEO_PROPERTIES","arrayEquals","b","generateVideoSegmentTimingInfo","startDts","startPts","endDts","endPts","prependedContentDuration","ptsOffsetFromDts","decodeDuration","presentationDuration","start","options","collectDtsInfo","prop","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","timestamp","calculateTrackBaseMediaDecodeTime","keepOriginalTimestamps","clearDtsInfo","config","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","unshift","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","pop","dtsDistance","nearestGopObj","currentGopObj","halfSecond","allowableOverlap","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","metadata","total","alignGopsWith","newGopsToAlignWith","metadataStream","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","text","audioTrack","flushSource","caption","id3","captions","captionStreams","info","timelineStartPts","endTime","cueTime","dispatchType","hasFlushed","transmuxPipeline_","setupAacPipeline","pipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","pipe","on","setTimestamp","timeStamp","audioSegmentStream","setupTsPipeline","packetStream","parseStream","elementaryStream","videoTimestampRolloverStream","h264Stream","captionStream","videoSegmentStream","setBaseMediaDecodeTime","reset","isAac","resetCaptions","ExpGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","position","workingBytes","availableBytes","Error","skipBits","count","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","seconds","sampleRate","root","factory","__WEBPACK_EXTERNAL_MODULE_video_js__","__WEBPACK_EXTERNAL_MODULE_recordrtc__","modules","installedModules","moduleId","l","m","c","d","o","defineProperty","r","t","mode","__esModule","ns","create","n","object","property","p","./node_modules/@babel/runtime/helpers/assertThisInitialized.js","eval","./node_modules/@babel/runtime/helpers/asyncToGenerator.js","./node_modules/@babel/runtime/helpers/classCallCheck.js","./node_modules/@babel/runtime/helpers/createClass.js","./node_modules/@babel/runtime/helpers/get.js","./node_modules/@babel/runtime/helpers/getPrototypeOf.js","./node_modules/@babel/runtime/helpers/inherits.js","./node_modules/@babel/runtime/helpers/interopRequireDefault.js","./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","./node_modules/@babel/runtime/helpers/setPrototypeOf.js","./node_modules/@babel/runtime/helpers/superPropBase.js","./node_modules/@babel/runtime/helpers/typeof.js","./node_modules/@babel/runtime/regenerator/index.js","./node_modules/global/window.js","./node_modules/regenerator-runtime/runtime.js","./node_modules/webpack/buildin/global.js","./src/css/videojs.record.scss","./src/js/controls/animation-display.js","./src/js/controls/camera-button.js","./src/js/controls/device-button.js","./src/js/controls/picture-in-picture-toggle.js","./src/js/controls/record-canvas.js","./src/js/controls/record-indicator.js","./src/js/controls/record-toggle.js","./src/js/defaults.js","./src/js/engine/convert-engine.js","./src/js/engine/engine-loader.js","./src/js/engine/record-engine.js","./src/js/engine/record-mode.js","./src/js/engine/record-rtc.js","./src/js/event.js","./src/js/hot-keys.js","./src/js/utils/browser-shim.js","./src/js/utils/compare-version.js","./src/js/utils/detect-browser.js","./src/js/utils/file-util.js","./src/js/utils/format-time.js","./src/js/videojs.record.js","0","recordrtc","video.js","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","pusi","payloadOffset","parsePesType","parsePesTime","parseNalUnitType","videoPacketContainsKeyFrame","nalType","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","listeners","listener","off","callbacks","args","dispose","destination","cea708Parser","captionPackets_","ccStreams_","cc","sei","userData","newCaptionPackets","parseSei","escapedRBSP","USER_DATA_REGISTERED_ITU_T_T35","parseUserData","latestDts_","ignoreNextEqualDts_","numSameDts_","parseCaptionPackets","elem","idx","presortIndex","sort","dispatchCea608Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","ccData","CHARACTER_TRANSLATION","42","92","94","95","96","123","124","125","126","127","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","getCharFromCode","code","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","name_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","flushDisplayed","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","row","formatting_","isColorPAC","isNormalChar","content","console","error","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","char","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","ADTS_SAMPLING_FREQUENCIES","frameLength","protectionSkipBytes","frameEnd","oldBuffer","sampleCount","adtsFrameDuration","frameNum","extend","target","source","ES","leftWhitespace","rightWhitespace","S","percentEncode","parseUtf8","decodeURIComponent","parseIso88591","unescape","parseSyncSafeInteger","tagParsers","TXXX","tag","WXXX","url","PRIV","owner","privateData","settings","debug","descriptor","tagSize","bufferSize","chunk","frameStart","frameSize","frameHeader","log","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","syncPoint","swapBuffer","100","110","122","244","44","83","86","118","128","138","139","134","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","expGolombDecoder","deltaScale","lastScale","nextScale","newLength","newData","emulationPreventionBytesPositions","sourceIndex","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","sarRatio","aspectRatioIdc","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","sarScale","isArray","arg","headers","global","win","ERROR_MESSAGE","funcType","that","bound","binder","boundLength","boundArgs","Empty","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","arr","96000","88200","64000","48000","44100","32000","24000","16000","12000","11025","8000","isFunction","fn","string","setTimeout","alert","confirm","prompt","__webpack_exports__","parseUTCTiming","global_window__WEBPACK_IMPORTED_MODULE_0__","global_window__WEBPACK_IMPORTED_MODULE_0___default","isObject","merge","_len","objects","_key","values","k","range","flatten","lists","from","list","findIndexes","errors","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","createCommonjsModule","urlToolkit","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","opts","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","pathParts","exec","builtParts","query","baseURLPath","newPath","lastIndexOf","resolveUrl","baseUrl","relativeUrl","location","href","urlTypeToSegment","_ref","_ref$baseUrl","_ref$source","_ref$range","_ref$indexRange","indexRange","segment","resolvedUri","rangeStr","ranges","startRange","endRange","byterange","byteRangeToString","segmentRange","static","attributes","_attributes$timescale","sourceDuration","dynamic","NOW","clientOffset","availabilityStartTime","_attributes$timescale2","_attributes$start","_attributes$minimumUp","minimumUpdatePeriod","_attributes$timeShift","timeShiftBufferDepth","now","periodStartWC","periodEndWC","periodDuration","segmentCount","availableStart","availableEnd","toSegments","_attributes$timescale3","periodIndex","_attributes$startNumb","startNumber","timeline","time","parseByDuration","_attributes$type","_attributes$timescale4","_segmentRange$type","segments","segmentsFromBase","_attributes$initializ","initialization","_attributes$indexRang","sourceURL","segmentTimeInfo","addSegmentsToPlaylist","playlist","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","referencedSize","subsegmentDuration","mergeDiscontiguousPlaylists","playlists","mergedPlaylists","acc","_acc$name$segments","lang","contentProtection","discontinuityStarts","addSegmentInfoFromSidx","sidxMapping","sidxKey","sidxMatch","formatAudioPlaylist","_attributes","NAME","BANDWIDTH","CODECS","endList","targetDuration","mediaSequence","formatVttPlaylist","_ref2","_attributes2","organizeAudioPlaylists","mainPlaylist","formattedPlaylists","language","label","roleLabel","autoselect","default","firstLabel","organizeVttPlaylists","formatVideoPlaylist","_ref3","_attributes3","AUDIO","SUBTITLES","RESOLUTION","toM3u8","dashPlaylists","_mediaGroups","_dashPlaylists$0$attr","_dashPlaylists$0$attr2","videoOnly","_ref4","mimeType","contentType","audioOnly","_ref5","vttOnly","_ref6","videoPlaylists","audioPlaylists","vttPlaylists","master","allowCache","mediaGroups","VIDEO","subs","getLiveRValue","parseByTimeline","segmentTimeline","_attributes$minimumUp2","_attributes$media","sIndex","repeat","segmentTime","nextS","identifierPattern","identifierReplacement","match","identifier","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","Time","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","_attributes$segmentUr","segmentUrls","segmentUrlMap","segmentUrlObject","generateSegments","segmentAttributes","segmentsFn","segmentInfo","template","base","segmentsInfo","_segmentAttributes","_segmentAttributes$ti","toPlaylists","representations","findChildren","element","childNodes","tagName","getContent","textContent","parseDuration","str","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","durationRegex","_match$slice","year","month","day","hour","minute","second","parseFloat","parseDate","dateRegex","Date","parsers","mediaPresentationDuration","parsedValue","DEFAULT","parseAttributes","el","parseFn","decodeB64ToUint8Array","b64Text","decodedString","atob","keySystemsMap","urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b","urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed","urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95","urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","representation","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","node","keySystem","schemeIdUri","psshNode","pssh","psshBuffer","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","attrs","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","periodAtt","parsedPeriodId","adaptationSets","inheritAttributes","mpd","_options","_options$manifestUri","manifestUri","_options$NOW","_options$clientOffset","periods","stringToMpdXml","manifestString","parser","DOMParser","xml","parseFromString","documentElement","getElementsByTagName","parseUTCTimingScheme","UTCTimingNode","method","SafeParseTuple","reviver","json","err","inspectMp4","textifyMp4","parseMp4Date","parseSampleFlags","nalParse","avcStream","avcView","dataReferenceIndex","getUint16","horizresolution","vertresolution","frameCount","depth","numOfPictureParameterSets","nalSize","configurationVersion","avcProfileIndication","avcLevelIndication","lengthSizeMinusOne","numOfSequenceParameterSets","bufferSizeDB","avgBitrate","esId","streamPriority","decoderConfig","objectProfileIndication","decoderConfigDescriptor","audioObjectType","samplingFrequencyIndex","channelConfiguration","majorBrand","minorVersion","compatibleBrands","dataReferences","escape","nals","creationTime","modificationTime","streamDescriptor","rate","volume","matrix","Uint32Array","nextTrackId","pdin","initialDelay","referenceId","earliestPresentationTime","referenceCount","startsWithSap","sapType","sapDeltaTime","balance","chunkOffsets","entryCount","sampleToChunks","firstChunk","samplesPerChunk","sampleDescriptionIndex","sampleDescriptions","sampleSize","entries","timeToSamples","sampleDelta","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","layer","alternateGroup","defaultSampleDescriptionIndex","sampleDependsOn","sampleIsDependedOn","sampleHasRedundancy","samplePaddingValue","sampleIsDifferenceSample","sampleDegradationPriority","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","url ","graphicsmode","opcolor","Uint16Array","ab","ArrayBuffer","v","z","inspectedMp4","indent","byte","inspect","textify","parseTfdt","parseHdlr","parseTfhd","parseTrun","parseSidx","aacUtils","bytesLeft","tempLength","byteIndex","parseAdtsSize","parseId3TagSize","mapToSample","approximateOffset","findSeiNals","seiNal","lastMatchedSample","matchingSample","parseSamples","truns","allSamples","trackRun","parseCaptionNals","videoTrackId","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","seiNals","headerInfo","parseEmbeddedCaptions","segmentCache","parsedCaptions","isInitialized","isNewInit","timescales","parsedData","cachedSegment","pushNals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","process","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","RecordRTC","mediaStream","RecordRTCConfiguration","startRecording","config2","disableLogs","mediaRecorder","clearRecordedData","record","setState","recordingDuration","handleRecordingDuration","initRecorder","initCallback","Recorder","GetRecorderType","constructor","stopRecording","callback","state","resumeRecording","warn","stop","_callback","warningLog","__blob","bytesToSize","URL","createObjectURL","autoWriteToDisk","getDataURL","dataURL","DiskStorage","Store","pauseRecording","pause","resume","readFile","_blob","postMessage","FileReaderSync","readAsDataURL","_mediaRecorder","Worker","navigator","mozGetUserMedia","reader","FileReader","onload","webWorker","processInWebWorker","onmessage","_function","Blob","worker","revokeObjectURL","counter","onRecordingStopped","onStateChanged","WARNING","returnObject","setRecordingDuration","getBlob","toURL","getInternalRecorder","save","fileName","invokeSaveAsDialog","getFromDisk","setAdvertisementArray","arrayOfWebPImages","advertisement","image","getState","destroy","disableLogsCache","Storage","AudioContextConstructor","close","recorderType","WhammyRecorder","CanvasRecorder","WebAssemblyRecorder","GifRecorder","StereoAudioRecorder","MediaStreamRecorder","getTracks","MediaRecorder","bitsPerSecond","recorder","isChrome","isEdge","isOpera","ReadableStream","isMediaRecorderCompatible","isTypeSupported","MultiStreamRecorder","isSafari","MRecordRTC","addStream","_mediaStream","mediaType","gif","audioRecorder","numberOfAudioChannels","timeSlice","onTimeStamp","newStream","isFirefox","MediaStream","addTrack","videoRecorder","canvas","frameInterval","workerPath","webAssemblyPath","frameRate","bitrate","isSingleRecorder","gifRecorder","quality","blobURL","callback00","webkitURL","_audioDataURL","_videoDataURL","writeToDisk","Fetch","_type","audioDataURL","videoDataURL","gifDataURL","audioBlob","videoBlob","gifBlob","browserFakeUserAgent","userAgent","getUserMedia","document","appendChild","createElement","captureStream","mozCaptureStream","getContext","play","drawImage","toDataURL","style","HTMLVideoElement","hash","screen","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","lastTime","currTime","getTime","timeToCall","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","AudioContext","webkitAudioContext","mozAudioContext","webkitGetUserMedia","msSaveBlob","msSaveOrOpenBlob","opera","isElectron","sizes","toPrecision","file","fileExtension","splitted","fileFullName","round","hyperlink","download","body","click","dispatchEvent","MouseEvent","bubbles","cancelable","versions","electron","setSrcObject","srcObject","mozSrcObject","getSeekableBlob","inputBlob","EBML","Reader","decoder","Decoder","tools","fileReader","ebmlElms","decode","read","refinedMetadataBuf","makeMetadataSeekable","metadatas","cues","metadataSize","newBlob","readAsArrayBuffer","webkitMediaStream","appVersion","verOffset","ix","nAgt","fullVersion","majorVersion","arrayOfBlobs","updateTimeStamp","timestamps","getMimeType","secondObject","clearRecordedDataCB","isMediaStreamActive","active","ended","getArrayOfBlobs","allStates","recorderHints","canRecordMimeType","ondataavailable","recordingCallback","getNativeBlob","onstart","onpause","onresume","onstop","onerror","looper","manuallyStopped","timeslice","getAllStates","checkForInactiveTracks","jsAudioNode","leftchannel","rightchannel","recording","recordingLength","desiredSampRate","mergeLeftRightBuffers","mergeAudioBuffers","cb","interleaved","leftBuffers","rightBuffers","internalInterleavedLength","interpolateArray","newSampleRate","oldSampleRate","fitCount","springFactor","tmp","before","toFixed","after","atPoint","linearInterpolate","mergeBuffers","channelBuffer","rLength","Float64Array","lng","interleave","leftChannel","rightChannel","inputIndex","writeUTFBytes","setUint8","interleavedLength","resultingBufferLength","setUint16","setInt16","noWorker","workerURL","terminate","resetVariables","isAudioProcessStarted","isPaused","context","audioInput","createMediaStreamSource","legalBufferValues","createJavaScriptNode","createScriptProcessor","connect","intervalsBasedBuffers","left","right","onaudioprocess","disconnect","onAudioProcessDataAvailable","onAudioProcessStarted","inputBuffer","getChannelData","chLeft","Float32Array","chRight","createMediaStreamDestination","htmlElement","html2canvas","isCanvasSupportsStreamCapturing","item","globalCanvas","mediaStreamRecorder","isRecording","_isChrome","webkitRTCPeerConnection","chrome","chromeVersion","matchArray","useWhammyRecorder","HTMLCanvasElement","CanvasRenderingContext2D","canvasMediaStream","webkitCaptureStream","mdStream","whammy","drawCanvasFrame","getWebPImages","nodeName","framesLength","framesRemaining","onEncodingCallback","webp","compile","isPausedRecording","cloneCanvas","newCanvas","grabMouse","showMousePointer","onrendered","Whammy","Video","drawFrames","paused","isStopDrawing","asyncLoop","loop","functionToLoop","dropBlackFrames","_frames","_framesToCheck","_pixTolerance","_frameTolerance","localCanvas","context2d","resultFrames","checkUntilNotBlack","endCheckFrame","sampleColor","g","maxColorDifference","sqrt","pixTolerance","frameTolerance","doNotCheckNext","f","matchPixCount","endPixCheck","maxPixCount","finishImage","Image","imageData","getImageData","pix","currentColor","colorDifference","src","cloneNode","onloadedmetadata","muted","_this","WhammyVideo","whammyInWebWorker","ArrayToWebM","checkFrames","clusterMaxDuration","doubleToString","frameNumber","clusterTimecode","clusterFrames","clusterDuration","clusterCounter","cluster","getClusterData","generateEBML","block","makeSimpleBlock","discardable","invisible","keyframe","lacing","trackNum","timecode","numToBuffer","num","strToBuffer","bitsToBuffer","pad","ebml","len","zeroes","sizeToString","padded","out","parseWebP","riff","VP8","RIFF","WEBP","getStrLength","unpadded","parseRIFF","chunks","webm","add","indexedDB","open","db","dbVersion","dbName","request","onError","onsuccess","setVersion","createObjectStore","putInDB","onupgradeneeded","dataBase","dataStoreName","transaction","getFromStore","portionName","objectStore","put","GIFEncoder","script","isHTMLObject","drawVideoFrame","clearedRecordedData","lastAnimationFrame","lastFrameTime","onGifPreview","gifEncoder","addFrame","isLoadedMetaData","offsetWidth","offsetHeight","setRepeat","setDelay","setQuality","onGifRecordingStarted","bin","autoplay","MultiStreamsMixer","arrayOfMediaStreams","elementClass","videos","isStopDrawingFrames","opacity","zIndex","top","className","useGainNode","drawVideosToCanvas","videosLength","fullcanvas","remaining","onRender","getMixedStream","mixedVideoStream","getMixedVideoStream","mixedAudioStream","getMixedAudioStream","capturedStream","resetVideoStreams","videoStream","audioContext","audioSources","gainNode","createGain","gain","audioTracksLength","audioSource","audioDestination","getVideo","streams","startDrawingFrames","appendStreams","releaseStreams","clearRect","mixer","getAllVideoTracks","previewStream","addStreams","getMixer","RecordRTCPromisesHandler","recordRTC","Promise","resolve","reject","cameraStream","controller","cvs","onplaying","ctx","frameTimeout","enqueue","addEventListener","timebaseDen","realtime","pipeTo","WritableStream","write","arrayOfBuffers","fetch","then","arrayBuffer","autoKeyword","directionSetting","","lr","rl","alignSetting","middle","findDirectionSetting","dir","findAlignSetting","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","defineProperties","pauseOnExit","region","vertical","setting","SyntaxError","snapToLines","lineAlign","positionAlign","displayState","getCueAsHTML","convertCueToDOMTree","keysShim","isArgs","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","equalsConstructorPrototypeIfNotBuggy","isArguments","isString","theKeys","skipProto","skipConstructor","define","getPolyfill","polyfill","modulo","remain","$SyntaxError","predicates","Property Descriptor","recordType","argumentName","predicate","boundTrim","doccy","topLevel","minDoc","forEachArray","iterator","receiver","forEachString","forEachObject","thisArg","_objCreate","F","ParsingError","errorData","message","parseTimeStamp","computeSeconds","Settings","parseOptions","keyValueDelim","groupDelim","groups","parseCue","cue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","consumeCueSettings","alt","vals","vals0","integer","percent","skipWhitespace","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","unescape1","shouldAdd","current","localName","annotation","rootDiv","tagStack","createTextNode","parentNode","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","charCode","currentRange","determineBidi","cueDiv","nodeStack","pushNodes","nextTextNode","innerText","computeLinePos","textTrackList","mediaElement","trackList","StyleBox","CueStyleBox","styleOptions","styles","color","backgroundColor","bottom","display","writingMode","unicodeBidi","applyStyles","div","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","getBoundingClientRect","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","step","maxPosition","initialAxis","calculatedPercentage","toCSSCompatValues","val","unit","toMove","overlaps","b2","container","intersectArea","getSimpleBoxPosition","ret","StringDecoder","encodeURIComponent","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","processCues","overlay","firstChild","removeChild","paddedOverlay","shouldCompute","margin","fontSize","Parser","TextDecoder","reportOrThrowError","onparsingerror","collectNextLine","pos","parseRegion","xy","anchor","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","ontimestampmap","MPEGTS","LOCAL","parseHeader","alreadyCollectedLine","hasSubstring","oncue","onflush","callee","origKeys","originalKeys","keysWorksWithArguments","aac","PES_TIMESCALE","parsePsi_","table","parseAudioPes_","pesType","endLoop","parseVideoPes_","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","parseAacTimestamp","parseSampleRate","audioTimescale","inspectTs_","isAacData","RBSP_TRAILING_BITS","payloadSize","keyCode","searchInput","hasKeyCode","which","names","search","foundNamedKey","codes","aliases","isEventKey","nameOrCode","backspace","tab","enter","ctrl","pause/break","caps lock","esc","space","page up","page down","home","up","down","insert","delete","command","left command","right command","numpad *","numpad +","numpad -","numpad .","numpad /","num lock","scroll lock","my computer","my calculator",";","=",",","-",".","/","`","[","\\","]","'","windows","⇧","⌥","⌃","⌘","ctl","control","option","break","return","spc","spacebar","pgup","pgdn","ins","del","cmd","title","alias","asyncFn","asyncGen","ThrowTypeError","getOwnPropertyDescriptor","hasSymbols","getProto","getPrototypeOf","__proto__","generatorFunction","asyncFunction","asyncGenFunction","asyncGenIterator","TypedArray","INTRINSICS","$ %Array%","$ %ArrayBuffer%","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","Boolean","$ %BooleanPrototype%","$ %DataView%","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","$ %encodeURI%","encodeURI","$ %encodeURIComponent%","$ %Error%","$ %ErrorPrototype%","$ %eval%","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","$ %Float32ArrayPrototype%","$ %Float64Array%","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","Int32Array","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","Map","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","$ %parseInt%","$ %Promise%","$ %PromisePrototype%","$ %PromiseProto_then%","$ %Promise_all%","all","$ %Promise_reject%","$ %Promise_resolve%","$ %Proxy%","Proxy","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","ReferenceError","$ %ReferenceErrorPrototype%","$ %Reflect%","Reflect","$ %RegExp%","RegExp","$ %RegExpPrototype%","$ %Set%","Set","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","Uint8ClampedArray","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","$ %Uint16ArrayPrototype%","$ %Uint32Array%","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","render","_vm","_h","$createElement","_c","_self","staticClass","_v","class","showVideo","timeShow","recordingStarted","onVideoRecording","recordingEnded","onRecordingEnded","_s","countDown","_e","btnType","btnVariant","btnLabel","preventFunction","$event","linking","staticRenderFns","VideoJSRecordvue_type_template_id_58f2737c_render","playsinline","VideoJSRecordvue_type_template_id_58f2737c_staticRenderFns","logDisabled_","deprecationWarnings_","extractVersion","uastring","expr","wrapPeerConnectionEvent","eventNameToWrap","wrapper","RTCPeerConnection","proto","nativeAddEventListener","nativeEventName","wrappedCallback","modifiedEvent","_eventMap","nativeRemoveEventListener","removeEventListener","unwrappedCb","[object Object]","disableLog","bool","disableWarnings","deprecated","oldMethod","newMethod","detectBrowser","browser","isSecureContext","RTCIceGatherer","mediaDevices","supportsUnifiedPlan","RTCRtpTransceiver","compactObject","accumulator","isObj","isEmptyObject","assign","walkStats","stats","resultSet","endsWith","filterStats","outbound","streamStatsType","filteredResult","trackStats","trackIdentifier","trackStat","getusermedia_logging","shimGetUserMedia","browserDetails","constraintsToChrome_","mandatory","optional","ideal","exact","oldname_","oc","mix","advanced","shimConstraints_","constraints","func","remap","face","facingMode","getSupportedFacingModeLies","getSupportedConstraints","matches","enumerateDevices","devices","dev","find","some","includes","deviceId","shimError_","PermissionDeniedError","PermissionDismissedError","InvalidStateError","DevicesNotFoundError","ConstraintNotSatisfiedError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","TabCaptureError","ScreenCaptureError","DeviceCaptureError","constraint","constraintName","getUserMedia_","onSuccess","origGetUserMedia","cs","getAudioTracks","getVideoTracks","DOMException","shimGetDisplayMedia","getSourceId","getDisplayMedia","sourceId","widthSpecified","heightSpecified","frameRateSpecified","chromeMediaSource","chromeMediaSourceId","maxFrameRate","maxWidth","maxHeight","shimMediaStream","shimOnTrack","_ontrack","origSetRemoteDescription","setRemoteDescription","_ontrackpoly","te","getReceivers","Event","shimGetSendersWithDtmf","shimSenderWithDtmf","pc","dtmf","_dtmf","createDTMFSender","_pc","getSenders","_senders","origAddTrack","sender","origRemoveTrack","removeTrack","origAddStream","origRemoveStream","removeStream","RTCRtpSender","origGetSenders","senders","shimGetStats","origGetStats","getStats","selector","onSucc","onErr","fixChromeStats_","response","standardReport","reports","report","standardStats","localcandidate","remotecandidate","stat","makeMapStats","successCallbackWrapper_","shimSenderReceiverGetStats","RTCRtpReceiver","origGetReceivers","receivers","srcElement","MediaStreamTrack","shimAddTrackRemoveTrackWithNative","getLocalStreams","_shimmedLocalStreams","streamId","alreadyExists","existingSenders","newSenders","newSender","shimAddTrackRemoveTrack","origGetLocalStreams","nativeStreams","_reverseStreams","_streams","replaceInternalStreamId","internalId","externalStream","internalStream","RTCSessionDescription","replaceExternalStreamId","signalingState","oldStream","nativeMethod","methodObj","isLegacyCall","origSetLocalDescription","setLocalDescription","origLocalDescription","isLocal","streamid","hasTrack","shimPeerConnection","RTCIceCandidate","nativeAddIceCandidate","addIceCandidate","fixNegotiationNeeded","filterIceServers","iceServers","edgeVersion","hasTurn","server","urls","validTurn","startsWith","getusermedia_shimGetUserMedia","catch","getdisplaymedia_shimGetDisplayMedia","edge_shim_shimPeerConnection","origMSTEnabled","ev","enabled","RTCDtmfSender","RTCDTMFSender","RTCPeerConnectionShim","rtcpeerconnection_default","shimReplaceTrack","replaceTrack","setTrack","firefox_getusermedia_shimGetUserMedia","nativeGetUserMedia","getSettings","nativeGetSettings","applyConstraints","nativeApplyConstraints","firefox_getdisplaymedia_shimGetDisplayMedia","preferredMediaSource","mediaSource","firefox_shim_shimOnTrack","RTCTrackEvent","firefox_shim_shimPeerConnection","mozRTCPeerConnection","modernStatsTypes","inboundrtp","outboundrtp","candidatepair","nativeGetStats","shimSenderGetStats","shimReceiverGetStats","shimRemoveStream","shimRTCDataChannel","DataChannel","RTCDataChannel","shimLocalStreamsAPI","_localStreams","_addTrack","shimRemoteStreamsAPI","getRemoteStreams","_remoteStreams","_onaddstream","_onaddstreampoly","shimCallbacksAPI","origCreateOffer","createOffer","origCreateAnswer","createAnswer","successCallback","failureCallback","promise","withCallback","safari_shim_shimGetUserMedia","_getUserMedia","shimConstraints","errcb","shimRTCIceServerUrls","OrigPeerConnection","pcConfig","pcConstraints","newIceServers","generateCertificate","shimTrackEventTransceiver","shimCreateOfferLegacy","offerOptions","offerToReceiveAudio","audioTransceiver","getTransceivers","setDirection","addTransceiver","offerToReceiveVideo","videoTransceiver","shimRTCIceCandidate","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","sdp_default","augmentedCandidate","toJSON","sdpMid","sdpMLineIndex","shimMaxMessageSize","_sctp","sctpInDescription","mLine","getRemoteFirefoxVersion","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","getMaxMessageSize","sdpSemantics","getConfiguration","canSendMMS","remoteMMS","POSITIVE_INFINITY","shimSendThrowTypeError","wrapDcSend","dc","origDataChannelSend","send","readyState","origCreateDataChannel","createDataChannel","channel","shimConnectionState","completed","checking","iceConnectionState","_onconnectionstatechange","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","removeAllowExtmapMixed","nativeSRD","adapterFactory","shimChrome","shimFirefox","shimEdge","shimSafari","logging","adapter","commonShim","common_shim_namespaceObject","chrome_shim_namespaceObject","browserShim","firefox_shim_namespaceObject","edge_shim_namespaceObject","safari_shim_namespaceObject","VideoJSRecordvue_type_script_lang_js_","player","controls","fluid","controlBar","volumePanel","plugins","maxLength","videoRecorderType","videoMimeType","mounted","video_es","msg","VERSION","getPluginVersion","RecordRTC_default","getDevice","$emit","recordedData","saveAs","deviceErrorCode","beforeDestroy","components_VideoJSRecordvue_type_script_lang_js_","componentNormalizer","VideoJSRecord","RecordVideovue_type_script_lang_js_","components","videoJsRecord","props","computed","$route","meta","publicRegistration","$router","countDownTimer","register_customer_RecordVideovue_type_script_lang_js_","RecordVideo_component","maxSegmentPts","maxSegmentDts","parseHeaders","xtend","isEmpty","initParams","createXHR","_createXHR","called","readystatechange","xhr","loadFunc","getBody","responseText","getXml","isJson","errorFunc","evt","timeoutTimer","statusCode","failureResponse","aborted","status","useXDR","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","sync","onreadystatechange","onprogress","onabort","ontimeout","withCredentials","timeout","abort","setRequestHeader","responseType","beforeSend","responseXML","firefoxBugTakenEffect","noop","fixStatsType","dtlsRole","_initialTrackId","getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","findCodecByPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","lCodec","rCodec","lHeaderExtension","rHeaderExtension","isActionAllowedInSignalingState","action","offer","answer","maybeAddCandidate","iceTransport","alreadyAdded","getRemoteCandidates","remoteCandidate","addRemoteCandidate","makeError","NotSupportedError","InvalidAccessError","OperationError","addTrackToStreamAndFireEvent","MediaStreamTrackEvent","removeTrackFromStreamAndFireEvent","fireAddTrack","trackEvent","_dispatchEvent","_eventTarget","createDocumentFragment","canTrickleIceCandidates","needNegotiation","localStreams","remoteStreams","_localDescription","_remoteDescription","iceGatheringState","usingBundle","bundlePolicy","rtcpMuxPolicy","iceTransportPolicy","_iceGatherers","iceCandidatePoolSize","gatherPolicy","_config","transceivers","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onconnectionstatechange","onicegatheringstatechange","onnegotiationneeded","ondatachannel","_emitGatheringStateChange","_createTransceiver","doNotAdd","hasBundleTransport","recvEncodingParameters","associatedRemoteMediaStreams","wantReceive","transports","_createIceAndDtlsTransports","_maybeFireNegotiationNeeded","clonedStream","clone","clonedTrack","_createIceGatherer","bufferedCandidateEvents","bufferCandidates","_gather","onlocalcandidate","cand","serializedCandidate","complete","every","RTCIceTransport","onicestatechange","_updateIceConnectionState","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","_disposeIceAndDtlsTransports","_transceive","recv","encodings","receive","isIceLite","rejected","remoteIceParameters","remoteDtlsParameters","_updateSignalingState","receiverList","iceOptions","remoteMsid","isComplete","cands","setTransport","setRemoteCandidates","hasRtx","getCapabilities","isNewTrack","nativeTrack","sid","newState","states","new","closed","connected","disconnected","failed","connecting","numAudioTracks","numVideoTracks","remoteCodec","hdrExt","remoteExtensions","rHdrExt","getLocalCandidates","mediaSectionsInOffer","localTrack","candidateString","senderOrReceiver","promises","allStats","ortcObjects","ortcObjectName","nativeGetstats","nativeStats","mapStats","_extends","_inheritsLoose","subClass","superClass","_assertThisInitialized","_proto","LineStream","_Stream","nextNewline","attributeSeparator","keyvalue","attr","ParseStream","customParsers","tagMappers","_this2","newLines","mapper","mappedLine","newLine","tagType","playlistType","URI","BYTERANGE","_attributes$BYTERANGE","resolution","dateTimeString","dateTimeObject","IV","PRECISE","addParser","_this3","expression","customType","dataParser","addTagMapper","mapFn","lineStream","currentMap","uris","currentUri","defaultMediaGroups","CLOSED-CAPTIONS","currentTimeline","manifest","entry","mediaGroup","rendition","allow-cache","endlist","inf","discontinuitySequence","METHOD","iv","media-sequence","discontinuity-sequence","playlist-type","stream-inf","TYPE","mediaGroupType","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","program-date-time","targetduration","totalduration","totalDuration","timeOffset","precise","cue-out","cueOut","cue-out-cont","cueOutCont","cue-in","cueIn","comment","custom","unpad","classCallCheck","instance","Constructor","createClass","protoProps","staticProps","inherits","setPrototypeOf","possibleConstructorReturn","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","_tables","encKey","decKey","keyLen","rcon","decrypt","encrypted0","encrypted1","encrypted2","encrypted3","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","aes_decrypter_es_Stream","_length","_i","AsyncStream","jobs","delay","timeout_","processJob_","job","ntoh","word","encrypted","initVector","encrypted32","decipher","decrypted","decrypted32","init0","init1","init2","init3","wordIx","aes_decrypter_es_Decrypter","Decrypter","done","STEP","asyncStream_","decryptChunk_","video_es_version","video_es_inheritsLoose","_setPrototypeOf","isNativeReflectConstruct","construct","sham","_construct","Parent","Class","video_es_assertThisInitialized","_taggedTemplateLiteralLoose","strings","raw","video_es_history","video_es_LogByTypeFactory","level","lvl","levels","lvlRegExp","window_default","createLogger","logByType","subname","history","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","video_es_log","createLogger$1","video_es_toString","each","initial","accum","video_es_assign","sources","isPlain","video_es_computedStyle","getComputedStyle","_templateObject","isNonBlankString","throwIfWhitespace","classRegExp","isReal","document_default","isEl","nodeType","isInFrame","parent","createQuerier","querySelector","video_es_createEl","properties","getOwnPropertyNames","propName","tsml_default","setAttribute","attrName","appendContent","prependTo","child","insertBefore","hasClass","classToCheck","classList","contains","addClass","classToAdd","removeClass","classToRemove","remove","toggleClass","classToToggle","setAttributes","attrValue","removeAttribute","getAttributes","knownBooleans","attrVal","getAttribute","blockTextSelection","focus","onselectstart","unblockTextSelection","rect","findPosition","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","getPointerPosition","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","isTextNode","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","freeze","createEl","_guid","newGUID","elData","elIdAttr","performance","getData","hasData","removeData","_cleanUpEvents","handlers","dispatcher","detachEvent","disabled","_handleMultipleEvents","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","_supportsPassive","passiveEvents","guid","handlersCopy","passive","attachEvent","removeType","elemData","ownerDocument","targetData","one","any","videojs","Events","_windowLoaded","video_es_autoSetup","autoSetup","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","wait","vjs","EVENT_MAP","video_es_createStyleElement","setTextContent","styleSheet","cssText","uid","video_es_throttle","last","throttled","video_es_debounce","immediate","cancel","debounced","_later","EventTarget","allowedEvents_","ael","queueTrigger","oldTimeout","isEvented","eventBusEl_","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","validateEventType","validateListener","normalizeListenArgs","isTargetingSelf","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","largs","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","stateUpdates","changes","to","stateful","defaultState","handleStateChanged","toTitleCase","titleCaseEquals","str1","str2","mergeOptions","video_es_Component","Component","ready","player_","parentComponent_","options_","id_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","defaultValue","languages","primaryCode","primaryLang","localizedString","contentEl","contentEl_","children","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","handleAdd","playerOptions","newChild","Tech","wchild","isTech","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","computedStyle","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","touches","xdiff","ydiff","touchDistance","noTap","touchTime","reportUserActivity","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","intervalId","_this4","supportsRaf_","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","USER_AGENT","webkitVersionMap","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","IS_WINDOWS","TOUCH_ENABLED","maxTouchPoints","DocumentTouch","rangeCheck","fnName","maxIndex","getRange","valueIndex","rangeIndex","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","bufferedDuration","browserApi","FullscreenApi","prefixed","apiMap","specApi","video_es_i","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","textTracksToJson","tech","trackEls","trackObjs","trackEl","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","video_es_ModalDialog","_Component","ModalDialog","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","descEl_","tabIndex","aria-describedby","aria-hidden","aria-label","previouslyActiveEl_","fillAlways","fill","wasPlaying_","pauseOnOpen","hadControls_","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","keycode_default","focusIndex","focusableEls","focusableEls_","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks_","rtrack","getTrackById","video_es_event","change","addtrack","removetrack","disableOthers","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers$1","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","nonLanguageTextTrackKind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","main","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","TextTrackMode","hidden","showing","Track","trackProps","_loop","video_es_parseUrl","addToBody","host","innerHTML","details","video_es_getAbsoluteURL","getFileExtension","splitPathRe","video_es_isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseUrl","getAbsoluteURL","isCrossOrigin","video_es_parseCues","srcContent","groupCollapsed","groupEnd","video_es_loadTrack","xhr_default","responseBody","loaded_","tech_","loadHandler","errorHandler","video_es_TextTrack","_Track","TextTrack","srclang","default_","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","load","NORMAL","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","video_es_Tech","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","browser_index_default","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","setPoster","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","next","setSourceHelper","setTech","mw","video_es_get","reduceRight","middlewareIterator","video_es_set","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","seekable","allowedSetters","setVolume","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","_middleware","mwrest","_src","MimetypesKind","opus","ogv","mov","m4v","mkv","m4a","mp3","oga","m3u8","jpg","jpeg","png","svg","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","techOrder","techName","isSupported","loadTech_","video_es_ClickableComponent","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","PosterImage","_ClickableComponent","update","poster","setSrc","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","hex","tryUpdateStyle","video_es_TextTrackDisplay","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","userPref","selectedLanguage","aria-atomic","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","video_es_Button","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","video_es_CloseButton","CloseButton","video_es_PlayToggle","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","guide","gm","gh","setFormatTime","customImplementation","resetFormatTime","formatTime","video_es_TimeDisplay","TimeDisplay","throttledUpdateContent","updateContent","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","textEl_","atLiveEdge","seekToLiveEdge","video_es_Slider","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","calculateDistance","stepBack","stepForward","vertical_","LoadProgressBar","partEls_","isLive","seekableEnd","bufferedEnd","controlTextPercentage","percentify","rounded","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","updateTime","rafId_","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","UPDATE_REFRESH_INTERVAL","video_es_SeekBar","_Slider","SeekBar","setEventHandlers_","updateInterval","enableInterval_","disableInterval_","toggleVisibility_","update_","liveCurrentTime","offsetParent","getCurrentTime_","seekableStart","videoWasPlaying","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","video_es_PictureInPictureToggle","PictureInPictureToggle","handlePictureInPictureChange","pictureInPictureEnabled","isInPictureInPicture","exitPictureInPicture","video_es_FullscreenToggle","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","video_es_MuteToggle","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","video_es_Menu","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","haveTitle","video_es_MenuButton","MenuButton","buttonClass","menu","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","video_es_MenuItem","MenuItem","selectable","isSelected_","multiSelectable","_selected","video_es_TextTrackMenuItem","_MenuItem","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","video_es_TextTrackSettings","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","localStorage","getItem","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","video_es_ResizeManager","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","resizeObserver","video_es_LiveTracker","LiveTracker","reset_","handleDurationchange","handleVisibilityChange","stopTracking","startTracking","isBehind_","timeupdateSeen_","seekableIncrement","seekableIncrement_","liveEdgeWindow","trackLive_","pastSeekEnd_","newSeekEnd","lastSeekEnd_","pastSeekEnd","behindLiveEdge","behindLiveEdge_","isTracking","hasStarted","trackingInterval_","handleTimeupdate","seekableEnds","seekableStarts","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","dummy","docFrag","Element","getDescriptor","video_es_getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","video_es_getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$1","video_es_Html5","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","elTracks","proxyNativeTracksForType_","techTracks","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","tagAttributes","techId","playerId","preload","settingsAttrs","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","timing","navigationStart","TEST_VID","video_es_track","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","_templateObject$2","patchCanPlayType","unpatchCanPlayType","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","video_es_Player","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","scrubbing_","fluid_","updateStyleEl_","playerOptionsCopy","middleware_","flexNotSupported_","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","fullscreenchange","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","aspectRatio","links","linkEl","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechDoubleClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","manualAutoplay_","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","inAllowedEls","userActions","doubleClick","userWasActive","toggleFullscreenClass_","isFs","fullscreenElement","fullscreen","msMatchesSelector","togglePictureInPictureClass_","inactivityTimeout","defaultPlaybackRate","_this8","play_","_this9","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","isScrubbing","liveui","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fullscreenOptions","fsOptions","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","excludeElement","excludedTags","allowedInputTypes","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","foundSourceAndTech","_this10","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","flip","finder","sourceOrder","_this11","middlewareSource","src_","notSupportedMessage","_this12","sourceTech","_this13","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_this$controlBar","durationDisplay","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","isAudio_","_obj","createModal","_this14","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this15","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","tuple_default","childName","video_es_navigator","html5","flash","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","createBasicPlugin","plugin","basicPluginWrapper","createPluginFactory","PluginSubClass","getEventHash","Plugin","isBasic","registerPlugin","deregisterPlugin","getPlugins","usingPlugin","hasPlugin","_inherits","super_","subClassMethods","normalizeId","videojs$1","getPlayer","defaultView","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","video_es_style","video_es_head","getPlayers","nId","_tag","_player","getAllPlayers","comp","writeable","addLanguage","_mergeOptions","createTimeRange","dom","video_es_resolveUrl","url_toolkit_default","resolveManifestRedirect","handleManifestRedirect","req","responseURL","video_es_classCallCheck","video_es_createClass","get$1","video_es_inherits","video_es_possibleConstructorReturn","slicedToArray","sliceIterator","_arr","_n","_d","mergeOptions$1","EventTarget$1","log$1","forEachMediaGroup","groupKey","labelKey","mediaProperties","updateSegments","resolveSegmentUris","baseUri","updateMaster","mergedPlaylist","setupMediaPlaylists","resolveMediaGroupUris","refreshDelay","lastSegment","video_es_PlaylistLoader","PlaylistLoader","srcUrl","hls","_options$withCredenti","_options$handleManife","handleManifestRedirects","hls_","hlsOptions","customTagParsers","customTagMappers","playlistRequestError","haveMetadata","startingState","customParser","media_","mediaUpdateTimeout","stopRequest","finalRenditionTimeout","oldRequest","isFinalRendition","mediaChange","started","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","backward","forward","video_es_duration","sumDurations","durations","safeLiveIndex","distanceFromEnd","safeDistance","playlistEnd","useSafeLiveEnd","isWholeNumber","roundSignificantDigit","increment","numDecimalDigits","ceilLeastSignificantDigit","floorLeastSignificantDigit","getMediaInfoForTime","numSegments","mediaIndex","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isDisabled","isAes","isFmp4","estimateSegmentRequestTime","segmentDuration","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","Playlist","videojsXHR","mergeOptions$1$1","xhrFactory","XhrFunction","beforeRequest","Hls","newOptions","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","originalAbort","byterangeStr","byterangeStart","byterangeEnd","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","isView","initSegmentId","segmentKeyId","hexDump","ascii","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","transmuxerPrependedSeconds","videoTimingInfo","transmuxedStart","transmuxedPresentationStart","startOfSegment","offsetFromSegmentStart","originalSegmentVideoDuration","transmuxedPresentationEnd","findSegmentForProgramTime","programTime","nextSegmentStart","lastSegmentStart","lastSegmentDuration","lastSegmentEnd","estimatedStart","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","programDateTime","segmentTimeEpoch","programTimeEpoch","verifyProgramDateTimeTags","getProgramTime","_ref$time","matchedSegment","seekTime","programTimeObject","mediaSeconds","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","mediaOffset","seekToTime","seekedCallback","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","createTextTracksIfNecessary","sourceBuffer","inbandTextTracks_","metadataTrack_","inBandMetadataTrackDispatchType","removeCuesFromTrack","deprecateOldCue","durationOfVideo","dur","video_es_addTextTrackData","sourceHandler","captionArray","metadataArray","Cue","WebKitDataCue","timestampOffset","videoDuration","mediaSource_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","TARGET","SCRIPT_TYPE","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","msURL","shimWorker","filename","forceFallback","objURL","createSourceObject","wrapTerminate","selfShim","isThisThread","testWorker","testArray","term","TransmuxWorker","document$$1","_findBox","mp4Generator","toUnsigned$1","silence","ONE_SECOND_IN_TS$1","generateSampleTable$1","ONE_SECOND_IN_TS$2","captionPacketParser","_char","streamTypes","_MetadataStream","timestampRolloverStream","_TransportPacketStream","_TransportParseStream","_ElementaryStream","TimestampRolloverStream$1","stream$$1","_AdtsStream","m2ts_1","_H264Stream","_NalByteStream","expGolomb","_AacStream","ADTS_SAMPLING_FREQUENCIES$1","parseSyncSafeInteger$1","percentEncode$1","parseIso88591$1","header","returnSize","footerPresent","lowThree","highTwo","parseType$1","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","isLikelyAacData$1","_textifyMp","transmuxer","parseType$2","parse$$1","_byte","mp4Inspector$$1","discardEmulationPreventionBytes$1","CaptionStream$1","CaptionParser$$1","captionStream$$1","captionParser","wireTransmuxerEvents","initArray","typedArray","gopInfo","videoSegmentTimingInfo","MessageHandlers","appendStart","TransmuxerWorker","messageHandlers","transmuxerWorker","defaultCodecs","videoCodec","videoObjectTypeIndicator","audioProfile","translateLegacyCodecs","orig","profile","avcLevel","profileHex","avcLevelHex","parseCodecs","codecCount","mapLegacyAvcCodecs","codecString","makeMimeTypeString","getContainerType","getCodecs","mediaAttributes","audioProfileFromDefault","audioGroupId","audioGroup","audioType","mimeTypesForPlaylist","containerType","codecInfo","isMuxed","isMaat","groupId","codecStrings","justAudio","justVideo","bothVideoAudio","parseContentType","isAudioCodec","isVideoCodec","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","videoBuffer","audioBuffer","audioDisabled","arity","extents","videoBuffered","audioBuffered","makeWrappedSourceBuffer","addSourceBuffer","updating","realBuffer_","VirtualSourceBuffer","_videojs$EventTarget","timestampOffset_","pendingBuffers_","bufferUpdating_","codecs_","audioCodec_","videoCodec_","audioDisabled_","appendAudioInitSegment_","gopBuffer_","timeMapping_","safeAppend_","transmuxer_","data_","done_","appendGopInfo_","videoSegmentTimingInfo_","videoBuffer_","audioBuffer_","appendWindowStart","processPendingSegments_","timingInfo","timingInfoInSeconds","presentation","codecProperty","nativeMediaSource_","shouldTrigger","sortedSegments","segmentObj","createRealSourceBuffers_","triggerUpdateend","concatAndAppendSegments_","destinationBuffer","tempBuffer","appendBuffer","originalError","video_es_HtmlMediaSource","HtmlMediaSource","MediaSource","activeSourceBuffers_","sourceBuffers","updateActiveSourceBuffers_","disableCombined","disableAudioOnly","onPlayerMediachange_","onHlsReset_","onHlsSegmentTimeMapping_","url_","sourcebuffer","parsedType","urlCount","mediaSources","video_es_open","msObjectURL","swfId","video_es_supportsNativeMediaSources","supportsNativeMediaSources","URL$1","objectUrlPrefix","EventTarget$1$1","mergeOptions$2","updateMaster$1","oldMaster","newMaster","noChanges","playlistUpdate","group","_playlistUpdate","generateSidxKey","sidxInfo","sidxByteRangeEnd","equivalentSidx","neitherMap","equivalentMap","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","video_es_filterChangedSidxMappings","masterXml","mpd_parser_es","videoSidx","mediaGroupSidx","requestSidx_","sidxRange","finishProcessingFn","sidxRequestOptions","video_es_DashPlaylistLoader","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","setupChildLoader","masterPlaylistLoader_","childPlaylist_","minimumUpdatePeriodTimeout_","mediaRequest_","doneFn","mp4_inspector_default","sidxRequestFinished_","masterXml_","clientOffset_","phonyUri","_phonyUri","haveMaster_","date","masterLoaded_","syncClientServerClock_","onClientServerClockSync_","utcTiming","serverTime","parseMasterXml","hasPendingRequest","updatedMaster","mediaUri","logger","video_es_noop","SourceUpdater","sourceBufferEmitter","callbacks_","pendingCallback_","processedAppend_","mimeType_","logger_","createSourceBuffer_","sourceBuffer_","start_","started_","onUpdateendCallback_","pendingCallback","removing","runCallback_","queueCallback_","videoSegmentTimingInfoCallback","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","loaded","handleErrors","handleKeyResponse","errorObj","video_es_handleInitSegmentResponse","probe_default","handleSegmentResponse","encryptedBytes","fmp4Captions","decryptSegment","decrypter","decryptionHandler","requestId","keyBytes","waitForCompletion","didError","endOfAllRequests","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","decryptionWorker","keyRequestOptions","keyRequestCallback","keyXhr","initSegmentOptions","initSegmentRequestCallback","initSegmentXhr","segmentRequestOptions","segmentRequestCallback","segmentXhr","video_es_safeGetComputedStyle","stableSort","sortFn","newArray","cmp","video_es_comparePlaylistBandwidth","leftBandwidth","rightBandwidth","video_es_comparePlaylistResolution","leftWidth","rightWidth","video_es_simpleSelector","playerBandwidth","playerWidth","playerHeight","limitRenditionByPlayerDimensions","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","chosenRep","lastBandwidthSelector","systemBandwidth","minRebufferMaxBandwidthSelector","duration$$1","syncController","compatiblePlaylists","enabledPlaylists","bandwidthPlaylists","rebufferingEstimates","getSyncPoint","numRequests","requestTimeEstimate","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","playlistsWithVideo","createCaptionsTrackIfNotExists","inbandTextTracks","addCaptionData","CHECK_BUFFER_DELAY","detectEndOfStream","segmentIndex","appendedLastSegment","finite","illegalMediaSwitch","loaderType","startingMedia","newSegmentMedia","containsAudio","containsVideo","safeBackBufferTrimTime","seekable$$1","removeToTime","segmentInfoString","_segmentInfo$segment","_segmentInfo$playlist","seq","_segmentInfo$playlist2","video_es_SegmentLoader","SegmentLoader","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","currentTime_","seekable_","seeking_","loaderType_","startingMedia_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceType","state_","checkBufferTimeout_","currentTimeline_","pendingSegment_","sourceUpdater_","xhrOptions_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","captionParser_","decrypter_","syncController_","syncPoint_","ended_","fetchAtBuffer_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","abort_","monitorBuffer_","abortRequests","_error","set$$1","storedMap","storedKey","playlist_","setDateTimeMapping","couldBeginLoading_","init_","sourceBufferEmitter_","resetEverything","newPlaylist","oldPlaylist","syncInfo","oldId","mediaSequenceDiff","saveExpiredSegmentInfo","resyncLoader","_mimeType","resetLoader","monitorBufferTick_","fillBuffer_","checkBuffer_","buffered_","isEndOfStream_","endOfStream","loadSegment_","lastBufferedEnd","bufferedTime","getSyncSegmentCandidate_","generateSegmentInfo_","mediaSourceInfo","_mediaSourceInfo","segmentIndexArray","isSyncRequest","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","simpleSegment","abortRequestEarly_","trimBackBuffer_","createSimplifiedSegmentObj_","handleProgress_","segmentRequestFinished_","segmentKey","processSegmentResponse_","handleSegment_","probeSegmentInfo","illegalMediaSwitchError","blacklistDuration","timelineMapping","mappingForTimeline","initId","handleVideoSegmentTimingInfo_","handleUpdateEnd_","isWalkingForward","recordThroughput_","addSegmentMetadataCue_","segmentProcessingTime","segmentProcessingThroughput","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","_char2","video_es_VTTSegmentLoader","_SegmentLoader","VTTSegmentLoader","subtitlesTrack_","combinedByteLength","combinedSegment","skipEmptySegments_","timestampOffsetForTimeline","checkTimestampOffset","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","video_es_updateAdCues","adOffset","adTotal","_segment$cueOutCont$s","_segment$cueOutCont$s2","tsprobe","ts_inspector_default","syncPointStrategies","run","datetimeToDisplayTime","lastDistance","segmentStart","discontinuitySync","discontinuities","video_es_SyncController","SyncController","inspectCache_","syncPoints","runStrategies_","selectSyncPoint_","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","playlistTimestamp","probeMp4Segment_","probeTsSegment_","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","timeInfo","segmentStartTime","segmentEndTime","probedInfo","accuracy","mediaIndexDiff","Decrypter$1","AsyncStream$$1","decrypt$$1","Decrypter$$1","DecrypterWorker","decrypterWorker","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","_settings$segmentLoad","segmentLoaders","mainSegmentLoader","mediaTypes","activeTrack","activeGroup","previousActiveLoader","onTrackChanged","_settings$segmentLoad2","blacklistCurrentPlaylist","defaultTrack","setupListeners","requestOptions","initialize","_settings$mediaTypes$","variantLabel","_settings$mediaTypes$2","_settings$mediaTypes$3","variants","setupMediaGroups","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_BLACKLIST_SECONDS","loaderStats","sumLoaderStat","audioSegmentLoader_","mainSegmentLoader_","video_es_MasterPlaylistController","MasterPlaylistController","externHls","useCueTags","enableLowInitialPlaylist","seekTo_","useCueTags_","cueTagsTrack_","requestOptions_","mediaTypes_","handleSourceOpen_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","requestTimeout","triggerPresenceUsage_","setupSourceBuffers_","setupFirstPlay","updatedPlaylist","excludeUnsupportedVariants_","selectedMedia","selectInitialPlaylist","selectPlaylist","initialMedia_","updateAdCues_","updateDuration","addSeekableRange","addSeekableRange_","onDurationchange","playlistOutdated","stuckAtPlaylistEnd_","defaultDemuxed","audioGroupKeys","nextPlaylist","currentPlaylist","forwardBuffer","bufferLowWaterLine","onSyncInfoUpdate_","onEndOfStream","isEndOfStream","getExpiredTime","absolutePlaylistEnd","mainSeekable","audioSeekable","oldEnd","oldStart","oldDuration","newDuration","setDuration","mimeTypes","configureLoaderMimeTypes_","excludeIncompatibleVariants_","variant","variantCodecs","enableFunction","loader","playlistUri","changePlaylistFn","incompatible","currentlyEnabled","Representation","hlsHandler","mpc","masterPlaylistController_","smoothQualityChange","changeType","qualityChangeFunction","renditionSelectionMixin","timerCancelEvents","video_es_PlaybackWatcher","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","canPlayHandler","monitorCurrentTime_","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","fixesBadSeeksHandler","fixesBadSeeks_","checkCurrentTime_","waiting_","isAfterSeekableRange","afterSeekableWindow_","beforeSeekableWindow_","livePoint","nextRange","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$1","vhs","source_","Hls$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","comparePlaylistBandwidth","comparePlaylistResolution","LOCAL_STORAGE_KEY$1","simpleTypeFromSourceType","dashRE","handleHlsMediaChange","qualityLevels","selectedIndex_","handleHlsLoadedMetadata","addQualityLevel","emeKeySystems","keySystemOptions","videoPlaylist","audioPlaylist","keySystemContentTypes","audioContentType","videoContentType","setupEmeOptions","eme","sourceOptions","keySystems","initializeMediaKeys","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","supportsNativeHls","canPlay","canItPlay","supportsNativeDash","supportsTypeNatively","Component$1","video_es_HlsHandler","HlsHandler","dash","setOptions_","overrideNative","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","smoothQualityChange_","pauseLoading","useBandwidthFromLocalStorage","playbackWatcher_","invBandwidth","invThroughput","systemBitrate","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaSecondsLoaded_","currentTech","playerDimensions","setupQualityLevels_","qualityLevels_","HlsSourceHandler","_videojs$mergeOptions","supportedType","canUseMsePlayback","origDefineProperty","arePropertyDescriptorsSupported","_","supportsDescriptors","getOwnPropertySymbols","scrollSetting","findScrollSetting","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll"],"mappings":"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","file":"js/record-video.bccb21ee.js","sourcesContent":["/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js'),\n  CaptionStream = require('./caption-stream'),\n  StreamTypes = require('./stream-types'),\n  TimestampRolloverStream = require('./timestamp-rollover-stream').TimestampRolloverStream;\n\nvar m2tsStreamTypes = require('./stream-types.js');\n\n// object types\nvar TransportPacketStream, TransportParseStream, ElementaryStream;\n\n// constants\nvar\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * Splits an incoming stream of binary data into MPEG-2 Transport\n * Stream packets.\n */\nTransportPacketStream = function() {\n  var\n    buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n    bytesInBuffer = 0;\n\n  TransportPacketStream.prototype.init.call(this);\n\n   // Deliver new bytes to the stream.\n\n  /**\n   * Split a stream of data into M2TS packets\n  **/\n  this.push = function(bytes) {\n    var\n      startIndex = 0,\n      endIndex = MP2T_PACKET_LENGTH,\n      everything;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (bytesInBuffer) {\n      everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n      everything.set(buffer.subarray(0, bytesInBuffer));\n      everything.set(bytes, bytesInBuffer);\n      bytesInBuffer = 0;\n    } else {\n      everything = bytes;\n    }\n\n    // While we have enough data for a packet\n    while (endIndex < everything.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n        // We found a packet so emit it and jump one whole packet forward in\n        // the stream\n        this.trigger('data', everything.subarray(startIndex, endIndex));\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      }\n      // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n      startIndex++;\n      endIndex++;\n    }\n\n    // If there was some data left over at the end of the segment that couldn't\n    // possibly be a whole packet, keep it because it might be the start of a packet\n    // that continues in the next segment\n    if (startIndex < everything.byteLength) {\n      buffer.set(everything.subarray(startIndex), 0);\n      bytesInBuffer = everything.byteLength - startIndex;\n    }\n  };\n\n  /**\n   * Passes identified M2TS packets to the TransportParseStream to be parsed\n  **/\n  this.flush = function() {\n    // If the buffer contains a whole packet when we are being flushed, emit it\n    // and empty the buffer. Otherwise hold onto the data because it may be\n    // important for decoding the next segment\n    if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n      this.trigger('data', buffer);\n      bytesInBuffer = 0;\n    }\n    this.trigger('done');\n  };\n};\nTransportPacketStream.prototype = new Stream();\n\n/**\n * Accepts an MP2T TransportPacketStream and emits data events with parsed\n * forms of the individual transport stream packets.\n */\nTransportParseStream = function() {\n  var parsePsi, parsePat, parsePmt, self;\n  TransportParseStream.prototype.init.call(this);\n  self = this;\n\n  this.packetsWaitingForPmt = [];\n  this.programMapTable = undefined;\n\n  parsePsi = function(payload, psi) {\n    var offset = 0;\n\n    // PSI packets may be split into multiple sections and those\n    // sections may be split into multiple packets. If a PSI\n    // section starts in this packet, the payload_unit_start_indicator\n    // will be true and the first byte of the payload will indicate\n    // the offset from the current position to the start of the\n    // section.\n    if (psi.payloadUnitStartIndicator) {\n      offset += payload[offset] + 1;\n    }\n\n    if (psi.type === 'pat') {\n      parsePat(payload.subarray(offset), psi);\n    } else {\n      parsePmt(payload.subarray(offset), psi);\n    }\n  };\n\n  parsePat = function(payload, pat) {\n    pat.section_number = payload[7]; // eslint-disable-line camelcase\n    pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n\n    // skip the PSI header and parse the first PMT entry\n    self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n    pat.pmtPid = self.pmtPid;\n  };\n\n  /**\n   * Parse out the relevant fields of a Program Map Table (PMT).\n   * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n   * packet. The first byte in this array should be the table_id\n   * field.\n   * @param pmt {object} the object that should be decorated with\n   * fields parsed from the PMT.\n   */\n  parsePmt = function(payload, pmt) {\n    var sectionLength, tableEnd, programInfoLength, offset;\n\n    // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n    if (!(payload[5] & 0x01)) {\n      return;\n    }\n\n    // overwrite any existing program map table\n    self.programMapTable = {\n      video: null,\n      audio: null,\n      'timed-metadata': {}\n    };\n\n    // the mapping table ends at the end of the current section\n    sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n    tableEnd = 3 + sectionLength - 4;\n\n    // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n    programInfoLength = (payload[10] & 0x0f) << 8 | payload[11];\n\n    // advance the offset to the first entry in the mapping table\n    offset = 12 + programInfoLength;\n    while (offset < tableEnd) {\n      var streamType = payload[offset];\n      var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2];\n\n      // only map a single elementary_pid for audio and video stream types\n      // TODO: should this be done for metadata too? for now maintain behavior of\n      //       multiple metadata streams\n      if (streamType === StreamTypes.H264_STREAM_TYPE &&\n          self.programMapTable.video === null) {\n        self.programMapTable.video = pid;\n      } else if (streamType === StreamTypes.ADTS_STREAM_TYPE &&\n                 self.programMapTable.audio === null) {\n        self.programMapTable.audio = pid;\n      } else if (streamType === StreamTypes.METADATA_STREAM_TYPE) {\n        // map pid to stream type for metadata streams\n        self.programMapTable['timed-metadata'][pid] = streamType;\n      }\n\n      // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n      offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n    }\n\n    // record the map on the packet as well\n    pmt.programMapTable = self.programMapTable;\n  };\n\n  /**\n   * Deliver a new MP2T packet to the next stream in the pipeline.\n   */\n  this.push = function(packet) {\n    var\n      result = {},\n      offset = 4;\n\n    result.payloadUnitStartIndicator = !!(packet[1] & 0x40);\n\n    // pid is a 13-bit field starting at the last bit of packet[1]\n    result.pid = packet[1] & 0x1f;\n    result.pid <<= 8;\n    result.pid |= packet[2];\n\n    // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n    if (((packet[3] & 0x30) >>> 4) > 0x01) {\n      offset += packet[offset] + 1;\n    }\n\n    // parse the rest of the packet based on the type\n    if (result.pid === 0) {\n      result.type = 'pat';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n    } else if (result.pid === this.pmtPid) {\n      result.type = 'pmt';\n      parsePsi(packet.subarray(offset), result);\n      this.trigger('data', result);\n\n      // if there are any packets waiting for a PMT to be found, process them now\n      while (this.packetsWaitingForPmt.length) {\n        this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n      }\n    } else if (this.programMapTable === undefined) {\n      // When we have not seen a PMT yet, defer further processing of\n      // PES packets until one has been parsed\n      this.packetsWaitingForPmt.push([packet, offset, result]);\n    } else {\n      this.processPes_(packet, offset, result);\n    }\n  };\n\n  this.processPes_ = function(packet, offset, result) {\n    // set the appropriate stream type\n    if (result.pid === this.programMapTable.video) {\n      result.streamType = StreamTypes.H264_STREAM_TYPE;\n    } else if (result.pid === this.programMapTable.audio) {\n      result.streamType = StreamTypes.ADTS_STREAM_TYPE;\n    } else {\n      // if not video or audio, it is timed-metadata or unknown\n      // if unknown, streamType will be undefined\n      result.streamType = this.programMapTable['timed-metadata'][result.pid];\n    }\n\n    result.type = 'pes';\n    result.data = packet.subarray(offset);\n\n    this.trigger('data', result);\n  };\n\n};\nTransportParseStream.prototype = new Stream();\nTransportParseStream.STREAM_TYPES  = {\n  h264: 0x1b,\n  adts: 0x0f\n};\n\n/**\n * Reconsistutes program elementary stream (PES) packets from parsed\n * transport stream packets. That is, if you pipe an\n * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n * events will be events which capture the bytes for individual PES\n * packets plus relevant metadata that has been extracted from the\n * container.\n */\nElementaryStream = function() {\n  var\n    self = this,\n    // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n    audio = {\n      data: [],\n      size: 0\n    },\n    timedMetadata = {\n      data: [],\n      size: 0\n    },\n    parsePes = function(payload, pes) {\n      var ptsDtsFlags;\n\n      // get the packet length, this will be 0 for video\n      pes.packetLength = 6 + ((payload[4] << 8) | payload[5]);\n\n      // find out if this packets starts a new keyframe\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0;\n      // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n      ptsDtsFlags = payload[7];\n\n      // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 |\n          (payload[10] & 0xFF) << 20 |\n          (payload[11] & 0xFE) << 12 |\n          (payload[12] & 0xFF) <<  5 |\n          (payload[13] & 0xFE) >>>  3;\n        pes.pts *= 4; // Left shift by 2\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 |\n            (payload[15] & 0xFF) << 20 |\n            (payload[16] & 0xFE) << 12 |\n            (payload[17] & 0xFF) << 5 |\n            (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n      // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function(stream, type, forceFlush) {\n      var\n        packetData = new Uint8Array(stream.size),\n        event = {\n          type: type\n        },\n        i = 0,\n        offset = 0,\n        packetFlushable = false,\n        fragment;\n\n      // do nothing if there is not enough buffered data for a complete\n      // PES header\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n      event.trackId = stream.data[0].pid;\n\n      // reassemble the packet\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      }\n\n      // parse assembled packet's PES header\n      parsePes(packetData, event);\n\n      // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n      packetFlushable = type === 'video' || event.packetLength <= stream.size;\n\n      // flush pending packets if the conditions are right\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      }\n\n      // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n  ElementaryStream.prototype.init.call(this);\n\n  /**\n   * Identifies M2TS packet types and parses PES packets using metadata\n   * parsed from the PMT\n   **/\n  this.push = function(data) {\n    ({\n      pat: function() {\n        // we have to wait for the PMT to arrive as well before we\n        // have any meaningful metadata\n      },\n      pes: function() {\n        var stream, streamType;\n\n        switch (data.streamType) {\n        case StreamTypes.H264_STREAM_TYPE:\n        case m2tsStreamTypes.H264_STREAM_TYPE:\n          stream = video;\n          streamType = 'video';\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          stream = audio;\n          streamType = 'audio';\n          break;\n        case StreamTypes.METADATA_STREAM_TYPE:\n          stream = timedMetadata;\n          streamType = 'timed-metadata';\n          break;\n        default:\n          // ignore unknown stream types\n          return;\n        }\n\n        // if a new packet is starting, we can flush the completed\n        // packet\n        if (data.payloadUnitStartIndicator) {\n          flushStream(stream, streamType, true);\n        }\n\n        // buffer this fragment until we are sure we've received the\n        // complete payload\n        stream.data.push(data);\n        stream.size += data.data.byteLength;\n      },\n      pmt: function() {\n        var\n          event = {\n            type: 'metadata',\n            tracks: []\n          },\n          programMapTable = data.programMapTable;\n\n        // translate audio and video streams to tracks\n        if (programMapTable.video !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n        if (programMapTable.audio !== null) {\n          event.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', event);\n      }\n    })[data.type]();\n  };\n\n  /**\n   * Flush any remaining input. Video PES packets may be of variable\n   * length. Normally, the start of a new video packet can trigger the\n   * finalization of the previous packet. That is not possible if no\n   * more video is forthcoming, however. In that case, some other\n   * mechanism (like the end of the file) has to be employed. When it is\n   * clear that no additional data is forthcoming, calling this method\n   * will flush the buffered packets.\n   */\n  this.flush = function() {\n    // !!THIS ORDER IS IMPORTANT!!\n    // video first then audio\n    flushStream(video, 'video');\n    flushStream(audio, 'audio');\n    flushStream(timedMetadata, 'timed-metadata');\n    this.trigger('done');\n  };\n};\nElementaryStream.prototype = new Stream();\n\nvar m2ts = {\n  PAT_PID: 0x0000,\n  MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n  TransportPacketStream: TransportPacketStream,\n  TransportParseStream: TransportParseStream,\n  ElementaryStream: ElementaryStream,\n  TimestampRolloverStream: TimestampRolloverStream,\n  CaptionStream: CaptionStream.CaptionStream,\n  Cea608Stream: CaptionStream.Cea608Stream,\n  MetadataStream: require('./metadata-stream')\n};\n\nfor (var type in StreamTypes) {\n  if (StreamTypes.hasOwnProperty(type)) {\n    m2ts[type] = StreamTypes[type];\n  }\n}\n\nmodule.exports = m2ts;\n","'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar $Object = GetIntrinsic('%Object%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $String = GetIntrinsic('%String%');\n\nvar assertRecord = require('./helpers/assertRecord');\nvar $isNaN = require('./helpers/isNaN');\nvar $isFinite = require('./helpers/isFinite');\n\nvar sign = require('./helpers/sign');\nvar mod = require('./helpers/mod');\n\nvar IsCallable = require('is-callable');\nvar toPrimitive = require('es-to-primitive/es5');\n\nvar has = require('has');\n\n// https://es5.github.io/#x9\nvar ES5 = {\n\tToPrimitive: toPrimitive,\n\n\tToBoolean: function ToBoolean(value) {\n\t\treturn !!value;\n\t},\n\tToNumber: function ToNumber(value) {\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\n\t},\n\tToInteger: function ToInteger(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number)) { return 0; }\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\n\t\treturn sign(number) * Math.floor(Math.abs(number));\n\t},\n\tToInt32: function ToInt32(x) {\n\t\treturn this.ToNumber(x) >> 0;\n\t},\n\tToUint32: function ToUint32(x) {\n\t\treturn this.ToNumber(x) >>> 0;\n\t},\n\tToUint16: function ToUint16(value) {\n\t\tvar number = this.ToNumber(value);\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\n\t\treturn mod(posInt, 0x10000);\n\t},\n\tToString: function ToString(value) {\n\t\treturn $String(value);\n\t},\n\tToObject: function ToObject(value) {\n\t\tthis.CheckObjectCoercible(value);\n\t\treturn $Object(value);\n\t},\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\n\t\t/* jshint eqnull:true */\n\t\tif (value == null) {\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\n\t\t}\n\t\treturn value;\n\t},\n\tIsCallable: IsCallable,\n\tSameValue: function SameValue(x, y) {\n\t\tif (x === y) { // 0 === -0, but they are not identical.\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\n\t\t\treturn true;\n\t\t}\n\t\treturn $isNaN(x) && $isNaN(y);\n\t},\n\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\n\tType: function Type(x) {\n\t\tif (x === null) {\n\t\t\treturn 'Null';\n\t\t}\n\t\tif (typeof x === 'undefined') {\n\t\t\treturn 'Undefined';\n\t\t}\n\t\tif (typeof x === 'function' || typeof x === 'object') {\n\t\t\treturn 'Object';\n\t\t}\n\t\tif (typeof x === 'number') {\n\t\t\treturn 'Number';\n\t\t}\n\t\tif (typeof x === 'boolean') {\n\t\t\treturn 'Boolean';\n\t\t}\n\t\tif (typeof x === 'string') {\n\t\t\treturn 'String';\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\n\t\tif (this.Type(Desc) !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\tvar allowed = {\n\t\t\t'[[Configurable]]': true,\n\t\t\t'[[Enumerable]]': true,\n\t\t\t'[[Get]]': true,\n\t\t\t'[[Set]]': true,\n\t\t\t'[[Value]]': true,\n\t\t\t'[[Writable]]': true\n\t\t};\n\n\t\tfor (var key in Desc) { // eslint-disable-line\n\t\t\tif (has(Desc, key) && !allowed[key]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tvar isData = has(Desc, '[[Value]]');\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n\t\tif (isData && IsAccessor) {\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n\t\t}\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn false;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\n\t\tif (typeof Desc === 'undefined') {\n\t\t\treturn Desc;\n\t\t}\n\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\n\n\t\tif (this.IsDataDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tvalue: Desc['[[Value]]'],\n\t\t\t\twritable: !!Desc['[[Writable]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\n\t\t\treturn {\n\t\t\t\tget: Desc['[[Get]]'],\n\t\t\t\tset: Desc['[[Set]]'],\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\n\t\t\t};\n\t\t} else {\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\n\t\t}\n\t},\n\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\n\t\tif (this.Type(Obj) !== 'Object') {\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\n\t\t}\n\n\t\tvar desc = {};\n\t\tif (has(Obj, 'enumerable')) {\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\n\t\t}\n\t\tif (has(Obj, 'configurable')) {\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\n\t\t}\n\t\tif (has(Obj, 'value')) {\n\t\t\tdesc['[[Value]]'] = Obj.value;\n\t\t}\n\t\tif (has(Obj, 'writable')) {\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\n\t\t}\n\t\tif (has(Obj, 'get')) {\n\t\t\tvar getter = Obj.get;\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\n\t\t\t\tthrow new TypeError('getter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Get]]'] = getter;\n\t\t}\n\t\tif (has(Obj, 'set')) {\n\t\t\tvar setter = Obj.set;\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\n\t\t\t\tthrow new $TypeError('setter must be a function');\n\t\t\t}\n\t\t\tdesc['[[Set]]'] = setter;\n\t\t}\n\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\n\t\t}\n\t\treturn desc;\n\t}\n};\n\nmodule.exports = ES5;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar coneOfSilence = require('../data/silence');\nvar clock = require('../utils/clock');\n\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Sum the `byteLength` properties of the data in each AAC frame\n */\nvar sumFrameByteLengths = function(array) {\n  var\n    i,\n    currentObj,\n    sum = 0;\n\n  // sum the byteLength's all each nal unit in the frame\n  for (i = 0; i < array.length; i++) {\n    currentObj = array[i];\n    sum += currentObj.data.byteLength;\n  }\n\n  return sum;\n};\n\n// Possibly pad (prefix) the audio track with silence if appending this track\n// would lead to the introduction of a gap in the audio buffer\nvar prefixWithSilence = function(\n  track,\n  frames,\n  audioAppendStartTs,\n  videoBaseMediaDecodeTime\n) {\n  var\n    baseMediaDecodeTimeTs,\n    frameDuration = 0,\n    audioGapDuration = 0,\n    audioFillFrameCount = 0,\n    audioFillDuration = 0,\n    silentFrame,\n    i;\n\n  if (!frames.length) {\n    return;\n  }\n\n  baseMediaDecodeTimeTs =\n    clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate);\n  // determine frame clock duration based on sample rate, round up to avoid overfills\n  frameDuration = Math.ceil(ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n  if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n    // insert the shortest possible amount (audio gap or audio to video gap)\n    audioGapDuration =\n      baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime);\n    // number of full frames in the audio gap\n    audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n    audioFillDuration = audioFillFrameCount * frameDuration;\n  }\n\n  // don't attempt to fill gaps smaller than a single frame or larger\n  // than a half second\n  if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS / 2) {\n    return;\n  }\n\n  silentFrame = coneOfSilence[track.samplerate];\n\n  if (!silentFrame) {\n    // we don't have a silent frame pregenerated for the sample rate, so use a frame\n    // from the content instead\n    silentFrame = frames[0].data;\n  }\n\n  for (i = 0; i < audioFillFrameCount; i++) {\n    frames.splice(i, 0, {\n      data: silentFrame\n    });\n  }\n\n  track.baseMediaDecodeTime -=\n    Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n};\n\n// If the audio segment extends before the earliest allowed dts\n// value, remove AAC frames until starts at or after the earliest\n// allowed DTS so that we don't end up with a negative baseMedia-\n// DecodeTime for the audio track\nvar trimAdtsFramesByEarliestDts = function(adtsFrames, track, earliestAllowedDts) {\n  if (track.minSegmentDts >= earliestAllowedDts) {\n    return adtsFrames;\n  }\n\n  // We will need to recalculate the earliest segment Dts\n  track.minSegmentDts = Infinity;\n\n  return adtsFrames.filter(function(currentFrame) {\n    // If this is an allowed frame, keep it and record it's Dts\n    if (currentFrame.dts >= earliestAllowedDts) {\n      track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n      track.minSegmentPts = track.minSegmentDts;\n      return true;\n    }\n    // Otherwise, discard it\n    return false;\n  });\n};\n\n// generate the track's raw mdat data from an array of frames\nvar generateSampleTable = function(frames) {\n  var\n    i,\n    currentFrame,\n    samples = [];\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n    samples.push({\n      size: currentFrame.data.byteLength,\n      duration: 1024 // For AAC audio, all samples contain 1024 samples\n    });\n  }\n  return samples;\n};\n\n// generate the track's sample table from an array of frames\nvar concatenateFrameData = function(frames) {\n  var\n    i,\n    currentFrame,\n    dataOffset = 0,\n    data = new Uint8Array(sumFrameByteLengths(frames));\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    data.set(currentFrame.data, dataOffset);\n    dataOffset += currentFrame.data.byteLength;\n  }\n  return data;\n};\n\nmodule.exports = {\n  prefixWithSilence: prefixWithSilence,\n  trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n  generateSampleTable: generateSampleTable,\n  concatenateFrameData: concatenateFrameData\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Functions that generate fragmented MP4s suitable for use with Media\n * Source Extensions.\n */\n'use strict';\n\nvar UINT32_MAX = Math.pow(2, 32) - 1;\n\nvar box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd,\n    trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex,\n    trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR,\n    AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS;\n\n// pre-calculate constants\n(function() {\n  var i;\n  types = {\n    avc1: [], // codingname\n    avcC: [],\n    btrt: [],\n    dinf: [],\n    dref: [],\n    esds: [],\n    ftyp: [],\n    hdlr: [],\n    mdat: [],\n    mdhd: [],\n    mdia: [],\n    mfhd: [],\n    minf: [],\n    moof: [],\n    moov: [],\n    mp4a: [], // codingname\n    mvex: [],\n    mvhd: [],\n    sdtp: [],\n    smhd: [],\n    stbl: [],\n    stco: [],\n    stsc: [],\n    stsd: [],\n    stsz: [],\n    stts: [],\n    styp: [],\n    tfdt: [],\n    tfhd: [],\n    traf: [],\n    trak: [],\n    trun: [],\n    trex: [],\n    tkhd: [],\n    vmhd: []\n  };\n\n  // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n  // don't throw an error\n  if (typeof Uint8Array === 'undefined') {\n    return;\n  }\n\n  for (i in types) {\n    if (types.hasOwnProperty(i)) {\n      types[i] = [\n        i.charCodeAt(0),\n        i.charCodeAt(1),\n        i.charCodeAt(2),\n        i.charCodeAt(3)\n      ];\n    }\n  }\n\n  MAJOR_BRAND = new Uint8Array([\n    'i'.charCodeAt(0),\n    's'.charCodeAt(0),\n    'o'.charCodeAt(0),\n    'm'.charCodeAt(0)\n  ]);\n  AVC1_BRAND = new Uint8Array([\n    'a'.charCodeAt(0),\n    'v'.charCodeAt(0),\n    'c'.charCodeAt(0),\n    '1'.charCodeAt(0)\n  ]);\n  MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n  VIDEO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65,\n    0x6f, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n  ]);\n  AUDIO_HDLR = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e,\n    0x64, 0x48, 0x61, 0x6e,\n    0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n  ]);\n  HDLR_TYPES = {\n    video: VIDEO_HDLR,\n    audio: AUDIO_HDLR\n  };\n  DREF = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n  ]);\n  SMHD = new Uint8Array([\n    0x00,             // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00,       // balance, 0 means centered\n    0x00, 0x00        // reserved\n  ]);\n  STCO = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ]);\n  STSC = STCO;\n  STSZ = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]);\n  STTS = STCO;\n  VMHD = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00,\n    0x00, 0x00,\n    0x00, 0x00 // opcolor\n  ]);\n}());\n\nbox = function(type) {\n  var\n    payload = [],\n    size = 0,\n    i,\n    result,\n    view;\n\n  for (i = 1; i < arguments.length; i++) {\n    payload.push(arguments[i]);\n  }\n\n  i = payload.length;\n\n  // calculate the total size we need to allocate\n  while (i--) {\n    size += payload[i].byteLength;\n  }\n  result = new Uint8Array(size + 8);\n  view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n  view.setUint32(0, result.byteLength);\n  result.set(type, 4);\n\n  // copy the payload into the result\n  for (i = 0, size = 8; i < payload.length; i++) {\n    result.set(payload[i], size);\n    size += payload[i].byteLength;\n  }\n  return result;\n};\n\ndinf = function() {\n  return box(types.dinf, box(types.dref, DREF));\n};\n\nesds = function(track) {\n  return box(types.esds, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15,  // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    (track.audioobjecttype << 3) | (track.samplingfrequencyindex >>> 1),\n    (track.samplingfrequencyindex << 7) | (track.channelcount << 3),\n    0x06, 0x01, 0x02 // GASpecificConfig\n  ]));\n};\n\nftyp = function() {\n  return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n};\n\nhdlr = function(type) {\n  return box(types.hdlr, HDLR_TYPES[type]);\n};\nmdat = function(data) {\n  return box(types.mdat, data);\n};\nmdhd = function(track) {\n  var result = new Uint8Array([\n    0x00,                   // version 0\n    0x00, 0x00, 0x00,       // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n\n    (track.duration >>> 24) & 0xFF,\n    (track.duration >>> 16) & 0xFF,\n    (track.duration >>>  8) & 0xFF,\n    track.duration & 0xFF,  // duration\n    0x55, 0xc4,             // 'und' language (undetermined)\n    0x00, 0x00\n  ]);\n\n  // Use the sample rate from the track metadata, when it is\n  // defined. The sample rate can be parsed out of an ADTS header, for\n  // instance.\n  if (track.samplerate) {\n    result[12] = (track.samplerate >>> 24) & 0xFF;\n    result[13] = (track.samplerate >>> 16) & 0xFF;\n    result[14] = (track.samplerate >>>  8) & 0xFF;\n    result[15] = (track.samplerate)        & 0xFF;\n  }\n\n  return box(types.mdhd, result);\n};\nmdia = function(track) {\n  return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n};\nmfhd = function(sequenceNumber) {\n  return box(types.mfhd, new Uint8Array([\n    0x00,\n    0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24,\n    (sequenceNumber & 0xFF0000) >> 16,\n    (sequenceNumber & 0xFF00) >> 8,\n    sequenceNumber & 0xFF // sequence_number\n  ]));\n};\nminf = function(track) {\n  return box(types.minf,\n             track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD),\n             dinf(),\n             stbl(track));\n};\nmoof = function(sequenceNumber, tracks) {\n  var\n    trackFragments = [],\n    i = tracks.length;\n  // build traf boxes for each track fragment\n  while (i--) {\n    trackFragments[i] = traf(tracks[i]);\n  }\n  return box.apply(null, [\n    types.moof,\n    mfhd(sequenceNumber)\n  ].concat(trackFragments));\n};\n/**\n * Returns a movie box.\n * @param tracks {array} the tracks associated with this movie\n * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n */\nmoov = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trak(tracks[i]);\n  }\n\n  return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n};\nmvex = function(tracks) {\n  var\n    i = tracks.length,\n    boxes = [];\n\n  while (i--) {\n    boxes[i] = trex(tracks[i]);\n  }\n  return box.apply(null, [types.mvex].concat(boxes));\n};\nmvhd = function(duration) {\n  var\n    bytes = new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24,\n      (duration & 0xFF0000) >> 16,\n      (duration & 0xFF00) >> 8,\n      duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n  return box(types.mvhd, bytes);\n};\n\nsdtp = function(track) {\n  var\n    samples = track.samples || [],\n    bytes = new Uint8Array(4 + samples.length),\n    flags,\n    i;\n\n  // leave the full box header (4 bytes) all zero\n\n  // write the sample table\n  for (i = 0; i < samples.length; i++) {\n    flags = samples[i].flags;\n\n    bytes[i + 4] = (flags.dependsOn << 4) |\n      (flags.isDependedOn << 2) |\n      (flags.hasRedundancy);\n  }\n\n  return box(types.sdtp,\n             bytes);\n};\n\nstbl = function(track) {\n  return box(types.stbl,\n             stsd(track),\n             box(types.stts, STTS),\n             box(types.stsc, STSC),\n             box(types.stsz, STSZ),\n             box(types.stco, STCO));\n};\n\n(function() {\n  var videoSample, audioSample;\n\n  stsd = function(track) {\n\n    return box(types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01\n    ]), track.type === 'video' ? videoSample(track) : audioSample(track));\n  };\n\n  videoSample = function(track) {\n    var\n      sps = track.sps || [],\n      pps = track.pps || [],\n      sequenceParameterSets = [],\n      pictureParameterSets = [],\n      i;\n\n    // assemble the SPSs\n    for (i = 0; i < sps.length; i++) {\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n      sequenceParameterSets.push((sps[i].byteLength & 0xFF)); // sequenceParameterSetLength\n      sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n    }\n\n    // assemble the PPSs\n    for (i = 0; i < pps.length; i++) {\n      pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n      pictureParameterSets.push((pps[i].byteLength & 0xFF));\n      pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n    }\n\n    return box(types.avc1, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8,\n      track.width & 0xff, // width\n      (track.height & 0xff00) >> 8,\n      track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13,\n      0x76, 0x69, 0x64, 0x65,\n      0x6f, 0x6a, 0x73, 0x2d,\n      0x63, 0x6f, 0x6e, 0x74,\n      0x72, 0x69, 0x62, 0x2d,\n      0x68, 0x6c, 0x73, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n    ]), box(types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n    ].concat([\n      sps.length // numOfSequenceParameterSets\n    ]).concat(sequenceParameterSets).concat([\n      pps.length // numOfPictureParameterSets\n    ]).concat(pictureParameterSets))), // \"PPS\"\n            box(types.btrt, new Uint8Array([\n              0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n              0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n              0x00, 0x2d, 0xc6, 0xc0\n            ])) // avgBitrate\n              );\n  };\n\n  audioSample = function(track) {\n    return box(types.mp4a, new Uint8Array([\n\n      // SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8,\n      (track.channelcount & 0xff), // channelcount\n\n      (track.samplesize & 0xff00) >> 8,\n      (track.samplesize & 0xff), // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n\n      (track.samplerate & 0xff00) >> 8,\n      (track.samplerate & 0xff),\n      0x00, 0x00 // samplerate, 16.16\n\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n    ]), esds(track));\n  };\n}());\n\ntkhd = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24,\n    (track.duration & 0xFF0000) >> 16,\n    (track.duration & 0xFF00) >> 8,\n    track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x01, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x00, 0x00, 0x00, 0x00,\n    0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8,\n    track.width & 0xFF,\n    0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8,\n    track.height & 0xFF,\n    0x00, 0x00 // height\n  ]);\n\n  return box(types.tkhd, result);\n};\n\n/**\n * Generate a track fragment (traf) box. A traf box collects metadata\n * about tracks in a movie fragment (moof) box.\n */\ntraf = function(track) {\n  var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun,\n      sampleDependencyTable, dataOffset,\n      upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n\n  trackFragmentHeader = box(types.tfhd, new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00  // default_sample_flags\n  ]));\n\n  upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n  lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n\n  trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([\n    0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    (upperWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (upperWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    upperWordBaseMediaDecodeTime & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 24) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>> 16) & 0xFF,\n    (lowerWordBaseMediaDecodeTime >>>  8) & 0xFF,\n    lowerWordBaseMediaDecodeTime & 0xFF\n  ]));\n\n  // the data offset specifies the number of bytes from the start of\n  // the containing moof to the first payload byte of the associated\n  // mdat\n  dataOffset = (32 + // tfhd\n                20 + // tfdt\n                8 +  // traf header\n                16 + // mfhd\n                8 +  // moof header\n                8);  // mdat header\n\n  // audio tracks require less metadata\n  if (track.type === 'audio') {\n    trackFragmentRun = trun(track, dataOffset);\n    return box(types.traf,\n               trackFragmentHeader,\n               trackFragmentDecodeTime,\n               trackFragmentRun);\n  }\n\n  // video tracks should contain an independent and disposable samples\n  // box (sdtp)\n  // generate one and adjust offsets to match\n  sampleDependencyTable = sdtp(track);\n  trackFragmentRun = trun(track,\n                          sampleDependencyTable.length + dataOffset);\n  return box(types.traf,\n             trackFragmentHeader,\n             trackFragmentDecodeTime,\n             trackFragmentRun,\n             sampleDependencyTable);\n};\n\n/**\n * Generate a track box.\n * @param track {object} a track definition\n * @return {Uint8Array} the track box\n */\ntrak = function(track) {\n  track.duration = track.duration || 0xffffffff;\n  return box(types.trak,\n             tkhd(track),\n             mdia(track));\n};\n\ntrex = function(track) {\n  var result = new Uint8Array([\n    0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24,\n    (track.id & 0xFF0000) >> 16,\n    (track.id & 0xFF00) >> 8,\n    (track.id & 0xFF), // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n  ]);\n  // the last two bytes of default_sample_flags is the sample\n  // degradation priority, a hint about the importance of this sample\n  // relative to others. Lower the degradation priority for all sample\n  // types other than video.\n  if (track.type !== 'video') {\n    result[result.length - 1] = 0x00;\n  }\n\n  return box(types.trex, result);\n};\n\n(function() {\n  var audioTrun, videoTrun, trunHeader;\n\n  // This method assumes all samples are uniform. That is, if a\n  // duration is present for the first sample, it will be present for\n  // all subsequent samples.\n  // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n  trunHeader = function(samples, offset) {\n    var durationPresent = 0, sizePresent = 0,\n        flagsPresent = 0, compositionTimeOffset = 0;\n\n    // trun flag constants\n    if (samples.length) {\n      if (samples[0].duration !== undefined) {\n        durationPresent = 0x1;\n      }\n      if (samples[0].size !== undefined) {\n        sizePresent = 0x2;\n      }\n      if (samples[0].flags !== undefined) {\n        flagsPresent = 0x4;\n      }\n      if (samples[0].compositionTimeOffset !== undefined) {\n        compositionTimeOffset = 0x8;\n      }\n    }\n\n    return [\n      0x00, // version 0\n      0x00,\n      durationPresent | sizePresent | flagsPresent | compositionTimeOffset,\n      0x01, // flags\n      (samples.length & 0xFF000000) >>> 24,\n      (samples.length & 0xFF0000) >>> 16,\n      (samples.length & 0xFF00) >>> 8,\n      samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24,\n      (offset & 0xFF0000) >>> 16,\n      (offset & 0xFF00) >>> 8,\n      offset & 0xFF // data_offset\n    ];\n  };\n\n  videoTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (16 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF, // sample_size\n        (sample.flags.isLeading << 2) | sample.flags.dependsOn,\n        (sample.flags.isDependedOn << 6) |\n          (sample.flags.hasRedundancy << 4) |\n          (sample.flags.paddingValue << 1) |\n          sample.flags.isNonSyncSample,\n        sample.flags.degradationPriority & 0xF0 << 8,\n        sample.flags.degradationPriority & 0x0F, // sample_flags\n        (sample.compositionTimeOffset & 0xFF000000) >>> 24,\n        (sample.compositionTimeOffset & 0xFF0000) >>> 16,\n        (sample.compositionTimeOffset & 0xFF00) >>> 8,\n        sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n      ]);\n    }\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  audioTrun = function(track, offset) {\n    var bytes, samples, sample, i;\n\n    samples = track.samples || [];\n    offset += 8 + 12 + (8 * samples.length);\n\n    bytes = trunHeader(samples, offset);\n\n    for (i = 0; i < samples.length; i++) {\n      sample = samples[i];\n      bytes = bytes.concat([\n        (sample.duration & 0xFF000000) >>> 24,\n        (sample.duration & 0xFF0000) >>> 16,\n        (sample.duration & 0xFF00) >>> 8,\n        sample.duration & 0xFF, // sample_duration\n        (sample.size & 0xFF000000) >>> 24,\n        (sample.size & 0xFF0000) >>> 16,\n        (sample.size & 0xFF00) >>> 8,\n        sample.size & 0xFF]); // sample_size\n    }\n\n    return box(types.trun, new Uint8Array(bytes));\n  };\n\n  trun = function(track, offset) {\n    if (track.type === 'audio') {\n      return audioTrun(track, offset);\n    }\n\n    return videoTrun(track, offset);\n  };\n}());\n\nmodule.exports = {\n  ftyp: ftyp,\n  mdat: mdat,\n  moof: moof,\n  moov: moov,\n  initSegment: function(tracks) {\n    var\n      fileType = ftyp(),\n      movie = moov(tracks),\n      result;\n\n    result = new Uint8Array(fileType.byteLength + movie.byteLength);\n    result.set(fileType);\n    result.set(movie, fileType.byteLength);\n    return result;\n  }\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar zeroWidthSpace = '\\u200b';\n\nmodule.exports = function getPolyfill() {\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\n\t\treturn String.prototype.trim;\n\t}\n\treturn implementation;\n};\n","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}","module.exports = Number.isNaN || function isNaN(a) {\n\treturn a !== a;\n};\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isCallable(value) {\n\tif (!value) { return false; }\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\tif (typeof value === 'function' && !value.prototype) { return true; }\n\tif (hasToStringTag) { return tryFunctionObject(value); }\n\tif (isES6ClassFn(value)) { return false; }\n\tvar strClass = toStr.call(value);\n\treturn strClass === fnClass || strClass === genClass;\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and corrects\n * decode and presentation time stamps to account for a rollover\n * of the 33 bit value.\n */\n\n'use strict';\n\nvar Stream = require('../utils/stream');\n\nvar MAX_TS = 8589934592;\n\nvar RO_THRESH = 4294967296;\n\nvar handleRollover = function(value, reference) {\n  var direction = 1;\n\n  if (value > reference) {\n    // If the current timestamp value is greater than our reference timestamp and we detect a\n    // timestamp rollover, this means the roll over is happening in the opposite direction.\n    // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n    // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n    // rollover point. In loading this segment, the timestamp values will be very large,\n    // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n    // the time stamp to be `value - 2^33`.\n    direction = -1;\n  }\n\n  // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n  // cause an incorrect adjustment.\n  while (Math.abs(reference - value) > RO_THRESH) {\n    value += (direction * MAX_TS);\n  }\n\n  return value;\n};\n\nvar TimestampRolloverStream = function(type) {\n  var lastDTS, referenceDTS;\n\n  TimestampRolloverStream.prototype.init.call(this);\n\n  this.type_ = type;\n\n  this.push = function(data) {\n    if (data.type !== this.type_) {\n      return;\n    }\n\n    if (referenceDTS === undefined) {\n      referenceDTS = data.dts;\n    }\n\n    data.dts = handleRollover(data.dts, referenceDTS);\n    data.pts = handleRollover(data.pts, referenceDTS);\n\n    lastDTS = data.dts;\n\n    this.trigger('data', data);\n  };\n\n  this.flush = function() {\n    referenceDTS = lastDTS;\n    this.trigger('done');\n  };\n\n  this.discontinuity = function() {\n    referenceDTS = void 0;\n    lastDTS = void 0;\n  };\n\n};\n\nTimestampRolloverStream.prototype = new Stream();\n\nmodule.exports = {\n  TimestampRolloverStream: TimestampRolloverStream,\n  handleRollover: handleRollover\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about MP4s.\n */\n'use strict';\n\nvar toUnsigned = require('../utils/bin').toUnsigned;\nvar findBox, parseType, timescale, startTime, getVideoTrackIds;\n\n// Find the data for a box specified by its path\nfindBox = function(data, path) {\n  var results = [],\n      i, size, type, end, subresults;\n\n  if (!path.length) {\n    // short-circuit the search for empty paths\n    return null;\n  }\n\n  for (i = 0; i < data.byteLength;) {\n    size  = toUnsigned(data[i]     << 24 |\n                       data[i + 1] << 16 |\n                       data[i + 2] <<  8 |\n                       data[i + 3]);\n\n    type = parseType(data.subarray(i + 4, i + 8));\n\n    end = size > 1 ? i + size : data.byteLength;\n\n    if (type === path[0]) {\n      if (path.length === 1) {\n        // this is the end of the path and we've found the box we were\n        // looking for\n        results.push(data.subarray(i + 8, end));\n      } else {\n        // recursively search for the next box along the path\n        subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n        if (subresults.length) {\n          results = results.concat(subresults);\n        }\n      }\n    }\n    i = end;\n  }\n\n  // we've finished searching all of data\n  return results;\n};\n\n/**\n * Returns the string representation of an ASCII encoded four byte buffer.\n * @param buffer {Uint8Array} a four-byte buffer to translate\n * @return {string} the corresponding string\n */\nparseType = function(buffer) {\n  var result = '';\n  result += String.fromCharCode(buffer[0]);\n  result += String.fromCharCode(buffer[1]);\n  result += String.fromCharCode(buffer[2]);\n  result += String.fromCharCode(buffer[3]);\n  return result;\n};\n\n/**\n * Parses an MP4 initialization segment and extracts the timescale\n * values for any declared tracks. Timescale values indicate the\n * number of clock ticks per second to assume for time-based values\n * elsewhere in the MP4.\n *\n * To determine the start time of an MP4, you need two pieces of\n * information: the timescale unit and the earliest base media decode\n * time. Multiple timescales can be specified within an MP4 but the\n * base media decode time is always expressed in the timescale from\n * the media header box for the track:\n * ```\n * moov > trak > mdia > mdhd.timescale\n * ```\n * @param init {Uint8Array} the bytes of the init segment\n * @return {object} a hash of track ids to timescale values or null if\n * the init segment is malformed.\n */\ntimescale = function(init) {\n  var\n    result = {},\n    traks = findBox(init, ['moov', 'trak']);\n\n  // mdhd timescale\n  return traks.reduce(function(result, trak) {\n    var tkhd, version, index, id, mdhd;\n\n    tkhd = findBox(trak, ['tkhd'])[0];\n    if (!tkhd) {\n      return null;\n    }\n    version = tkhd[0];\n    index = version === 0 ? 12 : 20;\n    id = toUnsigned(tkhd[index]     << 24 |\n                    tkhd[index + 1] << 16 |\n                    tkhd[index + 2] <<  8 |\n                    tkhd[index + 3]);\n\n    mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n    if (!mdhd) {\n      return null;\n    }\n    version = mdhd[0];\n    index = version === 0 ? 12 : 20;\n    result[id] = toUnsigned(mdhd[index]     << 24 |\n                            mdhd[index + 1] << 16 |\n                            mdhd[index + 2] <<  8 |\n                            mdhd[index + 3]);\n    return result;\n  }, result);\n};\n\n/**\n * Determine the base media decode start time, in seconds, for an MP4\n * fragment. If multiple fragments are specified, the earliest time is\n * returned.\n *\n * The base media decode time can be parsed from track fragment\n * metadata:\n * ```\n * moof > traf > tfdt.baseMediaDecodeTime\n * ```\n * It requires the timescale value from the mdhd to interpret.\n *\n * @param timescale {object} a hash of track ids to timescale values.\n * @return {number} the earliest base media decode start time for the\n * fragment, in seconds\n */\nstartTime = function(timescale, fragment) {\n  var trafs, baseTimes, result;\n\n  // we need info from two childrend of each track fragment box\n  trafs = findBox(fragment, ['moof', 'traf']);\n\n  // determine the start times for each track\n  baseTimes = [].concat.apply([], trafs.map(function(traf) {\n    return findBox(traf, ['tfhd']).map(function(tfhd) {\n      var id, scale, baseTime;\n\n      // get the track id from the tfhd\n      id = toUnsigned(tfhd[4] << 24 |\n                      tfhd[5] << 16 |\n                      tfhd[6] <<  8 |\n                      tfhd[7]);\n      // assume a 90kHz clock if no timescale was specified\n      scale = timescale[id] || 90e3;\n\n      // get the base media decode time from the tfdt\n      baseTime = findBox(traf, ['tfdt']).map(function(tfdt) {\n        var version, result;\n\n        version = tfdt[0];\n        result = toUnsigned(tfdt[4] << 24 |\n                            tfdt[5] << 16 |\n                            tfdt[6] <<  8 |\n                            tfdt[7]);\n        if (version ===  1) {\n          result *= Math.pow(2, 32);\n          result += toUnsigned(tfdt[8]  << 24 |\n                               tfdt[9]  << 16 |\n                               tfdt[10] <<  8 |\n                               tfdt[11]);\n        }\n        return result;\n      })[0];\n      baseTime = baseTime || Infinity;\n\n      // convert base time to seconds\n      return baseTime / scale;\n    });\n  }));\n\n  // return the minimum\n  result = Math.min.apply(null, baseTimes);\n  return isFinite(result) ? result : 0;\n};\n\n/**\n  * Find the trackIds of the video tracks in this source.\n  * Found by parsing the Handler Reference and Track Header Boxes:\n  *   moov > trak > mdia > hdlr\n  *   moov > trak > tkhd\n  *\n  * @param {Uint8Array} init - The bytes of the init segment for this source\n  * @return {Number[]} A list of trackIds\n  *\n  * @see ISO-BMFF-12/2015, Section 8.4.3\n **/\ngetVideoTrackIds = function(init) {\n  var traks = findBox(init, ['moov', 'trak']);\n  var videoTrackIds = [];\n\n  traks.forEach(function(trak) {\n    var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n    var tkhds = findBox(trak, ['tkhd']);\n\n    hdlrs.forEach(function(hdlr, index) {\n      var handlerType = parseType(hdlr.subarray(8, 12));\n      var tkhd = tkhds[index];\n      var view;\n      var version;\n      var trackId;\n\n      if (handlerType === 'vide') {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        version = view.getUint8(0);\n        trackId = (version === 0) ? view.getUint32(12) : view.getUint32(20);\n\n        videoTrackIds.push(trackId);\n      }\n    });\n  });\n\n  return videoTrackIds;\n};\n\nmodule.exports = {\n  findBox: findBox,\n  parseType: parseType,\n  timescale: timescale,\n  startTime: startTime,\n  videoTrackIds: getVideoTrackIds\n};\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nmodule.exports = {\n  generator: require('./mp4-generator'),\n  probe: require('./probe'),\n  Transmuxer: require('./transmuxer').Transmuxer,\n  AudioSegmentStream: require('./transmuxer').AudioSegmentStream,\n  VideoSegmentStream: require('./transmuxer').VideoSegmentStream,\n  CaptionParser: require('./caption-parser')\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n// Convert an array of nal units into an array of frames with each frame being\n// composed of the nal units that make up that frame\n// Also keep track of cummulative data about the frame from the nal units such\n// as the frame duration, starting pts, etc.\nvar groupNalsIntoFrames = function(nalUnits) {\n  var\n    i,\n    currentNal,\n    currentFrame = [],\n    frames = [];\n\n  currentFrame.byteLength = 0;\n\n  for (i = 0; i < nalUnits.length; i++) {\n    currentNal = nalUnits[i];\n\n    // Split on 'aud'-type nal units\n    if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n      // Since the very first nal unit is expected to be an AUD\n      // only push to the frames array when currentFrame is not empty\n      if (currentFrame.length) {\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        frames.push(currentFrame);\n      }\n      currentFrame = [currentNal];\n      currentFrame.byteLength = currentNal.data.byteLength;\n      currentFrame.pts = currentNal.pts;\n      currentFrame.dts = currentNal.dts;\n    } else {\n      // Specifically flag key frames for ease of use later\n      if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n        currentFrame.keyFrame = true;\n      }\n      currentFrame.duration = currentNal.dts - currentFrame.dts;\n      currentFrame.byteLength += currentNal.data.byteLength;\n      currentFrame.push(currentNal);\n    }\n  }\n\n  // For the last frame, use the duration of the previous frame if we\n  // have nothing better to go on\n  if (frames.length &&\n      (!currentFrame.duration ||\n       currentFrame.duration <= 0)) {\n    currentFrame.duration = frames[frames.length - 1].duration;\n  }\n\n  // Push the final frame\n  frames.push(currentFrame);\n  return frames;\n};\n\n// Convert an array of frames into an array of Gop with each Gop being composed\n// of the frames that make up that Gop\n// Also keep track of cummulative data about the Gop from the frames such as the\n// Gop duration, starting pts, etc.\nvar groupFramesIntoGops = function(frames) {\n  var\n    i,\n    currentFrame,\n    currentGop = [],\n    gops = [];\n\n  // We must pre-set some of the values on the Gop since we\n  // keep running totals of these values\n  currentGop.byteLength = 0;\n  currentGop.nalCount = 0;\n  currentGop.duration = 0;\n  currentGop.pts = frames[0].pts;\n  currentGop.dts = frames[0].dts;\n\n  // store some metadata about all the Gops\n  gops.byteLength = 0;\n  gops.nalCount = 0;\n  gops.duration = 0;\n  gops.pts = frames[0].pts;\n  gops.dts = frames[0].dts;\n\n  for (i = 0; i < frames.length; i++) {\n    currentFrame = frames[i];\n\n    if (currentFrame.keyFrame) {\n      // Since the very first frame is expected to be an keyframe\n      // only push to the gops array when currentGop is not empty\n      if (currentGop.length) {\n        gops.push(currentGop);\n        gops.byteLength += currentGop.byteLength;\n        gops.nalCount += currentGop.nalCount;\n        gops.duration += currentGop.duration;\n      }\n\n      currentGop = [currentFrame];\n      currentGop.nalCount = currentFrame.length;\n      currentGop.byteLength = currentFrame.byteLength;\n      currentGop.pts = currentFrame.pts;\n      currentGop.dts = currentFrame.dts;\n      currentGop.duration = currentFrame.duration;\n    } else {\n      currentGop.duration += currentFrame.duration;\n      currentGop.nalCount += currentFrame.length;\n      currentGop.byteLength += currentFrame.byteLength;\n      currentGop.push(currentFrame);\n    }\n  }\n\n  if (gops.length && currentGop.duration <= 0) {\n    currentGop.duration = gops[gops.length - 1].duration;\n  }\n  gops.byteLength += currentGop.byteLength;\n  gops.nalCount += currentGop.nalCount;\n  gops.duration += currentGop.duration;\n\n  // push the final Gop\n  gops.push(currentGop);\n  return gops;\n};\n\n/*\n * Search for the first keyframe in the GOPs and throw away all frames\n * until that keyframe. Then extend the duration of the pulled keyframe\n * and pull the PTS and DTS of the keyframe so that it covers the time\n * range of the frames that were disposed.\n *\n * @param {Array} gops video GOPs\n * @returns {Array} modified video GOPs\n */\nvar extendFirstKeyFrame = function(gops) {\n  var currentGop;\n\n  if (!gops[0][0].keyFrame && gops.length > 1) {\n    // Remove the first GOP\n    currentGop = gops.shift();\n\n    gops.byteLength -= currentGop.byteLength;\n    gops.nalCount -= currentGop.nalCount;\n\n    // Extend the first frame of what is now the\n    // first gop to cover the time period of the\n    // frames we just removed\n    gops[0][0].dts = currentGop.dts;\n    gops[0][0].pts = currentGop.pts;\n    gops[0][0].duration += currentGop.duration;\n  }\n\n  return gops;\n};\n\n/**\n * Default sample object\n * see ISO/IEC 14496-12:2012, section 8.6.4.3\n */\nvar createDefaultSample = function() {\n  return {\n    size: 0,\n    flags: {\n      isLeading: 0,\n      dependsOn: 1,\n      isDependedOn: 0,\n      hasRedundancy: 0,\n      degradationPriority: 0,\n      isNonSyncSample: 1\n    }\n  };\n};\n\n/*\n * Collates information from a video frame into an object for eventual\n * entry into an MP4 sample table.\n *\n * @param {Object} frame the video frame\n * @param {Number} dataOffset the byte offset to position the sample\n * @return {Object} object containing sample table info for a frame\n */\nvar sampleForFrame = function(frame, dataOffset) {\n  var sample = createDefaultSample();\n\n  sample.dataOffset = dataOffset;\n  sample.compositionTimeOffset = frame.pts - frame.dts;\n  sample.duration = frame.duration;\n  sample.size = 4 * frame.length; // Space for nal unit size\n  sample.size += frame.byteLength;\n\n  if (frame.keyFrame) {\n    sample.flags.dependsOn = 2;\n    sample.flags.isNonSyncSample = 0;\n  }\n\n  return sample;\n};\n\n// generate the track's sample table from an array of gops\nvar generateSampleTable = function(gops, baseDataOffset) {\n  var\n    h, i,\n    sample,\n    currentGop,\n    currentFrame,\n    dataOffset = baseDataOffset || 0,\n    samples = [];\n\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      sample = sampleForFrame(currentFrame, dataOffset);\n\n      dataOffset += sample.size;\n\n      samples.push(sample);\n    }\n  }\n  return samples;\n};\n\n// generate the track's raw mdat data from an array of gops\nvar concatenateNalData = function(gops) {\n  var\n    h, i, j,\n    currentGop,\n    currentFrame,\n    currentNal,\n    dataOffset = 0,\n    nalsByteLength = gops.byteLength,\n    numberOfNals = gops.nalCount,\n    totalByteLength = nalsByteLength + 4 * numberOfNals,\n    data = new Uint8Array(totalByteLength),\n    view = new DataView(data.buffer);\n\n  // For each Gop..\n  for (h = 0; h < gops.length; h++) {\n    currentGop = gops[h];\n\n    // For each Frame..\n    for (i = 0; i < currentGop.length; i++) {\n      currentFrame = currentGop[i];\n\n      // For each NAL..\n      for (j = 0; j < currentFrame.length; j++) {\n        currentNal = currentFrame[j];\n\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n    }\n  }\n  return data;\n};\n\nmodule.exports = {\n  groupNalsIntoFrames: groupNalsIntoFrames,\n  groupFramesIntoGops: groupFramesIntoGops,\n  extendFirstKeyFrame: extendFirstKeyFrame,\n  generateSampleTable: generateSampleTable,\n  concatenateNalData: concatenateNalData\n};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nvar isPrimitive = require('./helpers/isPrimitive');\n\nvar isCallable = require('is-callable');\n\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\nvar ES5internalSlots = {\n\t'[[DefaultValue]]': function (O) {\n\t\tvar actualHint;\n\t\tif (arguments.length > 1) {\n\t\t\tactualHint = arguments[1];\n\t\t} else {\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\n\t\t}\n\n\t\tif (actualHint === String || actualHint === Number) {\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\n\t\t\tvar value, i;\n\t\t\tfor (i = 0; i < methods.length; ++i) {\n\t\t\t\tif (isCallable(O[methods[i]])) {\n\t\t\t\t\tvalue = O[methods[i]]();\n\t\t\t\t\tif (isPrimitive(value)) {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new TypeError('No default value');\n\t\t}\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\n\t}\n};\n\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\nmodule.exports = function ToPrimitive(input) {\n\tif (isPrimitive(input)) {\n\t\treturn input;\n\t}\n\tif (arguments.length > 1) {\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\n\t}\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based mp2t to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar mp4 = require('./mp4-generator.js');\nvar frameUtils = require('./frame-utils');\nvar audioFrameUtils = require('./audio-frame-utils');\nvar trackDecodeInfo = require('./track-decode-info');\nvar m2ts = require('../m2ts/m2ts.js');\nvar AdtsStream = require('../codecs/adts.js');\nvar H264Stream = require('../codecs/h264').H264Stream;\nvar AacStream = require('../aac');\nvar isLikelyAacData = require('../aac/utils').isLikelyAacData;\n\n// constants\nvar AUDIO_PROPERTIES = [\n  'audioobjecttype',\n  'channelcount',\n  'samplerate',\n  'samplingfrequencyindex',\n  'samplesize'\n];\n\nvar VIDEO_PROPERTIES = [\n  'width',\n  'height',\n  'profileIdc',\n  'levelIdc',\n  'profileCompatibility'\n];\n\n// object types\nvar VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n\n/**\n * Compare two arrays (even typed) for same-ness\n */\nvar arrayEquals = function(a, b) {\n  var\n    i;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  // compare the value of each element in the array\n  for (i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar generateVideoSegmentTimingInfo = function(\n  baseMediaDecodeTime,\n  startDts,\n  startPts,\n  endDts,\n  endPts,\n  prependedContentDuration\n) {\n  var\n    ptsOffsetFromDts = startPts - startDts,\n    decodeDuration = endDts - startDts,\n    presentationDuration = endPts - startPts;\n\n  // The PTS and DTS values are based on the actual stream times from the segment,\n  // however, the player time values will reflect a start from the baseMediaDecodeTime.\n  // In order to provide relevant values for the player times, base timing info on the\n  // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n  return {\n    start: {\n      dts: baseMediaDecodeTime,\n      pts: baseMediaDecodeTime + ptsOffsetFromDts\n    },\n    end: {\n      dts: baseMediaDecodeTime + decodeDuration,\n      pts: baseMediaDecodeTime + presentationDuration\n    },\n    prependedContentDuration: prependedContentDuration,\n    baseMediaDecodeTime: baseMediaDecodeTime\n  };\n};\n\n/**\n * Constructs a single-track, ISO BMFF media segment from AAC data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nAudioSegmentStream = function(track, options) {\n  var\n    adtsFrames = [],\n    sequenceNumber = 0,\n    earliestAllowedDts = 0,\n    audioAppendStartTs = 0,\n    videoBaseMediaDecodeTime = Infinity;\n\n  options = options || {};\n\n  AudioSegmentStream.prototype.init.call(this);\n\n  this.push = function(data) {\n    trackDecodeInfo.collectDtsInfo(track, data);\n\n    if (track) {\n      AUDIO_PROPERTIES.forEach(function(prop) {\n        track[prop] = data[prop];\n      });\n    }\n\n    // buffer audio data until end() is called\n    adtsFrames.push(data);\n  };\n\n  this.setEarliestDts = function(earliestDts) {\n    earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n  };\n\n  this.setVideoBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    videoBaseMediaDecodeTime = baseMediaDecodeTime;\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    audioAppendStartTs = timestamp;\n  };\n\n  this.flush = function() {\n    var\n      frames,\n      moof,\n      mdat,\n      boxes;\n\n    // return early if no audio data has been observed\n    if (adtsFrames.length === 0) {\n      this.trigger('done', 'AudioSegmentStream');\n      return;\n    }\n\n    frames = audioFrameUtils.trimAdtsFramesByEarliestDts(\n      adtsFrames, track, earliestAllowedDts);\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    audioFrameUtils.prefixWithSilence(\n      track, frames, audioAppendStartTs, videoBaseMediaDecodeTime);\n\n    // we have to build the index from byte locations to\n    // samples (that is, adts frames) in the audio data\n    track.samples = audioFrameUtils.generateSampleTable(frames);\n\n    // concatenate the audio data to constuct the mdat\n    mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n\n    adtsFrames = [];\n\n    moof = mp4.moof(sequenceNumber, [track]);\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    trackDecodeInfo.clearDtsInfo(track);\n\n    this.trigger('data', {track: track, boxes: boxes});\n    this.trigger('done', 'AudioSegmentStream');\n  };\n};\n\nAudioSegmentStream.prototype = new Stream();\n\n/**\n * Constructs a single-track, ISO BMFF media segment from H264 data\n * events. The output of this stream can be fed to a SourceBuffer\n * configured with a suitable initialization segment.\n * @param track {object} track metadata configuration\n * @param options {object} transmuxer options object\n * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n *        gopsToAlignWith list when attempting to align gop pts\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nVideoSegmentStream = function(track, options) {\n  var\n    sequenceNumber = 0,\n    nalUnits = [],\n    gopsToAlignWith = [],\n    config,\n    pps;\n\n  options = options || {};\n\n  VideoSegmentStream.prototype.init.call(this);\n\n  delete track.minPTS;\n\n  this.gopCache_ = [];\n\n  /**\n    * Constructs a ISO BMFF segment given H264 nalUnits\n    * @param {Object} nalUnit A data event representing a nalUnit\n    * @param {String} nalUnit.nalUnitType\n    * @param {Object} nalUnit.config Properties for a mp4 track\n    * @param {Uint8Array} nalUnit.data The nalUnit bytes\n    * @see lib/codecs/h264.js\n   **/\n  this.push = function(nalUnit) {\n    trackDecodeInfo.collectDtsInfo(track, nalUnit);\n\n    // record the track config\n    if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n      config = nalUnit.config;\n      track.sps = [nalUnit.data];\n\n      VIDEO_PROPERTIES.forEach(function(prop) {\n        track[prop] = config[prop];\n      }, this);\n    }\n\n    if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' &&\n        !pps) {\n      pps = nalUnit.data;\n      track.pps = [nalUnit.data];\n    }\n\n    // buffer video until flush() is called\n    nalUnits.push(nalUnit);\n  };\n\n  /**\n    * Pass constructed ISO BMFF track and boxes on to the\n    * next stream in the pipeline\n   **/\n  this.flush = function() {\n    var\n      frames,\n      gopForFusion,\n      gops,\n      moof,\n      mdat,\n      boxes,\n      prependedContentDuration = 0,\n      firstGop,\n      lastGop;\n\n    // Throw away nalUnits at the start of the byte stream until\n    // we find the first AUD\n    while (nalUnits.length) {\n      if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n        break;\n      }\n      nalUnits.shift();\n    }\n\n    // Return early if no video data has been observed\n    if (nalUnits.length === 0) {\n      this.resetStream_();\n      this.trigger('done', 'VideoSegmentStream');\n      return;\n    }\n\n    // Organize the raw nal-units into arrays that represent\n    // higher-level constructs such as frames and gops\n    // (group-of-pictures)\n    frames = frameUtils.groupNalsIntoFrames(nalUnits);\n    gops = frameUtils.groupFramesIntoGops(frames);\n\n    // If the first frame of this fragment is not a keyframe we have\n    // a problem since MSE (on Chrome) requires a leading keyframe.\n    //\n    // We have two approaches to repairing this situation:\n    // 1) GOP-FUSION:\n    //    This is where we keep track of the GOPS (group-of-pictures)\n    //    from previous fragments and attempt to find one that we can\n    //    prepend to the current fragment in order to create a valid\n    //    fragment.\n    // 2) KEYFRAME-PULLING:\n    //    Here we search for the first keyframe in the fragment and\n    //    throw away all the frames between the start of the fragment\n    //    and that keyframe. We then extend the duration and pull the\n    //    PTS of the keyframe forward so that it covers the time range\n    //    of the frames that were disposed of.\n    //\n    // #1 is far prefereable over #2 which can cause \"stuttering\" but\n    // requires more things to be just right.\n    if (!gops[0][0].keyFrame) {\n      // Search for a gop for fusion from our gopCache\n      gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n      if (gopForFusion) {\n        // in order to provide more accurate timing information about the segment, save\n        // the number of seconds prepended to the original segment due to GOP fusion\n        prependedContentDuration = gopForFusion.duration;\n\n        gops.unshift(gopForFusion);\n        // Adjust Gops' metadata to account for the inclusion of the\n        // new gop at the beginning\n        gops.byteLength += gopForFusion.byteLength;\n        gops.nalCount += gopForFusion.nalCount;\n        gops.pts = gopForFusion.pts;\n        gops.dts = gopForFusion.dts;\n        gops.duration += gopForFusion.duration;\n      } else {\n        // If we didn't find a candidate gop fall back to keyframe-pulling\n        gops = frameUtils.extendFirstKeyFrame(gops);\n      }\n    }\n\n    // Trim gops to align with gopsToAlignWith\n    if (gopsToAlignWith.length) {\n      var alignedGops;\n\n      if (options.alignGopsAtEnd) {\n        alignedGops = this.alignGopsAtEnd_(gops);\n      } else {\n        alignedGops = this.alignGopsAtStart_(gops);\n      }\n\n      if (!alignedGops) {\n        // save all the nals in the last GOP into the gop cache\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        });\n\n        // Keep a maximum of 6 GOPs in the cache\n        this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n        // Clear nalUnits\n        nalUnits = [];\n\n        // return early no gops can be aligned with desired gopsToAlignWith\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      }\n\n      // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n      // when recalculated before sending off to CoalesceStream\n      trackDecodeInfo.clearDtsInfo(track);\n\n      gops = alignedGops;\n    }\n\n    trackDecodeInfo.collectDtsInfo(track, gops);\n\n    // First, we have to build the index from byte locations to\n    // samples (that is, frames) in the video data\n    track.samples = frameUtils.generateSampleTable(gops);\n\n    // Concatenate the video data and construct the mdat\n    mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n\n    track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(\n      track, options.keepOriginalTimestamps);\n\n    this.trigger('processedGopsInfo', gops.map(function(gop) {\n      return {\n        pts: gop.pts,\n        dts: gop.dts,\n        byteLength: gop.byteLength\n      };\n    }));\n\n    firstGop = gops[0];\n    lastGop = gops[gops.length - 1];\n\n    this.trigger(\n      'segmentTimingInfo',\n      generateVideoSegmentTimingInfo(\n        track.baseMediaDecodeTime,\n        firstGop.dts,\n        firstGop.pts,\n        lastGop.dts + lastGop.duration,\n        lastGop.pts + lastGop.duration,\n        prependedContentDuration));\n\n    // save all the nals in the last GOP into the gop cache\n    this.gopCache_.unshift({\n      gop: gops.pop(),\n      pps: track.pps,\n      sps: track.sps\n    });\n\n    // Keep a maximum of 6 GOPs in the cache\n    this.gopCache_.length = Math.min(6, this.gopCache_.length);\n\n    // Clear nalUnits\n    nalUnits = [];\n\n    this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n    this.trigger('timelineStartInfo', track.timelineStartInfo);\n\n    moof = mp4.moof(sequenceNumber, [track]);\n\n    // it would be great to allocate this array up front instead of\n    // throwing away hundreds of media segment fragments\n    boxes = new Uint8Array(moof.byteLength + mdat.byteLength);\n\n    // Bump the sequence number for next time\n    sequenceNumber++;\n\n    boxes.set(moof);\n    boxes.set(mdat, moof.byteLength);\n\n    this.trigger('data', {track: track, boxes: boxes});\n\n    this.resetStream_();\n\n    // Continue with the flush process now\n    this.trigger('done', 'VideoSegmentStream');\n  };\n\n  this.resetStream_ = function() {\n    trackDecodeInfo.clearDtsInfo(track);\n\n    // reset config and pps because they may differ across segments\n    // for instance, when we are rendition switching\n    config = undefined;\n    pps = undefined;\n  };\n\n  // Search for a candidate Gop for gop-fusion from the gop cache and\n  // return it or return null if no good candidate was found\n  this.getGopForFusion_ = function(nalUnit) {\n    var\n      halfSecond = 45000, // Half-a-second in a 90khz clock\n      allowableOverlap = 10000, // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n      dtsDistance,\n      nearestGopObj,\n      currentGop,\n      currentGopObj,\n      i;\n\n    // Search for the GOP nearest to the beginning of this nal unit\n    for (i = 0; i < this.gopCache_.length; i++) {\n      currentGopObj = this.gopCache_[i];\n      currentGop = currentGopObj.gop;\n\n      // Reject Gops with different SPS or PPS\n      if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) ||\n          !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n        continue;\n      }\n\n      // Reject Gops that would require a negative baseMediaDecodeTime\n      if (currentGop.dts < track.timelineStartInfo.dts) {\n        continue;\n      }\n\n      // The distance between the end of the gop and the start of the nalUnit\n      dtsDistance = (nalUnit.dts - currentGop.dts) - currentGop.duration;\n\n      // Only consider GOPS that start before the nal unit and end within\n      // a half-second of the nal unit\n      if (dtsDistance >= -allowableOverlap &&\n          dtsDistance <= halfSecond) {\n\n        // Always use the closest GOP we found if there is more than\n        // one candidate\n        if (!nearestGopObj ||\n            nearestDistance > dtsDistance) {\n          nearestGopObj = currentGopObj;\n          nearestDistance = dtsDistance;\n        }\n      }\n    }\n\n    if (nearestGopObj) {\n      return nearestGopObj.gop;\n    }\n    return null;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the START of the list\n  this.alignGopsAtStart_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n\n    byteLength = gops.byteLength;\n    nalCount = gops.nalCount;\n    duration = gops.duration;\n    alignIndex = gopIndex = 0;\n\n    while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        break;\n      }\n\n      if (gop.pts > align.pts) {\n        // this current gop starts after the current gop we want to align on, so increment\n        // align index\n        alignIndex++;\n        continue;\n      }\n\n      // current gop starts before the current gop we want to align on. so increment gop\n      // index\n      gopIndex++;\n      byteLength -= gop.byteLength;\n      nalCount -= gop.nalCount;\n      duration -= gop.duration;\n    }\n\n    if (gopIndex === 0) {\n      // no gops to trim\n      return gops;\n    }\n\n    if (gopIndex === gops.length) {\n      // all gops trimmed, skip appending all gops\n      return null;\n    }\n\n    alignedGops = gops.slice(gopIndex);\n    alignedGops.byteLength = byteLength;\n    alignedGops.duration = duration;\n    alignedGops.nalCount = nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  // trim gop list to the first gop found that has a matching pts with a gop in the list\n  // of gopsToAlignWith starting from the END of the list\n  this.alignGopsAtEnd_ = function(gops) {\n    var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n\n    alignIndex = gopsToAlignWith.length - 1;\n    gopIndex = gops.length - 1;\n    alignEndIndex = null;\n    matchFound = false;\n\n    while (alignIndex >= 0 && gopIndex >= 0) {\n      align = gopsToAlignWith[alignIndex];\n      gop = gops[gopIndex];\n\n      if (align.pts === gop.pts) {\n        matchFound = true;\n        break;\n      }\n\n      if (align.pts > gop.pts) {\n        alignIndex--;\n        continue;\n      }\n\n      if (alignIndex === gopsToAlignWith.length - 1) {\n        // gop.pts is greater than the last alignment candidate. If no match is found\n        // by the end of this loop, we still want to append gops that come after this\n        // point\n        alignEndIndex = gopIndex;\n      }\n\n      gopIndex--;\n    }\n\n    if (!matchFound && alignEndIndex === null) {\n      return null;\n    }\n\n    var trimIndex;\n\n    if (matchFound) {\n      trimIndex = gopIndex;\n    } else {\n      trimIndex = alignEndIndex;\n    }\n\n    if (trimIndex === 0) {\n      return gops;\n    }\n\n    var alignedGops = gops.slice(trimIndex);\n    var metadata = alignedGops.reduce(function(total, gop) {\n      total.byteLength += gop.byteLength;\n      total.duration += gop.duration;\n      total.nalCount += gop.nalCount;\n      return total;\n    }, { byteLength: 0, duration: 0, nalCount: 0 });\n\n    alignedGops.byteLength = metadata.byteLength;\n    alignedGops.duration = metadata.duration;\n    alignedGops.nalCount = metadata.nalCount;\n    alignedGops.pts = alignedGops[0].pts;\n    alignedGops.dts = alignedGops[0].dts;\n\n    return alignedGops;\n  };\n\n  this.alignGopsWith = function(newGopsToAlignWith) {\n    gopsToAlignWith = newGopsToAlignWith;\n  };\n};\n\nVideoSegmentStream.prototype = new Stream();\n\n/**\n * A Stream that can combine multiple streams (ie. audio & video)\n * into a single output segment for MSE. Also supports audio-only\n * and video-only streams.\n * @param options {object} transmuxer options object\n * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at media timeline start.\n */\nCoalesceStream = function(options, metadataStream) {\n  // Number of Tracks per output segment\n  // If greater than 1, we combine multiple\n  // tracks into a single segment\n  this.numberOfTracks = 0;\n  this.metadataStream = metadataStream;\n\n  options = options || {};\n\n  if (typeof options.remux !== 'undefined') {\n    this.remuxTracks = !!options.remux;\n  } else {\n    this.remuxTracks = true;\n  }\n\n  if (typeof options.keepOriginalTimestamps === 'boolean') {\n    this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n  }\n\n  this.pendingTracks = [];\n  this.videoTrack = null;\n  this.pendingBoxes = [];\n  this.pendingCaptions = [];\n  this.pendingMetadata = [];\n  this.pendingBytes = 0;\n  this.emittedTracks = 0;\n\n  CoalesceStream.prototype.init.call(this);\n\n  // Take output from multiple\n  this.push = function(output) {\n    // buffer incoming captions until the associated video segment\n    // finishes\n    if (output.text) {\n      return this.pendingCaptions.push(output);\n    }\n    // buffer incoming id3 tags until the final flush\n    if (output.frames) {\n      return this.pendingMetadata.push(output);\n    }\n\n    // Add this track to the list of pending tracks and store\n    // important information required for the construction of\n    // the final segment\n    this.pendingTracks.push(output.track);\n    this.pendingBoxes.push(output.boxes);\n    this.pendingBytes += output.boxes.byteLength;\n\n    if (output.track.type === 'video') {\n      this.videoTrack = output.track;\n    }\n    if (output.track.type === 'audio') {\n      this.audioTrack = output.track;\n    }\n  };\n};\n\nCoalesceStream.prototype = new Stream();\nCoalesceStream.prototype.flush = function(flushSource) {\n  var\n    offset = 0,\n    event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n    caption,\n    id3,\n    initSegment,\n    timelineStartPts = 0,\n    i;\n\n  if (this.pendingTracks.length < this.numberOfTracks) {\n    if (flushSource !== 'VideoSegmentStream' &&\n        flushSource !== 'AudioSegmentStream') {\n      // Return because we haven't received a flush from a data-generating\n      // portion of the segment (meaning that we have only recieved meta-data\n      // or captions.)\n      return;\n    } else if (this.remuxTracks) {\n      // Return until we have enough tracks from the pipeline to remux (if we\n      // are remuxing audio and video into a single MP4)\n      return;\n    } else if (this.pendingTracks.length === 0) {\n      // In the case where we receive a flush without any data having been\n      // received we consider it an emitted track for the purposes of coalescing\n      // `done` events.\n      // We do this for the case where there is an audio and video track in the\n      // segment but no audio data. (seen in several playlists with alternate\n      // audio tracks and no audio present in the main TS segments.)\n      this.emittedTracks++;\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n      return;\n    }\n  }\n\n  if (this.videoTrack) {\n    timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n    VIDEO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.videoTrack[prop];\n    }, this);\n  } else if (this.audioTrack) {\n    timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n    AUDIO_PROPERTIES.forEach(function(prop) {\n      event.info[prop] = this.audioTrack[prop];\n    }, this);\n  }\n\n  if (this.pendingTracks.length === 1) {\n    event.type = this.pendingTracks[0].type;\n  } else {\n    event.type = 'combined';\n  }\n\n  this.emittedTracks += this.pendingTracks.length;\n\n  initSegment = mp4.initSegment(this.pendingTracks);\n\n  // Create a new typed array to hold the init segment\n  event.initSegment = new Uint8Array(initSegment.byteLength);\n\n  // Create an init segment containing a moov\n  // and track definitions\n  event.initSegment.set(initSegment);\n\n  // Create a new typed array to hold the moof+mdats\n  event.data = new Uint8Array(this.pendingBytes);\n\n  // Append each moof+mdat (one per track) together\n  for (i = 0; i < this.pendingBoxes.length; i++) {\n    event.data.set(this.pendingBoxes[i], offset);\n    offset += this.pendingBoxes[i].byteLength;\n  }\n\n  // Translate caption PTS times into second offsets to match the\n  // video timeline for the segment, and add track info\n  for (i = 0; i < this.pendingCaptions.length; i++) {\n    caption = this.pendingCaptions[i];\n\n    caption.startTime = caption.startPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.startTime -= timelineStartPts;\n    }\n    caption.startTime /= 90e3;\n\n    caption.endTime = caption.endPts;\n    if (!this.keepOriginalTimestamps) {\n      caption.endTime -= timelineStartPts;\n    }\n    caption.endTime /= 90e3;\n\n    event.captionStreams[caption.stream] = true;\n    event.captions.push(caption);\n  }\n\n  // Translate ID3 frame PTS times into second offsets to match the\n  // video timeline for the segment\n  for (i = 0; i < this.pendingMetadata.length; i++) {\n    id3 = this.pendingMetadata[i];\n\n    id3.cueTime = id3.pts;\n    if (!this.keepOriginalTimestamps) {\n      id3.cueTime -= timelineStartPts;\n    }\n    id3.cueTime /= 90e3;\n\n    event.metadata.push(id3);\n  }\n\n  // We add this to every single emitted segment even though we only need\n  // it for the first\n  event.metadata.dispatchType = this.metadataStream.dispatchType;\n\n  // Reset stream state\n  this.pendingTracks.length = 0;\n  this.videoTrack = null;\n  this.pendingBoxes.length = 0;\n  this.pendingCaptions.length = 0;\n  this.pendingBytes = 0;\n  this.pendingMetadata.length = 0;\n\n  // Emit the built segment\n  this.trigger('data', event);\n\n  // Only emit `done` if all tracks have been flushed and emitted\n  if (this.emittedTracks >= this.numberOfTracks) {\n    this.trigger('done');\n    this.emittedTracks = 0;\n  }\n};\n/**\n * A Stream that expects MP2T binary data as input and produces\n * corresponding media segments, suitable for use with Media Source\n * Extension (MSE) implementations that support the ISO BMFF byte\n * stream format, like Chrome.\n */\nTransmuxer = function(options) {\n  var\n    self = this,\n    hasFlushed = true,\n    videoTrack,\n    audioTrack;\n\n  Transmuxer.prototype.init.call(this);\n\n  options = options || {};\n  this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n  this.transmuxPipeline_ = {};\n\n  this.setupAacPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'aac';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.aacStream = new AacStream();\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.aacStream;\n\n    pipeline.aacStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n    pipeline.aacStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.metadataStream.on('timestamp', function(frame) {\n      pipeline.aacStream.setTimestamp(frame.timeStamp);\n    });\n\n    pipeline.aacStream.on('data', function(data) {\n      if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        };\n        // hook up the audio segment stream to the first track with aac data\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n        // Set up the final part of the audio pipeline\n        pipeline.adtsStream\n          .pipe(pipeline.audioSegmentStream)\n          .pipe(pipeline.coalesceStream);\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  this.setupTsPipeline = function() {\n    var pipeline = {};\n    this.transmuxPipeline_ = pipeline;\n\n    pipeline.type = 'ts';\n    pipeline.metadataStream = new m2ts.MetadataStream();\n\n    // set up the parsing pipeline\n    pipeline.packetStream = new m2ts.TransportPacketStream();\n    pipeline.parseStream = new m2ts.TransportParseStream();\n    pipeline.elementaryStream = new m2ts.ElementaryStream();\n    pipeline.videoTimestampRolloverStream = new m2ts.TimestampRolloverStream('video');\n    pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n    pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n    pipeline.adtsStream = new AdtsStream();\n    pipeline.h264Stream = new H264Stream();\n    pipeline.captionStream = new m2ts.CaptionStream();\n    pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n    pipeline.headOfPipeline = pipeline.packetStream;\n\n    // disassemble MPEG2-TS packets into elementary streams\n    pipeline.packetStream\n      .pipe(pipeline.parseStream)\n      .pipe(pipeline.elementaryStream);\n\n    // !!THIS ORDER IS IMPORTANT!!\n    // demux the streams\n    pipeline.elementaryStream\n      .pipe(pipeline.videoTimestampRolloverStream)\n      .pipe(pipeline.h264Stream);\n    pipeline.elementaryStream\n      .pipe(pipeline.audioTimestampRolloverStream)\n      .pipe(pipeline.adtsStream);\n\n    pipeline.elementaryStream\n      .pipe(pipeline.timedMetadataTimestampRolloverStream)\n      .pipe(pipeline.metadataStream)\n      .pipe(pipeline.coalesceStream);\n\n    // Hook up CEA-608/708 caption stream\n    pipeline.h264Stream.pipe(pipeline.captionStream)\n      .pipe(pipeline.coalesceStream);\n\n    pipeline.elementaryStream.on('data', function(data) {\n      var i;\n\n      if (data.type === 'metadata') {\n        i = data.tracks.length;\n\n        // scan the tracks listed in the metadata\n        while (i--) {\n          if (!videoTrack && data.tracks[i].type === 'video') {\n            videoTrack = data.tracks[i];\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          } else if (!audioTrack && data.tracks[i].type === 'audio') {\n            audioTrack = data.tracks[i];\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n          }\n        }\n\n        // hook up the video segment stream to the first track with h264 data\n        if (videoTrack && !pipeline.videoSegmentStream) {\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n\n          pipeline.videoSegmentStream.on('timelineStartInfo', function(timelineStartInfo) {\n          // When video emits timelineStartInfo data after a flush, we forward that\n          // info to the AudioSegmentStream, if it exists, because video timeline\n          // data takes precedence.\n            if (audioTrack) {\n              audioTrack.timelineStartInfo = timelineStartInfo;\n              // On the first segment we trim AAC frames that exist before the\n              // very earliest DTS we have seen in video because Chrome will\n              // interpret any video track with a baseMediaDecodeTime that is\n              // non-zero as a gap.\n              pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n            }\n          });\n\n          pipeline.videoSegmentStream.on('processedGopsInfo',\n            self.trigger.bind(self, 'gopInfo'));\n          pipeline.videoSegmentStream.on('segmentTimingInfo',\n            self.trigger.bind(self, 'videoSegmentTimingInfo'));\n\n          pipeline.videoSegmentStream.on('baseMediaDecodeTime', function(baseMediaDecodeTime) {\n            if (audioTrack) {\n              pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n            }\n          });\n\n          // Set up the final part of the video pipeline\n          pipeline.h264Stream\n            .pipe(pipeline.videoSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n\n        if (audioTrack && !pipeline.audioSegmentStream) {\n          // hook up the audio segment stream to the first track with aac data\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n\n          // Set up the final part of the audio pipeline\n          pipeline.adtsStream\n            .pipe(pipeline.audioSegmentStream)\n            .pipe(pipeline.coalesceStream);\n        }\n      }\n    });\n\n    // Re-emit any data coming from the coalesce stream to the outside world\n    pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n    // Let the consumer know we have finished flushing the entire pipeline\n    pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n  };\n\n  // hook up the segment streams once track metadata is delivered\n  this.setBaseMediaDecodeTime = function(baseMediaDecodeTime) {\n    var pipeline = this.transmuxPipeline_;\n\n    if (!options.keepOriginalTimestamps) {\n      this.baseMediaDecodeTime = baseMediaDecodeTime;\n    }\n\n    if (audioTrack) {\n      audioTrack.timelineStartInfo.dts = undefined;\n      audioTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(audioTrack);\n      if (!options.keepOriginalTimestamps) {\n        audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n      if (pipeline.audioTimestampRolloverStream) {\n        pipeline.audioTimestampRolloverStream.discontinuity();\n      }\n    }\n    if (videoTrack) {\n      if (pipeline.videoSegmentStream) {\n        pipeline.videoSegmentStream.gopCache_ = [];\n        pipeline.videoTimestampRolloverStream.discontinuity();\n      }\n      videoTrack.timelineStartInfo.dts = undefined;\n      videoTrack.timelineStartInfo.pts = undefined;\n      trackDecodeInfo.clearDtsInfo(videoTrack);\n      pipeline.captionStream.reset();\n      if (!options.keepOriginalTimestamps) {\n        videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n    }\n\n    if (pipeline.timedMetadataTimestampRolloverStream) {\n      pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n    }\n  };\n\n  this.setAudioAppendStart = function(timestamp) {\n    if (audioTrack) {\n      this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n    }\n  };\n\n  this.alignGopsWith = function(gopsToAlignWith) {\n    if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n      this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n    }\n  };\n\n  // feed incoming data to the front of the parsing pipeline\n  this.push = function(data) {\n    if (hasFlushed) {\n      var isAac = isLikelyAacData(data);\n\n      if (isAac && this.transmuxPipeline_.type !== 'aac') {\n        this.setupAacPipeline();\n      } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n        this.setupTsPipeline();\n      }\n      hasFlushed = false;\n    }\n    this.transmuxPipeline_.headOfPipeline.push(data);\n  };\n\n  // flush any buffered data\n  this.flush = function() {\n      hasFlushed = true;\n    // Start at the top of the pipeline and flush all pending work\n    this.transmuxPipeline_.headOfPipeline.flush();\n  };\n\n  // Caption data has to be reset when seeking outside buffered range\n  this.resetCaptions = function() {\n    if (this.transmuxPipeline_.captionStream) {\n      this.transmuxPipeline_.captionStream.reset();\n    }\n  };\n\n};\nTransmuxer.prototype = new Stream();\n\nmodule.exports = {\n  Transmuxer: Transmuxer,\n  VideoSegmentStream: VideoSegmentStream,\n  AudioSegmentStream: AudioSegmentStream,\n  AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n  VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n  // exported for testing\n  generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar ExpGolomb;\n\n/**\n * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n * scheme used by h264.\n */\nExpGolomb = function(workingData) {\n  var\n    // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n\n    // the current word being examined\n    workingWord = 0, // :uint\n\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n\n  // ():uint\n  this.length = function() {\n    return (8 * workingBytesAvailable);\n  };\n\n  // ():uint\n  this.bitsAvailable = function() {\n    return (8 * workingBytesAvailable) + workingBitsAvailable;\n  };\n\n  // ():void\n  this.loadWord = function() {\n    var\n      position = workingData.byteLength - workingBytesAvailable,\n      workingBytes = new Uint8Array(4),\n      availableBytes = Math.min(4, workingBytesAvailable);\n\n    if (availableBytes === 0) {\n      throw new Error('no bytes available');\n    }\n\n    workingBytes.set(workingData.subarray(position,\n                                          position + availableBytes));\n    workingWord = new DataView(workingBytes.buffer).getUint32(0);\n\n    // track the amount of workingData that has been processed\n    workingBitsAvailable = availableBytes * 8;\n    workingBytesAvailable -= availableBytes;\n  };\n\n  // (count:int):void\n  this.skipBits = function(count) {\n    var skipBytes; // :int\n    if (workingBitsAvailable > count) {\n      workingWord          <<= count;\n      workingBitsAvailable -= count;\n    } else {\n      count -= workingBitsAvailable;\n      skipBytes = Math.floor(count / 8);\n\n      count -= (skipBytes * 8);\n      workingBytesAvailable -= skipBytes;\n\n      this.loadWord();\n\n      workingWord <<= count;\n      workingBitsAvailable -= count;\n    }\n  };\n\n  // (size:int):uint\n  this.readBits = function(size) {\n    var\n      bits = Math.min(workingBitsAvailable, size), // :uint\n      valu = workingWord >>> (32 - bits); // :uint\n    // if size > 31, handle error\n    workingBitsAvailable -= bits;\n    if (workingBitsAvailable > 0) {\n      workingWord <<= bits;\n    } else if (workingBytesAvailable > 0) {\n      this.loadWord();\n    }\n\n    bits = size - bits;\n    if (bits > 0) {\n      return valu << bits | this.readBits(bits);\n    }\n    return valu;\n  };\n\n  // ():uint\n  this.skipLeadingZeros = function() {\n    var leadingZeroCount; // :uint\n    for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n      if ((workingWord & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        // the first bit of working word is 1\n        workingWord <<= leadingZeroCount;\n        workingBitsAvailable -= leadingZeroCount;\n        return leadingZeroCount;\n      }\n    }\n\n    // we exhausted workingWord and still have not found a 1\n    this.loadWord();\n    return leadingZeroCount + this.skipLeadingZeros();\n  };\n\n  // ():void\n  this.skipUnsignedExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():void\n  this.skipExpGolomb = function() {\n    this.skipBits(1 + this.skipLeadingZeros());\n  };\n\n  // ():uint\n  this.readUnsignedExpGolomb = function() {\n    var clz = this.skipLeadingZeros(); // :uint\n    return this.readBits(clz + 1) - 1;\n  };\n\n  // ():int\n  this.readExpGolomb = function() {\n    var valu = this.readUnsignedExpGolomb(); // :int\n    if (0x01 & valu) {\n      // the number is odd if the low order bit is set\n      return (1 + valu) >>> 1; // add 1 to make it even, and divide by 2\n    }\n    return -1 * (valu >>> 1); // divide by two then make it negative\n  };\n\n  // Some convenience functions\n  // :Boolean\n  this.readBoolean = function() {\n    return this.readBits(1) === 1;\n  };\n\n  // ():int\n  this.readUnsignedByte = function() {\n    return this.readBits(8);\n  };\n\n  this.loadWord();\n};\n\nmodule.exports = ExpGolomb;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar\n  ONE_SECOND_IN_TS = 90000, // 90kHz clock\n  secondsToVideoTs,\n  secondsToAudioTs,\n  videoTsToSeconds,\n  audioTsToSeconds,\n  audioTsToVideoTs,\n  videoTsToAudioTs;\n\nsecondsToVideoTs = function(seconds) {\n  return seconds * ONE_SECOND_IN_TS;\n};\n\nsecondsToAudioTs = function(seconds, sampleRate) {\n  return seconds * sampleRate;\n};\n\nvideoTsToSeconds = function(timestamp) {\n  return timestamp / ONE_SECOND_IN_TS;\n};\n\naudioTsToSeconds = function(timestamp, sampleRate) {\n  return timestamp / sampleRate;\n};\n\naudioTsToVideoTs = function(timestamp, sampleRate) {\n  return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n};\n\nvideoTsToAudioTs = function(timestamp, sampleRate) {\n  return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n};\n\nmodule.exports = {\n  secondsToVideoTs: secondsToVideoTs,\n  secondsToAudioTs: secondsToAudioTs,\n  videoTsToSeconds: videoTsToSeconds,\n  audioTsToSeconds: audioTsToSeconds,\n  audioTsToVideoTs: audioTsToVideoTs,\n  videoTsToAudioTs: videoTsToAudioTs\n};\n","/*!\n * videojs-record\n * @version 3.8.0\n * @see https://github.com/collab-project/videojs-record\n * @copyright 2014-2019 Collab\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"videojs\"), require(\"RecordRTC\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"VideojsRecord\", [\"videojs\", \"RecordRTC\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"VideojsRecord\"] = factory(require(\"videojs\"), require(\"RecordRTC\"));\n\telse\n\t\troot[\"VideojsRecord\"] = factory(root[\"videojs\"], root[\"RecordRTC\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_video_js__, __WEBPACK_EXTERNAL_MODULE_recordrtc__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./node_modules/@babel/runtime/helpers/assertThisInitialized.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/assertThisInitialized.js ***!\n  \\**********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _assertThisInitialized(self) {\\n  if (self === void 0) {\\n    throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n  }\\n\\n  return self;\\n}\\n\\nmodule.exports = _assertThisInitialized;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/assertThisInitialized.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\":\n/*!*****************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!\n  \\*****************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\\n  try {\\n    var info = gen[key](arg);\\n    var value = info.value;\\n  } catch (error) {\\n    reject(error);\\n    return;\\n  }\\n\\n  if (info.done) {\\n    resolve(value);\\n  } else {\\n    Promise.resolve(value).then(_next, _throw);\\n  }\\n}\\n\\nfunction _asyncToGenerator(fn) {\\n  return function () {\\n    var self = this,\\n        args = arguments;\\n    return new Promise(function (resolve, reject) {\\n      var gen = fn.apply(self, args);\\n\\n      function _next(value) {\\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"next\\\", value);\\n      }\\n\\n      function _throw(err) {\\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \\\"throw\\\", err);\\n      }\\n\\n      _next(undefined);\\n    });\\n  };\\n}\\n\\nmodule.exports = _asyncToGenerator;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/asyncToGenerator.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/classCallCheck.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _classCallCheck(instance, Constructor) {\\n  if (!(instance instanceof Constructor)) {\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\n  }\\n}\\n\\nmodule.exports = _classCallCheck;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/classCallCheck.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/createClass.js\":\n/*!************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!\n  \\************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _defineProperties(target, props) {\\n  for (var i = 0; i < props.length; i++) {\\n    var descriptor = props[i];\\n    descriptor.enumerable = descriptor.enumerable || false;\\n    descriptor.configurable = true;\\n    if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n    Object.defineProperty(target, descriptor.key, descriptor);\\n  }\\n}\\n\\nfunction _createClass(Constructor, protoProps, staticProps) {\\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\n  if (staticProps) _defineProperties(Constructor, staticProps);\\n  return Constructor;\\n}\\n\\nmodule.exports = _createClass;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/createClass.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/get.js\":\n/*!****************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/get.js ***!\n  \\****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\");\\n\\nvar superPropBase = __webpack_require__(/*! ./superPropBase */ \\\"./node_modules/@babel/runtime/helpers/superPropBase.js\\\");\\n\\nfunction _get(target, property, receiver) {\\n  if (typeof Reflect !== \\\"undefined\\\" && Reflect.get) {\\n    module.exports = _get = Reflect.get;\\n  } else {\\n    module.exports = _get = function _get(target, property, receiver) {\\n      var base = superPropBase(target, property);\\n      if (!base) return;\\n      var desc = Object.getOwnPropertyDescriptor(base, property);\\n\\n      if (desc.get) {\\n        return desc.get.call(receiver);\\n      }\\n\\n      return desc.value;\\n    };\\n  }\\n\\n  return _get(target, property, receiver || target);\\n}\\n\\nmodule.exports = _get;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/get.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/getPrototypeOf.js ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _getPrototypeOf(o) {\\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\\n    return o.__proto__ || Object.getPrototypeOf(o);\\n  };\\n  return _getPrototypeOf(o);\\n}\\n\\nmodule.exports = _getPrototypeOf;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/getPrototypeOf.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/inherits.js\":\n/*!*********************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/inherits.js ***!\n  \\*********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\\\");\\n\\nfunction _inherits(subClass, superClass) {\\n  if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n    throw new TypeError(\\\"Super expression must either be null or a function\\\");\\n  }\\n\\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\\n    constructor: {\\n      value: subClass,\\n      writable: true,\\n      configurable: true\\n    }\\n  });\\n  if (superClass) setPrototypeOf(subClass, superClass);\\n}\\n\\nmodule.exports = _inherits;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/inherits.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\":\n/*!**********************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!\n  \\**********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _interopRequireDefault(obj) {\\n  return obj && obj.__esModule ? obj : {\\n    \\\"default\\\": obj\\n  };\\n}\\n\\nmodule.exports = _interopRequireDefault;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/interopRequireDefault.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\":\n/*!**************************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js ***!\n  \\**************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var _typeof = __webpack_require__(/*! ../helpers/typeof */ \\\"./node_modules/@babel/runtime/helpers/typeof.js\\\");\\n\\nvar assertThisInitialized = __webpack_require__(/*! ./assertThisInitialized */ \\\"./node_modules/@babel/runtime/helpers/assertThisInitialized.js\\\");\\n\\nfunction _possibleConstructorReturn(self, call) {\\n  if (call && (_typeof(call) === \\\"object\\\" || typeof call === \\\"function\\\")) {\\n    return call;\\n  }\\n\\n  return assertThisInitialized(self);\\n}\\n\\nmodule.exports = _possibleConstructorReturn;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/setPrototypeOf.js\":\n/*!***************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!\n  \\***************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _setPrototypeOf(o, p) {\\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\\n    o.__proto__ = p;\\n    return o;\\n  };\\n\\n  return _setPrototypeOf(o, p);\\n}\\n\\nmodule.exports = _setPrototypeOf;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/setPrototypeOf.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/superPropBase.js\":\n/*!**************************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/superPropBase.js ***!\n  \\**************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"var getPrototypeOf = __webpack_require__(/*! ./getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\");\\n\\nfunction _superPropBase(object, property) {\\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\\n    object = getPrototypeOf(object);\\n    if (object === null) break;\\n  }\\n\\n  return object;\\n}\\n\\nmodule.exports = _superPropBase;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/superPropBase.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/helpers/typeof.js\":\n/*!*******************************************************!*\\\n  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!\n  \\*******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"function _typeof2(obj) { if (typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj; }; } return _typeof2(obj); }\\n\\nfunction _typeof(obj) {\\n  if (typeof Symbol === \\\"function\\\" && _typeof2(Symbol.iterator) === \\\"symbol\\\") {\\n    module.exports = _typeof = function _typeof(obj) {\\n      return _typeof2(obj);\\n    };\\n  } else {\\n    module.exports = _typeof = function _typeof(obj) {\\n      return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : _typeof2(obj);\\n    };\\n  }\\n\\n  return _typeof(obj);\\n}\\n\\nmodule.exports = _typeof;\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/helpers/typeof.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/@babel/runtime/regenerator/index.js\":\n/*!**********************************************************!*\\\n  !*** ./node_modules/@babel/runtime/regenerator/index.js ***!\n  \\**********************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"module.exports = __webpack_require__(/*! regenerator-runtime */ \\\"./node_modules/regenerator-runtime/runtime.js\\\");\\n\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/@babel/runtime/regenerator/index.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/global/window.js\":\n/*!***************************************!*\\\n  !*** ./node_modules/global/window.js ***!\n  \\***************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/* WEBPACK VAR INJECTION */(function(global) {var win;\\n\\nif (typeof window !== \\\"undefined\\\") {\\n    win = window;\\n} else if (typeof global !== \\\"undefined\\\") {\\n    win = global;\\n} else if (typeof self !== \\\"undefined\\\"){\\n    win = self;\\n} else {\\n    win = {};\\n}\\n\\nmodule.exports = win;\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ \\\"./node_modules/webpack/buildin/global.js\\\")))\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/global/window.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/regenerator-runtime/runtime.js\":\n/*!*****************************************************!*\\\n  !*** ./node_modules/regenerator-runtime/runtime.js ***!\n  \\*****************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"/**\\n * Copyright (c) 2014-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n */\\n\\nvar runtime = (function (exports) {\\n  \\\"use strict\\\";\\n\\n  var Op = Object.prototype;\\n  var hasOwn = Op.hasOwnProperty;\\n  var undefined; // More compressible than void 0.\\n  var $Symbol = typeof Symbol === \\\"function\\\" ? Symbol : {};\\n  var iteratorSymbol = $Symbol.iterator || \\\"@@iterator\\\";\\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \\\"@@asyncIterator\\\";\\n  var toStringTagSymbol = $Symbol.toStringTag || \\\"@@toStringTag\\\";\\n\\n  function wrap(innerFn, outerFn, self, tryLocsList) {\\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\\n    var generator = Object.create(protoGenerator.prototype);\\n    var context = new Context(tryLocsList || []);\\n\\n    // The ._invoke method unifies the implementations of the .next,\\n    // .throw, and .return methods.\\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\\n\\n    return generator;\\n  }\\n  exports.wrap = wrap;\\n\\n  // Try/catch helper to minimize deoptimizations. Returns a completion\\n  // record like context.tryEntries[i].completion. This interface could\\n  // have been (and was previously) designed to take a closure to be\\n  // invoked without arguments, but in all the cases we care about we\\n  // already have an existing method we want to call, so there's no need\\n  // to create a new function object. We can even get away with assuming\\n  // the method takes exactly one argument, since that happens to be true\\n  // in every case, so we don't have to touch the arguments object. The\\n  // only additional allocation required is the completion record, which\\n  // has a stable shape and so hopefully should be cheap to allocate.\\n  function tryCatch(fn, obj, arg) {\\n    try {\\n      return { type: \\\"normal\\\", arg: fn.call(obj, arg) };\\n    } catch (err) {\\n      return { type: \\\"throw\\\", arg: err };\\n    }\\n  }\\n\\n  var GenStateSuspendedStart = \\\"suspendedStart\\\";\\n  var GenStateSuspendedYield = \\\"suspendedYield\\\";\\n  var GenStateExecuting = \\\"executing\\\";\\n  var GenStateCompleted = \\\"completed\\\";\\n\\n  // Returning this object from the innerFn has the same effect as\\n  // breaking out of the dispatch switch statement.\\n  var ContinueSentinel = {};\\n\\n  // Dummy constructor functions that we use as the .constructor and\\n  // .constructor.prototype properties for functions that return Generator\\n  // objects. For full spec compliance, you may wish to configure your\\n  // minifier not to mangle the names of these two functions.\\n  function Generator() {}\\n  function GeneratorFunction() {}\\n  function GeneratorFunctionPrototype() {}\\n\\n  // This is a polyfill for %IteratorPrototype% for environments that\\n  // don't natively support it.\\n  var IteratorPrototype = {};\\n  IteratorPrototype[iteratorSymbol] = function () {\\n    return this;\\n  };\\n\\n  var getProto = Object.getPrototypeOf;\\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\\n  if (NativeIteratorPrototype &&\\n      NativeIteratorPrototype !== Op &&\\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\\n    // This environment has a native %IteratorPrototype%; use it instead\\n    // of the polyfill.\\n    IteratorPrototype = NativeIteratorPrototype;\\n  }\\n\\n  var Gp = GeneratorFunctionPrototype.prototype =\\n    Generator.prototype = Object.create(IteratorPrototype);\\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\\n  GeneratorFunctionPrototype[toStringTagSymbol] =\\n    GeneratorFunction.displayName = \\\"GeneratorFunction\\\";\\n\\n  // Helper for defining the .next, .throw, and .return methods of the\\n  // Iterator interface in terms of a single ._invoke method.\\n  function defineIteratorMethods(prototype) {\\n    [\\\"next\\\", \\\"throw\\\", \\\"return\\\"].forEach(function(method) {\\n      prototype[method] = function(arg) {\\n        return this._invoke(method, arg);\\n      };\\n    });\\n  }\\n\\n  exports.isGeneratorFunction = function(genFun) {\\n    var ctor = typeof genFun === \\\"function\\\" && genFun.constructor;\\n    return ctor\\n      ? ctor === GeneratorFunction ||\\n        // For the native GeneratorFunction constructor, the best we can\\n        // do is to check its .name property.\\n        (ctor.displayName || ctor.name) === \\\"GeneratorFunction\\\"\\n      : false;\\n  };\\n\\n  exports.mark = function(genFun) {\\n    if (Object.setPrototypeOf) {\\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\\n    } else {\\n      genFun.__proto__ = GeneratorFunctionPrototype;\\n      if (!(toStringTagSymbol in genFun)) {\\n        genFun[toStringTagSymbol] = \\\"GeneratorFunction\\\";\\n      }\\n    }\\n    genFun.prototype = Object.create(Gp);\\n    return genFun;\\n  };\\n\\n  // Within the body of any async function, `await x` is transformed to\\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\\n  // `hasOwn.call(value, \\\"__await\\\")` to determine if the yielded value is\\n  // meant to be awaited.\\n  exports.awrap = function(arg) {\\n    return { __await: arg };\\n  };\\n\\n  function AsyncIterator(generator) {\\n    function invoke(method, arg, resolve, reject) {\\n      var record = tryCatch(generator[method], generator, arg);\\n      if (record.type === \\\"throw\\\") {\\n        reject(record.arg);\\n      } else {\\n        var result = record.arg;\\n        var value = result.value;\\n        if (value &&\\n            typeof value === \\\"object\\\" &&\\n            hasOwn.call(value, \\\"__await\\\")) {\\n          return Promise.resolve(value.__await).then(function(value) {\\n            invoke(\\\"next\\\", value, resolve, reject);\\n          }, function(err) {\\n            invoke(\\\"throw\\\", err, resolve, reject);\\n          });\\n        }\\n\\n        return Promise.resolve(value).then(function(unwrapped) {\\n          // When a yielded Promise is resolved, its final value becomes\\n          // the .value of the Promise<{value,done}> result for the\\n          // current iteration.\\n          result.value = unwrapped;\\n          resolve(result);\\n        }, function(error) {\\n          // If a rejected Promise was yielded, throw the rejection back\\n          // into the async generator function so it can be handled there.\\n          return invoke(\\\"throw\\\", error, resolve, reject);\\n        });\\n      }\\n    }\\n\\n    var previousPromise;\\n\\n    function enqueue(method, arg) {\\n      function callInvokeWithMethodAndArg() {\\n        return new Promise(function(resolve, reject) {\\n          invoke(method, arg, resolve, reject);\\n        });\\n      }\\n\\n      return previousPromise =\\n        // If enqueue has been called before, then we want to wait until\\n        // all previous Promises have been resolved before calling invoke,\\n        // so that results are always delivered in the correct order. If\\n        // enqueue has not been called before, then it is important to\\n        // call invoke immediately, without waiting on a callback to fire,\\n        // so that the async generator function has the opportunity to do\\n        // any necessary setup in a predictable way. This predictability\\n        // is why the Promise constructor synchronously invokes its\\n        // executor callback, and why async functions synchronously\\n        // execute code before the first await. Since we implement simple\\n        // async functions in terms of async generators, it is especially\\n        // important to get this right, even though it requires care.\\n        previousPromise ? previousPromise.then(\\n          callInvokeWithMethodAndArg,\\n          // Avoid propagating failures to Promises returned by later\\n          // invocations of the iterator.\\n          callInvokeWithMethodAndArg\\n        ) : callInvokeWithMethodAndArg();\\n    }\\n\\n    // Define the unified helper method that is used to implement .next,\\n    // .throw, and .return (see defineIteratorMethods).\\n    this._invoke = enqueue;\\n  }\\n\\n  defineIteratorMethods(AsyncIterator.prototype);\\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\\n    return this;\\n  };\\n  exports.AsyncIterator = AsyncIterator;\\n\\n  // Note that simple async functions are implemented on top of\\n  // AsyncIterator objects; they just return a Promise for the value of\\n  // the final result produced by the iterator.\\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\\n    var iter = new AsyncIterator(\\n      wrap(innerFn, outerFn, self, tryLocsList)\\n    );\\n\\n    return exports.isGeneratorFunction(outerFn)\\n      ? iter // If outerFn is a generator, return the full iterator.\\n      : iter.next().then(function(result) {\\n          return result.done ? result.value : iter.next();\\n        });\\n  };\\n\\n  function makeInvokeMethod(innerFn, self, context) {\\n    var state = GenStateSuspendedStart;\\n\\n    return function invoke(method, arg) {\\n      if (state === GenStateExecuting) {\\n        throw new Error(\\\"Generator is already running\\\");\\n      }\\n\\n      if (state === GenStateCompleted) {\\n        if (method === \\\"throw\\\") {\\n          throw arg;\\n        }\\n\\n        // Be forgiving, per 25.3.3.3.3 of the spec:\\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\\n        return doneResult();\\n      }\\n\\n      context.method = method;\\n      context.arg = arg;\\n\\n      while (true) {\\n        var delegate = context.delegate;\\n        if (delegate) {\\n          var delegateResult = maybeInvokeDelegate(delegate, context);\\n          if (delegateResult) {\\n            if (delegateResult === ContinueSentinel) continue;\\n            return delegateResult;\\n          }\\n        }\\n\\n        if (context.method === \\\"next\\\") {\\n          // Setting context._sent for legacy support of Babel's\\n          // function.sent implementation.\\n          context.sent = context._sent = context.arg;\\n\\n        } else if (context.method === \\\"throw\\\") {\\n          if (state === GenStateSuspendedStart) {\\n            state = GenStateCompleted;\\n            throw context.arg;\\n          }\\n\\n          context.dispatchException(context.arg);\\n\\n        } else if (context.method === \\\"return\\\") {\\n          context.abrupt(\\\"return\\\", context.arg);\\n        }\\n\\n        state = GenStateExecuting;\\n\\n        var record = tryCatch(innerFn, self, context);\\n        if (record.type === \\\"normal\\\") {\\n          // If an exception is thrown from innerFn, we leave state ===\\n          // GenStateExecuting and loop back for another invocation.\\n          state = context.done\\n            ? GenStateCompleted\\n            : GenStateSuspendedYield;\\n\\n          if (record.arg === ContinueSentinel) {\\n            continue;\\n          }\\n\\n          return {\\n            value: record.arg,\\n            done: context.done\\n          };\\n\\n        } else if (record.type === \\\"throw\\\") {\\n          state = GenStateCompleted;\\n          // Dispatch the exception by looping back around to the\\n          // context.dispatchException(context.arg) call above.\\n          context.method = \\\"throw\\\";\\n          context.arg = record.arg;\\n        }\\n      }\\n    };\\n  }\\n\\n  // Call delegate.iterator[context.method](context.arg) and handle the\\n  // result, either by returning a { value, done } result from the\\n  // delegate iterator, or by modifying context.method and context.arg,\\n  // setting context.delegate to null, and returning the ContinueSentinel.\\n  function maybeInvokeDelegate(delegate, context) {\\n    var method = delegate.iterator[context.method];\\n    if (method === undefined) {\\n      // A .throw or .return when the delegate iterator has no .throw\\n      // method always terminates the yield* loop.\\n      context.delegate = null;\\n\\n      if (context.method === \\\"throw\\\") {\\n        // Note: [\\\"return\\\"] must be used for ES3 parsing compatibility.\\n        if (delegate.iterator[\\\"return\\\"]) {\\n          // If the delegate iterator has a return method, give it a\\n          // chance to clean up.\\n          context.method = \\\"return\\\";\\n          context.arg = undefined;\\n          maybeInvokeDelegate(delegate, context);\\n\\n          if (context.method === \\\"throw\\\") {\\n            // If maybeInvokeDelegate(context) changed context.method from\\n            // \\\"return\\\" to \\\"throw\\\", let that override the TypeError below.\\n            return ContinueSentinel;\\n          }\\n        }\\n\\n        context.method = \\\"throw\\\";\\n        context.arg = new TypeError(\\n          \\\"The iterator does not provide a 'throw' method\\\");\\n      }\\n\\n      return ContinueSentinel;\\n    }\\n\\n    var record = tryCatch(method, delegate.iterator, context.arg);\\n\\n    if (record.type === \\\"throw\\\") {\\n      context.method = \\\"throw\\\";\\n      context.arg = record.arg;\\n      context.delegate = null;\\n      return ContinueSentinel;\\n    }\\n\\n    var info = record.arg;\\n\\n    if (! info) {\\n      context.method = \\\"throw\\\";\\n      context.arg = new TypeError(\\\"iterator result is not an object\\\");\\n      context.delegate = null;\\n      return ContinueSentinel;\\n    }\\n\\n    if (info.done) {\\n      // Assign the result of the finished delegate to the temporary\\n      // variable specified by delegate.resultName (see delegateYield).\\n      context[delegate.resultName] = info.value;\\n\\n      // Resume execution at the desired location (see delegateYield).\\n      context.next = delegate.nextLoc;\\n\\n      // If context.method was \\\"throw\\\" but the delegate handled the\\n      // exception, let the outer generator proceed normally. If\\n      // context.method was \\\"next\\\", forget context.arg since it has been\\n      // \\\"consumed\\\" by the delegate iterator. If context.method was\\n      // \\\"return\\\", allow the original .return call to continue in the\\n      // outer generator.\\n      if (context.method !== \\\"return\\\") {\\n        context.method = \\\"next\\\";\\n        context.arg = undefined;\\n      }\\n\\n    } else {\\n      // Re-yield the result returned by the delegate method.\\n      return info;\\n    }\\n\\n    // The delegate iterator is finished, so forget it and continue with\\n    // the outer generator.\\n    context.delegate = null;\\n    return ContinueSentinel;\\n  }\\n\\n  // Define Generator.prototype.{next,throw,return} in terms of the\\n  // unified ._invoke helper method.\\n  defineIteratorMethods(Gp);\\n\\n  Gp[toStringTagSymbol] = \\\"Generator\\\";\\n\\n  // A Generator should always return itself as the iterator object when the\\n  // @@iterator function is called on it. Some browsers' implementations of the\\n  // iterator prototype chain incorrectly implement this, causing the Generator\\n  // object to not be returned from this call. This ensures that doesn't happen.\\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\\n  Gp[iteratorSymbol] = function() {\\n    return this;\\n  };\\n\\n  Gp.toString = function() {\\n    return \\\"[object Generator]\\\";\\n  };\\n\\n  function pushTryEntry(locs) {\\n    var entry = { tryLoc: locs[0] };\\n\\n    if (1 in locs) {\\n      entry.catchLoc = locs[1];\\n    }\\n\\n    if (2 in locs) {\\n      entry.finallyLoc = locs[2];\\n      entry.afterLoc = locs[3];\\n    }\\n\\n    this.tryEntries.push(entry);\\n  }\\n\\n  function resetTryEntry(entry) {\\n    var record = entry.completion || {};\\n    record.type = \\\"normal\\\";\\n    delete record.arg;\\n    entry.completion = record;\\n  }\\n\\n  function Context(tryLocsList) {\\n    // The root entry object (effectively a try statement without a catch\\n    // or a finally block) gives us a place to store values thrown from\\n    // locations where there is no enclosing try statement.\\n    this.tryEntries = [{ tryLoc: \\\"root\\\" }];\\n    tryLocsList.forEach(pushTryEntry, this);\\n    this.reset(true);\\n  }\\n\\n  exports.keys = function(object) {\\n    var keys = [];\\n    for (var key in object) {\\n      keys.push(key);\\n    }\\n    keys.reverse();\\n\\n    // Rather than returning an object with a next method, we keep\\n    // things simple and return the next function itself.\\n    return function next() {\\n      while (keys.length) {\\n        var key = keys.pop();\\n        if (key in object) {\\n          next.value = key;\\n          next.done = false;\\n          return next;\\n        }\\n      }\\n\\n      // To avoid creating an additional object, we just hang the .value\\n      // and .done properties off the next function object itself. This\\n      // also ensures that the minifier will not anonymize the function.\\n      next.done = true;\\n      return next;\\n    };\\n  };\\n\\n  function values(iterable) {\\n    if (iterable) {\\n      var iteratorMethod = iterable[iteratorSymbol];\\n      if (iteratorMethod) {\\n        return iteratorMethod.call(iterable);\\n      }\\n\\n      if (typeof iterable.next === \\\"function\\\") {\\n        return iterable;\\n      }\\n\\n      if (!isNaN(iterable.length)) {\\n        var i = -1, next = function next() {\\n          while (++i < iterable.length) {\\n            if (hasOwn.call(iterable, i)) {\\n              next.value = iterable[i];\\n              next.done = false;\\n              return next;\\n            }\\n          }\\n\\n          next.value = undefined;\\n          next.done = true;\\n\\n          return next;\\n        };\\n\\n        return next.next = next;\\n      }\\n    }\\n\\n    // Return an iterator with no values.\\n    return { next: doneResult };\\n  }\\n  exports.values = values;\\n\\n  function doneResult() {\\n    return { value: undefined, done: true };\\n  }\\n\\n  Context.prototype = {\\n    constructor: Context,\\n\\n    reset: function(skipTempReset) {\\n      this.prev = 0;\\n      this.next = 0;\\n      // Resetting context._sent for legacy support of Babel's\\n      // function.sent implementation.\\n      this.sent = this._sent = undefined;\\n      this.done = false;\\n      this.delegate = null;\\n\\n      this.method = \\\"next\\\";\\n      this.arg = undefined;\\n\\n      this.tryEntries.forEach(resetTryEntry);\\n\\n      if (!skipTempReset) {\\n        for (var name in this) {\\n          // Not sure about the optimal order of these conditions:\\n          if (name.charAt(0) === \\\"t\\\" &&\\n              hasOwn.call(this, name) &&\\n              !isNaN(+name.slice(1))) {\\n            this[name] = undefined;\\n          }\\n        }\\n      }\\n    },\\n\\n    stop: function() {\\n      this.done = true;\\n\\n      var rootEntry = this.tryEntries[0];\\n      var rootRecord = rootEntry.completion;\\n      if (rootRecord.type === \\\"throw\\\") {\\n        throw rootRecord.arg;\\n      }\\n\\n      return this.rval;\\n    },\\n\\n    dispatchException: function(exception) {\\n      if (this.done) {\\n        throw exception;\\n      }\\n\\n      var context = this;\\n      function handle(loc, caught) {\\n        record.type = \\\"throw\\\";\\n        record.arg = exception;\\n        context.next = loc;\\n\\n        if (caught) {\\n          // If the dispatched exception was caught by a catch block,\\n          // then let that catch block handle the exception normally.\\n          context.method = \\\"next\\\";\\n          context.arg = undefined;\\n        }\\n\\n        return !! caught;\\n      }\\n\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        var record = entry.completion;\\n\\n        if (entry.tryLoc === \\\"root\\\") {\\n          // Exception thrown outside of any try block that could handle\\n          // it, so set the completion value of the entire function to\\n          // throw the exception.\\n          return handle(\\\"end\\\");\\n        }\\n\\n        if (entry.tryLoc <= this.prev) {\\n          var hasCatch = hasOwn.call(entry, \\\"catchLoc\\\");\\n          var hasFinally = hasOwn.call(entry, \\\"finallyLoc\\\");\\n\\n          if (hasCatch && hasFinally) {\\n            if (this.prev < entry.catchLoc) {\\n              return handle(entry.catchLoc, true);\\n            } else if (this.prev < entry.finallyLoc) {\\n              return handle(entry.finallyLoc);\\n            }\\n\\n          } else if (hasCatch) {\\n            if (this.prev < entry.catchLoc) {\\n              return handle(entry.catchLoc, true);\\n            }\\n\\n          } else if (hasFinally) {\\n            if (this.prev < entry.finallyLoc) {\\n              return handle(entry.finallyLoc);\\n            }\\n\\n          } else {\\n            throw new Error(\\\"try statement without catch or finally\\\");\\n          }\\n        }\\n      }\\n    },\\n\\n    abrupt: function(type, arg) {\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        if (entry.tryLoc <= this.prev &&\\n            hasOwn.call(entry, \\\"finallyLoc\\\") &&\\n            this.prev < entry.finallyLoc) {\\n          var finallyEntry = entry;\\n          break;\\n        }\\n      }\\n\\n      if (finallyEntry &&\\n          (type === \\\"break\\\" ||\\n           type === \\\"continue\\\") &&\\n          finallyEntry.tryLoc <= arg &&\\n          arg <= finallyEntry.finallyLoc) {\\n        // Ignore the finally entry if control is not jumping to a\\n        // location outside the try/catch block.\\n        finallyEntry = null;\\n      }\\n\\n      var record = finallyEntry ? finallyEntry.completion : {};\\n      record.type = type;\\n      record.arg = arg;\\n\\n      if (finallyEntry) {\\n        this.method = \\\"next\\\";\\n        this.next = finallyEntry.finallyLoc;\\n        return ContinueSentinel;\\n      }\\n\\n      return this.complete(record);\\n    },\\n\\n    complete: function(record, afterLoc) {\\n      if (record.type === \\\"throw\\\") {\\n        throw record.arg;\\n      }\\n\\n      if (record.type === \\\"break\\\" ||\\n          record.type === \\\"continue\\\") {\\n        this.next = record.arg;\\n      } else if (record.type === \\\"return\\\") {\\n        this.rval = this.arg = record.arg;\\n        this.method = \\\"return\\\";\\n        this.next = \\\"end\\\";\\n      } else if (record.type === \\\"normal\\\" && afterLoc) {\\n        this.next = afterLoc;\\n      }\\n\\n      return ContinueSentinel;\\n    },\\n\\n    finish: function(finallyLoc) {\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        if (entry.finallyLoc === finallyLoc) {\\n          this.complete(entry.completion, entry.afterLoc);\\n          resetTryEntry(entry);\\n          return ContinueSentinel;\\n        }\\n      }\\n    },\\n\\n    \\\"catch\\\": function(tryLoc) {\\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\\n        var entry = this.tryEntries[i];\\n        if (entry.tryLoc === tryLoc) {\\n          var record = entry.completion;\\n          if (record.type === \\\"throw\\\") {\\n            var thrown = record.arg;\\n            resetTryEntry(entry);\\n          }\\n          return thrown;\\n        }\\n      }\\n\\n      // The context.catch method must only be called with a location\\n      // argument that corresponds to a known catch block.\\n      throw new Error(\\\"illegal catch attempt\\\");\\n    },\\n\\n    delegateYield: function(iterable, resultName, nextLoc) {\\n      this.delegate = {\\n        iterator: values(iterable),\\n        resultName: resultName,\\n        nextLoc: nextLoc\\n      };\\n\\n      if (this.method === \\\"next\\\") {\\n        // Deliberately forget the last sent value so that we don't\\n        // accidentally pass it on to the delegate.\\n        this.arg = undefined;\\n      }\\n\\n      return ContinueSentinel;\\n    }\\n  };\\n\\n  // Regardless of whether this script is executing as a CommonJS module\\n  // or not, return the runtime object so that we can declare the variable\\n  // regeneratorRuntime in the outer scope, which allows this module to be\\n  // injected easily by `bin/regenerator --include-runtime script.js`.\\n  return exports;\\n\\n}(\\n  // If this script is executing as a CommonJS module, use module.exports\\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\\n  // object. Either way, the resulting object will be used to initialize\\n  // the regeneratorRuntime variable at the top of this file.\\n   true ? module.exports : undefined\\n));\\n\\ntry {\\n  regeneratorRuntime = runtime;\\n} catch (accidentalStrictMode) {\\n  // This module should not be running in strict mode, so the above\\n  // assignment should always work unless something is misconfigured. Just\\n  // in case runtime.js accidentally runs in strict mode, we can escape\\n  // strict mode using a global Function call. This could conceivably fail\\n  // if a Content Security Policy forbids using Function, but in that case\\n  // the proper solution is to fix the accidental strict mode problem. If\\n  // you've misconfigured your bundler to force strict mode and applied a\\n  // CSP to forbid Function, and you're not willing to fix either of those\\n  // problems, please detail your unique predicament in a GitHub issue.\\n  Function(\\\"r\\\", \\\"regeneratorRuntime = r\\\")(runtime);\\n}\\n\\n\\n//# sourceURL=webpack://VideojsRecord/./node_modules/regenerator-runtime/runtime.js?\");\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/buildin/global.js\":\n/*!***********************************!*\\\n  !*** (webpack)/buildin/global.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"var g;\\n\\n// This works in non-strict mode\\ng = (function() {\\n\\treturn this;\\n})();\\n\\ntry {\\n\\t// This works if eval is allowed (see CSP)\\n\\tg = g || new Function(\\\"return this\\\")();\\n} catch (e) {\\n\\t// This works if the window reference is available\\n\\tif (typeof window === \\\"object\\\") g = window;\\n}\\n\\n// g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it's\\n// easier to handle this case. if(!global) { ...}\\n\\nmodule.exports = g;\\n\\n\\n//# sourceURL=webpack://VideojsRecord/(webpack)/buildin/global.js?\");\n\n/***/ }),\n\n/***/ \"./src/css/videojs.record.scss\":\n/*!*************************************!*\\\n  !*** ./src/css/videojs.record.scss ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"// extracted by mini-css-extract-plugin\\n\\n//# sourceURL=webpack://VideojsRecord/./src/css/videojs.record.scss?\");\n\n/***/ }),\n\n/***/ \"./src/js/controls/animation-display.js\":\n/*!**********************************************!*\\\n  !*** ./src/js/controls/animation-display.js ***!\n  \\**********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\"));\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\"));\\n\\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \\\"./node_modules/@babel/runtime/helpers/get.js\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\"));\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar Component = _video.default.getComponent('Component');\\n\\nvar AnimationDisplay = function (_Component) {\\n  (0, _inherits2.default)(AnimationDisplay, _Component);\\n\\n  function AnimationDisplay() {\\n    (0, _classCallCheck2.default)(this, AnimationDisplay);\\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimationDisplay).apply(this, arguments));\\n  }\\n\\n  (0, _createClass2.default)(AnimationDisplay, [{\\n    key: \\\"createEl\\\",\\n    value: function createEl() {\\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(AnimationDisplay.prototype), \\\"createEl\\\", this).call(this, 'div', {\\n        className: 'vjs-animation-display',\\n        innerHTML: '<img />'\\n      });\\n    }\\n  }]);\\n  return AnimationDisplay;\\n}(Component);\\n\\nComponent.registerComponent('AnimationDisplay', AnimationDisplay);\\nvar _default = AnimationDisplay;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/animation-display.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/controls/camera-button.js\":\n/*!******************************************!*\\\n  !*** ./src/js/controls/camera-button.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\"));\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\"));\\n\\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \\\"./node_modules/@babel/runtime/helpers/get.js\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\"));\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar _event = _interopRequireDefault(__webpack_require__(/*! ../event */ \\\"./src/js/event.js\\\"));\\n\\nvar Button = _video.default.getComponent('Button');\\n\\nvar Component = _video.default.getComponent('Component');\\n\\nvar CameraButton = function (_Button) {\\n  (0, _inherits2.default)(CameraButton, _Button);\\n\\n  function CameraButton() {\\n    (0, _classCallCheck2.default)(this, CameraButton);\\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CameraButton).apply(this, arguments));\\n  }\\n\\n  (0, _createClass2.default)(CameraButton, [{\\n    key: \\\"buildCSSClass\\\",\\n    value: function buildCSSClass() {\\n      return 'vjs-camera-button vjs-control vjs-button vjs-icon-photo-camera';\\n    }\\n  }, {\\n    key: \\\"enable\\\",\\n    value: function enable() {\\n      (0, _get2.default)((0, _getPrototypeOf2.default)(CameraButton.prototype), \\\"enable\\\", this).call(this);\\n      this.on(this.player_, _event.default.START_RECORD, this.onStart);\\n      this.on(this.player_, _event.default.STOP_RECORD, this.onStop);\\n    }\\n  }, {\\n    key: \\\"disable\\\",\\n    value: function disable() {\\n      (0, _get2.default)((0, _getPrototypeOf2.default)(CameraButton.prototype), \\\"disable\\\", this).call(this);\\n      this.off(this.player_, _event.default.START_RECORD, this.onStart);\\n      this.off(this.player_, _event.default.STOP_RECORD, this.onStop);\\n    }\\n  }, {\\n    key: \\\"show\\\",\\n    value: function show() {\\n      if (this.layoutExclude && this.layoutExclude === true) {\\n        return;\\n      }\\n\\n      (0, _get2.default)((0, _getPrototypeOf2.default)(CameraButton.prototype), \\\"show\\\", this).call(this);\\n    }\\n  }, {\\n    key: \\\"handleClick\\\",\\n    value: function handleClick(event) {\\n      var recorder = this.player_.record();\\n\\n      if (!recorder.isProcessing()) {\\n        recorder.start();\\n      } else {\\n        recorder.retrySnapshot();\\n        this.onStop();\\n      }\\n    }\\n  }, {\\n    key: \\\"onStart\\\",\\n    value: function onStart(event) {\\n      this.removeClass('vjs-icon-photo-camera');\\n      this.addClass('vjs-icon-replay');\\n      this.controlText('Retry');\\n    }\\n  }, {\\n    key: \\\"onStop\\\",\\n    value: function onStop(event) {\\n      this.removeClass('vjs-icon-replay');\\n      this.addClass('vjs-icon-photo-camera');\\n      this.controlText('Image');\\n    }\\n  }]);\\n  return CameraButton;\\n}(Button);\\n\\nCameraButton.prototype.controlText_ = 'Image';\\nComponent.registerComponent('CameraButton', CameraButton);\\nvar _default = CameraButton;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/camera-button.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/controls/device-button.js\":\n/*!******************************************!*\\\n  !*** ./src/js/controls/device-button.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\"));\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\"));\\n\\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \\\"./node_modules/@babel/runtime/helpers/get.js\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\"));\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar Button = _video.default.getComponent('Button');\\n\\nvar Component = _video.default.getComponent('Component');\\n\\nvar DeviceButton = function (_Button) {\\n  (0, _inherits2.default)(DeviceButton, _Button);\\n\\n  function DeviceButton() {\\n    (0, _classCallCheck2.default)(this, DeviceButton);\\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DeviceButton).apply(this, arguments));\\n  }\\n\\n  (0, _createClass2.default)(DeviceButton, [{\\n    key: \\\"handleClick\\\",\\n    value: function handleClick(event) {\\n      this.player_.record().getDevice();\\n    }\\n  }, {\\n    key: \\\"show\\\",\\n    value: function show() {\\n      if (this.layoutExclude && this.layoutExclude === true) {\\n        return;\\n      }\\n\\n      (0, _get2.default)((0, _getPrototypeOf2.default)(DeviceButton.prototype), \\\"show\\\", this).call(this);\\n    }\\n  }]);\\n  return DeviceButton;\\n}(Button);\\n\\nDeviceButton.prototype.controlText_ = 'Device';\\nComponent.registerComponent('DeviceButton', DeviceButton);\\nvar _default = DeviceButton;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/device-button.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/controls/picture-in-picture-toggle.js\":\n/*!******************************************************!*\\\n  !*** ./src/js/controls/picture-in-picture-toggle.js ***!\n  \\******************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ \\\"./node_modules/@babel/runtime/regenerator/index.js\\\"));\\n\\nvar _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ \\\"./node_modules/@babel/runtime/helpers/asyncToGenerator.js\\\"));\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\"));\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\"));\\n\\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \\\"./node_modules/@babel/runtime/helpers/get.js\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\"));\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar _event = _interopRequireDefault(__webpack_require__(/*! ../event */ \\\"./src/js/event.js\\\"));\\n\\nvar Button = _video.default.getComponent('Button');\\n\\nvar Component = _video.default.getComponent('Component');\\n\\nvar PictureInPictureToggle = function (_Button) {\\n  (0, _inherits2.default)(PictureInPictureToggle, _Button);\\n\\n  function PictureInPictureToggle(player, options) {\\n    var _this;\\n\\n    (0, _classCallCheck2.default)(this, PictureInPictureToggle);\\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PictureInPictureToggle).call(this, player, options));\\n\\n    _this.on(_this.player_, _event.default.ENTER_PIP, _this.onStart);\\n\\n    _this.on(_this.player_, _event.default.LEAVE_PIP, _this.onStop);\\n\\n    return _this;\\n  }\\n\\n  (0, _createClass2.default)(PictureInPictureToggle, [{\\n    key: \\\"buildCSSClass\\\",\\n    value: function buildCSSClass() {\\n      return 'vjs-pip-button vjs-control vjs-button vjs-icon-picture-in-picture-start';\\n    }\\n  }, {\\n    key: \\\"show\\\",\\n    value: function show() {\\n      if (this.layoutExclude && this.layoutExclude === true) {\\n        return;\\n      }\\n\\n      (0, _get2.default)((0, _getPrototypeOf2.default)(PictureInPictureToggle.prototype), \\\"show\\\", this).call(this);\\n    }\\n  }, {\\n    key: \\\"handleClick\\\",\\n    value: function () {\\n      var _handleClick = (0, _asyncToGenerator2.default)(_regenerator.default.mark(function _callee(event) {\\n        var recorder;\\n        return _regenerator.default.wrap(function _callee$(_context) {\\n          while (1) {\\n            switch (_context.prev = _context.next) {\\n              case 0:\\n                recorder = this.player_.record();\\n                this.disable();\\n                _context.prev = 2;\\n\\n                if (!(recorder.mediaElement !== document.pictureInPictureElement)) {\\n                  _context.next = 8;\\n                  break;\\n                }\\n\\n                _context.next = 6;\\n                return recorder.mediaElement.requestPictureInPicture();\\n\\n              case 6:\\n                _context.next = 10;\\n                break;\\n\\n              case 8:\\n                _context.next = 10;\\n                return document.exitPictureInPicture();\\n\\n              case 10:\\n                _context.next = 15;\\n                break;\\n\\n              case 12:\\n                _context.prev = 12;\\n                _context.t0 = _context[\\\"catch\\\"](2);\\n                this.player_.trigger(_event.default.ERROR, _context.t0);\\n\\n              case 15:\\n                _context.prev = 15;\\n                this.enable();\\n                return _context.finish(15);\\n\\n              case 18:\\n              case \\\"end\\\":\\n                return _context.stop();\\n            }\\n          }\\n        }, _callee, this, [[2, 12, 15, 18]]);\\n      }));\\n\\n      function handleClick(_x) {\\n        return _handleClick.apply(this, arguments);\\n      }\\n\\n      return handleClick;\\n    }()\\n  }, {\\n    key: \\\"onStart\\\",\\n    value: function onStart(event) {\\n      this.removeClass('vjs-icon-picture-in-picture-start');\\n      this.addClass('vjs-icon-picture-in-picture-stop');\\n    }\\n  }, {\\n    key: \\\"onStop\\\",\\n    value: function onStop(event) {\\n      this.removeClass('vjs-icon-picture-in-picture-stop');\\n      this.addClass('vjs-icon-picture-in-picture-start');\\n    }\\n  }]);\\n  return PictureInPictureToggle;\\n}(Button);\\n\\nPictureInPictureToggle.prototype.controlText_ = 'Picture in Picture';\\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\\nvar _default = PictureInPictureToggle;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/picture-in-picture-toggle.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/controls/record-canvas.js\":\n/*!******************************************!*\\\n  !*** ./src/js/controls/record-canvas.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\"));\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\"));\\n\\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \\\"./node_modules/@babel/runtime/helpers/get.js\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\"));\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar Component = _video.default.getComponent('Component');\\n\\nvar RecordCanvas = function (_Component) {\\n  (0, _inherits2.default)(RecordCanvas, _Component);\\n\\n  function RecordCanvas() {\\n    (0, _classCallCheck2.default)(this, RecordCanvas);\\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RecordCanvas).apply(this, arguments));\\n  }\\n\\n  (0, _createClass2.default)(RecordCanvas, [{\\n    key: \\\"createEl\\\",\\n    value: function createEl() {\\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RecordCanvas.prototype), \\\"createEl\\\", this).call(this, 'div', {\\n        className: 'vjs-record-canvas',\\n        innerHTML: '<canvas></canvas>'\\n      });\\n    }\\n  }]);\\n  return RecordCanvas;\\n}(Component);\\n\\nComponent.registerComponent('RecordCanvas', RecordCanvas);\\nvar _default = RecordCanvas;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/record-canvas.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/controls/record-indicator.js\":\n/*!*********************************************!*\\\n  !*** ./src/js/controls/record-indicator.js ***!\n  \\*********************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\"));\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\"));\\n\\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \\\"./node_modules/@babel/runtime/helpers/get.js\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\"));\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar _event = _interopRequireDefault(__webpack_require__(/*! ../event */ \\\"./src/js/event.js\\\"));\\n\\nvar Component = _video.default.getComponent('Component');\\n\\nvar RecordIndicator = function (_Component) {\\n  (0, _inherits2.default)(RecordIndicator, _Component);\\n\\n  function RecordIndicator(player, options) {\\n    var _this;\\n\\n    (0, _classCallCheck2.default)(this, RecordIndicator);\\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RecordIndicator).call(this, player, options));\\n\\n    _this.enable();\\n\\n    return _this;\\n  }\\n\\n  (0, _createClass2.default)(RecordIndicator, [{\\n    key: \\\"createEl\\\",\\n    value: function createEl() {\\n      var props = {\\n        className: 'vjs-record-indicator vjs-control',\\n        dir: 'ltr'\\n      };\\n      var attr = {\\n        'data-label': this.localize('REC')\\n      };\\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(RecordIndicator.prototype), \\\"createEl\\\", this).call(this, 'div', props, attr);\\n    }\\n  }, {\\n    key: \\\"enable\\\",\\n    value: function enable() {\\n      this.on(this.player_, _event.default.START_RECORD, this.show);\\n      this.on(this.player_, _event.default.STOP_RECORD, this.hide);\\n    }\\n  }, {\\n    key: \\\"disable\\\",\\n    value: function disable() {\\n      this.off(this.player_, _event.default.START_RECORD, this.show);\\n      this.off(this.player_, _event.default.STOP_RECORD, this.hide);\\n    }\\n  }, {\\n    key: \\\"show\\\",\\n    value: function show() {\\n      if (this.layoutExclude && this.layoutExclude === true) {\\n        return;\\n      }\\n\\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RecordIndicator.prototype), \\\"show\\\", this).call(this);\\n    }\\n  }]);\\n  return RecordIndicator;\\n}(Component);\\n\\nComponent.registerComponent('RecordIndicator', RecordIndicator);\\nvar _default = RecordIndicator;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/record-indicator.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/controls/record-toggle.js\":\n/*!******************************************!*\\\n  !*** ./src/js/controls/record-toggle.js ***!\n  \\******************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\"));\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\"));\\n\\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \\\"./node_modules/@babel/runtime/helpers/get.js\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\"));\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar _event = _interopRequireDefault(__webpack_require__(/*! ../event */ \\\"./src/js/event.js\\\"));\\n\\nvar Button = _video.default.getComponent('Button');\\n\\nvar Component = _video.default.getComponent('Component');\\n\\nvar RecordToggle = function (_Button) {\\n  (0, _inherits2.default)(RecordToggle, _Button);\\n\\n  function RecordToggle() {\\n    (0, _classCallCheck2.default)(this, RecordToggle);\\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RecordToggle).apply(this, arguments));\\n  }\\n\\n  (0, _createClass2.default)(RecordToggle, [{\\n    key: \\\"buildCSSClass\\\",\\n    value: function buildCSSClass() {\\n      return 'vjs-record-button vjs-control vjs-button vjs-icon-record-start';\\n    }\\n  }, {\\n    key: \\\"enable\\\",\\n    value: function enable() {\\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RecordToggle.prototype), \\\"enable\\\", this).call(this);\\n      this.on(this.player_, _event.default.START_RECORD, this.onStart);\\n      this.on(this.player_, _event.default.STOP_RECORD, this.onStop);\\n    }\\n  }, {\\n    key: \\\"disable\\\",\\n    value: function disable() {\\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RecordToggle.prototype), \\\"disable\\\", this).call(this);\\n      this.off(this.player_, _event.default.START_RECORD, this.onStart);\\n      this.off(this.player_, _event.default.STOP_RECORD, this.onStop);\\n    }\\n  }, {\\n    key: \\\"show\\\",\\n    value: function show() {\\n      if (this.layoutExclude && this.layoutExclude === true) {\\n        return;\\n      }\\n\\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RecordToggle.prototype), \\\"show\\\", this).call(this);\\n    }\\n  }, {\\n    key: \\\"handleClick\\\",\\n    value: function handleClick(event) {\\n      var recorder = this.player_.record();\\n\\n      if (!recorder.isRecording()) {\\n        recorder.start();\\n      } else {\\n        recorder.stop();\\n      }\\n    }\\n  }, {\\n    key: \\\"onStart\\\",\\n    value: function onStart(event) {\\n      this.removeClass('vjs-icon-record-start');\\n      this.addClass('vjs-icon-record-stop');\\n      this.controlText('Stop');\\n    }\\n  }, {\\n    key: \\\"onStop\\\",\\n    value: function onStop(event) {\\n      this.removeClass('vjs-icon-record-stop');\\n      this.addClass('vjs-icon-record-start');\\n      this.controlText('Record');\\n    }\\n  }]);\\n  return RecordToggle;\\n}(Button);\\n\\nRecordToggle.prototype.controlText_ = 'Record';\\nComponent.registerComponent('RecordToggle', RecordToggle);\\nvar _default = RecordToggle;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/controls/record-toggle.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/defaults.js\":\n/*!****************************!*\\\n  !*** ./src/js/defaults.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\nvar pluginDefaultOptions = {\\n  image: false,\\n  audio: false,\\n  video: false,\\n  animation: false,\\n  screen: false,\\n  maxLength: 10,\\n  maxFileSize: 0,\\n  msDisplayMax: 3,\\n  frameWidth: 320,\\n  frameHeight: 240,\\n  debug: false,\\n  pip: false,\\n  autoMuteDevice: false,\\n  videoBitRate: 1200,\\n  videoEngine: 'recordrtc',\\n  videoFrameRate: 30,\\n  videoMimeType: 'video/webm',\\n  videoRecorderType: 'auto',\\n  videoWorkerURL: '',\\n  videoWebAssemblyURL: '',\\n  audioEngine: 'recordrtc',\\n  audioRecorderType: 'auto',\\n  audioMimeType: 'auto',\\n  audioBufferSize: 4096,\\n  audioSampleRate: 44100,\\n  audioBitRate: 128,\\n  audioChannels: 2,\\n  audioWorkerURL: '',\\n  audioWebAssemblyURL: '',\\n  audioBufferUpdate: false,\\n  animationFrameRate: 200,\\n  animationQuality: 10,\\n  timeSlice: 0,\\n  convertEngine: '',\\n  convertWorkerURL: '',\\n  convertOptions: [],\\n  hotKeys: false,\\n  pluginLibraryOptions: {}\\n};\\nvar _default = pluginDefaultOptions;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/defaults.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/engine/convert-engine.js\":\n/*!*****************************************!*\\\n  !*** ./src/js/engine/convert-engine.js ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.FFMPEGJS = exports.TSEBML = exports.CONVERT_PLUGINS = exports.ConvertEngine = void 0;\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\"));\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\"));\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar _fileUtil = __webpack_require__(/*! ../utils/file-util */ \\\"./src/js/utils/file-util.js\\\");\\n\\nvar Component = _video.default.getComponent('Component');\\n\\nvar TSEBML = 'ts-ebml';\\nexports.TSEBML = TSEBML;\\nvar FFMPEGJS = 'ffmpeg.js';\\nexports.FFMPEGJS = FFMPEGJS;\\nvar CONVERT_PLUGINS = [TSEBML, FFMPEGJS];\\nexports.CONVERT_PLUGINS = CONVERT_PLUGINS;\\n\\nvar ConvertEngine = function (_Component) {\\n  (0, _inherits2.default)(ConvertEngine, _Component);\\n\\n  function ConvertEngine(player, options) {\\n    (0, _classCallCheck2.default)(this, ConvertEngine);\\n    options.evented = true;\\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ConvertEngine).call(this, player, options));\\n  }\\n\\n  (0, _createClass2.default)(ConvertEngine, [{\\n    key: \\\"setup\\\",\\n    value: function setup(mediaType, debug) {\\n      this.mediaType = mediaType;\\n      this.debug = debug;\\n    }\\n  }, {\\n    key: \\\"loadBlob\\\",\\n    value: function loadBlob(data) {\\n      return (0, _fileUtil.blobToArrayBuffer)(data);\\n    }\\n  }, {\\n    key: \\\"addFileInfo\\\",\\n    value: function addFileInfo(fileObj, now) {\\n      (0, _fileUtil.addFileInfo)(fileObj, now);\\n    }\\n  }]);\\n  return ConvertEngine;\\n}(Component);\\n\\nexports.ConvertEngine = ConvertEngine;\\n_video.default.ConvertEngine = ConvertEngine;\\nComponent.registerComponent('ConvertEngine', ConvertEngine);\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/engine/convert-engine.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/engine/engine-loader.js\":\n/*!****************************************!*\\\n  !*** ./src/js/engine/engine-loader.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.getConvertEngine = exports.getVideoEngine = exports.isAudioPluginActive = exports.getAudioEngine = void 0;\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar _recordRtc = _interopRequireDefault(__webpack_require__(/*! ./record-rtc */ \\\"./src/js/engine/record-rtc.js\\\"));\\n\\nvar _convertEngine = __webpack_require__(/*! ./convert-engine */ \\\"./src/js/engine/convert-engine.js\\\");\\n\\nvar _recordEngine = __webpack_require__(/*! ./record-engine */ \\\"./src/js/engine/record-engine.js\\\");\\n\\nvar getAudioEngine = function getAudioEngine(audioEngine) {\\n  var AudioEngineClass;\\n\\n  switch (audioEngine) {\\n    case _recordEngine.RECORDRTC:\\n      AudioEngineClass = _recordRtc.default;\\n      break;\\n\\n    case _recordEngine.LIBVORBISJS:\\n      AudioEngineClass = _video.default.LibVorbisEngine;\\n      break;\\n\\n    case _recordEngine.RECORDERJS:\\n      AudioEngineClass = _video.default.RecorderjsEngine;\\n      break;\\n\\n    case _recordEngine.LAMEJS:\\n      AudioEngineClass = _video.default.LamejsEngine;\\n      break;\\n\\n    case _recordEngine.OPUSRECORDER:\\n      AudioEngineClass = _video.default.OpusRecorderEngine;\\n      break;\\n\\n    case _recordEngine.VMSG:\\n      AudioEngineClass = _video.default.VmsgEngine;\\n      break;\\n\\n    default:\\n      throw new Error('Unknown audioEngine: ' + audioEngine);\\n  }\\n\\n  return AudioEngineClass;\\n};\\n\\nexports.getAudioEngine = getAudioEngine;\\n\\nvar getVideoEngine = function getVideoEngine(videoEngine) {\\n  var VideoEngineClass;\\n\\n  switch (videoEngine) {\\n    case _recordEngine.RECORDRTC:\\n      VideoEngineClass = _recordRtc.default;\\n      break;\\n\\n    case _recordEngine.WEBMWASM:\\n      VideoEngineClass = _video.default.WebmWasmEngine;\\n      break;\\n\\n    default:\\n      throw new Error('Unknown videoEngine: ' + videoEngine);\\n  }\\n\\n  return VideoEngineClass;\\n};\\n\\nexports.getVideoEngine = getVideoEngine;\\n\\nvar isAudioPluginActive = function isAudioPluginActive(audioEngine) {\\n  return _recordEngine.AUDIO_PLUGINS.indexOf(audioEngine) > -1;\\n};\\n\\nexports.isAudioPluginActive = isAudioPluginActive;\\n\\nvar getConvertEngine = function getConvertEngine(convertEngine) {\\n  var ConvertEngineClass;\\n\\n  switch (convertEngine) {\\n    case '':\\n      break;\\n\\n    case _convertEngine.TSEBML:\\n      ConvertEngineClass = _video.default.TsEBMLEngine;\\n      break;\\n\\n    case _convertEngine.FFMPEGJS:\\n      ConvertEngineClass = _video.default.FFmpegjsEngine;\\n      break;\\n\\n    default:\\n      throw new Error('Unknown convertEngine: ' + convertEngine);\\n  }\\n\\n  return ConvertEngineClass;\\n};\\n\\nexports.getConvertEngine = getConvertEngine;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/engine/engine-loader.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/engine/record-engine.js\":\n/*!****************************************!*\\\n  !*** ./src/js/engine/record-engine.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.WEBMWASM = exports.VMSG = exports.OPUSRECORDER = exports.LAMEJS = exports.RECORDERJS = exports.LIBVORBISJS = exports.RECORDRTC = exports.VIDEO_PLUGINS = exports.AUDIO_PLUGINS = exports.RECORD_PLUGINS = exports.RecordEngine = void 0;\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\"));\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\"));\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar _event = _interopRequireDefault(__webpack_require__(/*! ../event */ \\\"./src/js/event.js\\\"));\\n\\nvar _fileUtil = __webpack_require__(/*! ../utils/file-util */ \\\"./src/js/utils/file-util.js\\\");\\n\\nvar Component = _video.default.getComponent('Component');\\n\\nvar RECORDRTC = 'recordrtc';\\nexports.RECORDRTC = RECORDRTC;\\nvar LIBVORBISJS = 'libvorbis.js';\\nexports.LIBVORBISJS = LIBVORBISJS;\\nvar RECORDERJS = 'recorder.js';\\nexports.RECORDERJS = RECORDERJS;\\nvar LAMEJS = 'lamejs';\\nexports.LAMEJS = LAMEJS;\\nvar OPUSRECORDER = 'opus-recorder';\\nexports.OPUSRECORDER = OPUSRECORDER;\\nvar VMSG = 'vmsg';\\nexports.VMSG = VMSG;\\nvar WEBMWASM = 'webm-wasm';\\nexports.WEBMWASM = WEBMWASM;\\nvar AUDIO_PLUGINS = [LIBVORBISJS, RECORDERJS, LAMEJS, OPUSRECORDER, VMSG];\\nexports.AUDIO_PLUGINS = AUDIO_PLUGINS;\\nvar VIDEO_PLUGINS = [WEBMWASM];\\nexports.VIDEO_PLUGINS = VIDEO_PLUGINS;\\nvar RECORD_PLUGINS = AUDIO_PLUGINS.concat(VIDEO_PLUGINS);\\nexports.RECORD_PLUGINS = RECORD_PLUGINS;\\n\\nvar RecordEngine = function (_Component) {\\n  (0, _inherits2.default)(RecordEngine, _Component);\\n\\n  function RecordEngine(player, options) {\\n    (0, _classCallCheck2.default)(this, RecordEngine);\\n    options.evented = true;\\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RecordEngine).call(this, player, options));\\n  }\\n\\n  (0, _createClass2.default)(RecordEngine, [{\\n    key: \\\"dispose\\\",\\n    value: function dispose() {\\n      if (this.recordedData !== undefined) {\\n        URL.revokeObjectURL(this.recordedData);\\n      }\\n    }\\n  }, {\\n    key: \\\"destroy\\\",\\n    value: function destroy() {}\\n  }, {\\n    key: \\\"addFileInfo\\\",\\n    value: function addFileInfo(fileObj) {\\n      (0, _fileUtil.addFileInfo)(fileObj);\\n    }\\n  }, {\\n    key: \\\"onStopRecording\\\",\\n    value: function onStopRecording(data) {\\n      this.recordedData = data;\\n      this.addFileInfo(this.recordedData);\\n      this.dispose();\\n      this.trigger(_event.default.RECORD_COMPLETE);\\n    }\\n  }, {\\n    key: \\\"saveAs\\\",\\n    value: function saveAs(name) {\\n      var fileName = name[Object.keys(name)[0]];\\n      (0, _fileUtil.downloadBlob)(fileName, this.recordedData);\\n    }\\n  }]);\\n  return RecordEngine;\\n}(Component);\\n\\nexports.RecordEngine = RecordEngine;\\n_video.default.RecordEngine = RecordEngine;\\nComponent.registerComponent('RecordEngine', RecordEngine);\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/engine/record-engine.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/engine/record-mode.js\":\n/*!**************************************!*\\\n  !*** ./src/js/engine/record-mode.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.AUDIO_SCREEN = exports.SCREEN_ONLY = exports.ANIMATION = exports.AUDIO_VIDEO = exports.VIDEO_ONLY = exports.AUDIO_ONLY = exports.IMAGE_ONLY = exports.getRecorderMode = void 0;\\nvar IMAGE_ONLY = 'image_only';\\nexports.IMAGE_ONLY = IMAGE_ONLY;\\nvar AUDIO_ONLY = 'audio_only';\\nexports.AUDIO_ONLY = AUDIO_ONLY;\\nvar VIDEO_ONLY = 'video_only';\\nexports.VIDEO_ONLY = VIDEO_ONLY;\\nvar AUDIO_VIDEO = 'audio_video';\\nexports.AUDIO_VIDEO = AUDIO_VIDEO;\\nvar AUDIO_SCREEN = 'audio_screen';\\nexports.AUDIO_SCREEN = AUDIO_SCREEN;\\nvar ANIMATION = 'animation';\\nexports.ANIMATION = ANIMATION;\\nvar SCREEN_ONLY = 'screen_only';\\nexports.SCREEN_ONLY = SCREEN_ONLY;\\n\\nvar getRecorderMode = function getRecorderMode(image, audio, video, animation, screen) {\\n  if (isModeEnabled(image)) {\\n    return IMAGE_ONLY;\\n  } else if (isModeEnabled(animation)) {\\n    return ANIMATION;\\n  } else if (isModeEnabled(audio) && isModeEnabled(video)) {\\n    return AUDIO_VIDEO;\\n  } else if (isModeEnabled(audio) && isModeEnabled(screen)) {\\n    return AUDIO_SCREEN;\\n  } else if (!isModeEnabled(audio) && isModeEnabled(screen)) {\\n    return SCREEN_ONLY;\\n  } else if (isModeEnabled(audio) && !isModeEnabled(video)) {\\n    return AUDIO_ONLY;\\n  } else if (!isModeEnabled(audio) && isModeEnabled(video)) {\\n    return VIDEO_ONLY;\\n  }\\n};\\n\\nexports.getRecorderMode = getRecorderMode;\\n\\nvar isModeEnabled = function isModeEnabled(mode) {\\n  return mode === Object(mode) || mode === true;\\n};\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/engine/record-mode.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/engine/record-rtc.js\":\n/*!*************************************!*\\\n  !*** ./src/js/engine/record-rtc.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\"));\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\"));\\n\\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \\\"./node_modules/@babel/runtime/helpers/get.js\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\"));\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar _recordrtc = _interopRequireDefault(__webpack_require__(/*! recordrtc */ \\\"recordrtc\\\"));\\n\\nvar _event = _interopRequireDefault(__webpack_require__(/*! ../event */ \\\"./src/js/event.js\\\"));\\n\\nvar _recordEngine = __webpack_require__(/*! ./record-engine */ \\\"./src/js/engine/record-engine.js\\\");\\n\\nvar _detectBrowser = __webpack_require__(/*! ../utils/detect-browser */ \\\"./src/js/utils/detect-browser.js\\\");\\n\\nvar _recordMode = __webpack_require__(/*! ./record-mode */ \\\"./src/js/engine/record-mode.js\\\");\\n\\nvar Component = _video.default.getComponent('Component');\\n\\nvar RecordRTCEngine = function (_RecordEngine) {\\n  (0, _inherits2.default)(RecordRTCEngine, _RecordEngine);\\n\\n  function RecordRTCEngine() {\\n    (0, _classCallCheck2.default)(this, RecordRTCEngine);\\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RecordRTCEngine).apply(this, arguments));\\n  }\\n\\n  (0, _createClass2.default)(RecordRTCEngine, [{\\n    key: \\\"setup\\\",\\n    value: function setup(stream, mediaType, debug) {\\n      this.inputStream = stream;\\n      this.mediaType = mediaType;\\n      this.debug = debug;\\n\\n      if ('screen' in this.mediaType) {\\n        this.mediaType.video = true;\\n      }\\n\\n      if (this.recorderType !== undefined) {\\n        this.mediaType.video = this.recorderType;\\n      }\\n\\n      this.engine = new _recordrtc.default.MRecordRTC();\\n      this.engine.mediaType = this.mediaType;\\n      this.engine.disableLogs = !this.debug;\\n      this.engine.mimeType = this.mimeType;\\n      this.engine.bufferSize = this.bufferSize;\\n      this.engine.sampleRate = this.sampleRate;\\n      this.engine.numberOfAudioChannels = this.audioChannels;\\n      this.engine.video = this.video;\\n      this.engine.canvas = this.canvas;\\n      this.engine.bitrate = this.bitRate;\\n      this.engine.quality = this.quality;\\n      this.engine.frameRate = this.frameRate;\\n\\n      if (this.timeSlice !== undefined) {\\n        this.engine.timeSlice = this.timeSlice;\\n        this.engine.onTimeStamp = this.onTimeStamp.bind(this);\\n      }\\n\\n      this.engine.workerPath = this.workerPath;\\n      this.engine.webAssemblyPath = this.videoWebAssemblyURL;\\n      this.engine.addStream(this.inputStream);\\n    }\\n  }, {\\n    key: \\\"dispose\\\",\\n    value: function dispose() {\\n      (0, _get2.default)((0, _getPrototypeOf2.default)(RecordRTCEngine.prototype), \\\"dispose\\\", this).call(this);\\n      this.destroy();\\n    }\\n  }, {\\n    key: \\\"destroy\\\",\\n    value: function destroy() {\\n      if (this.engine && typeof this.engine.destroy === 'function') {\\n        this.engine.destroy();\\n      }\\n    }\\n  }, {\\n    key: \\\"start\\\",\\n    value: function start() {\\n      this.engine.startRecording();\\n    }\\n  }, {\\n    key: \\\"stop\\\",\\n    value: function stop() {\\n      this.engine.stopRecording(this.onStopRecording.bind(this));\\n    }\\n  }, {\\n    key: \\\"pause\\\",\\n    value: function pause() {\\n      this.engine.pauseRecording();\\n    }\\n  }, {\\n    key: \\\"resume\\\",\\n    value: function resume() {\\n      this.engine.resumeRecording();\\n    }\\n  }, {\\n    key: \\\"saveAs\\\",\\n    value: function saveAs(name) {\\n      if (this.engine && name !== undefined) {\\n        this.engine.save(name);\\n      }\\n    }\\n  }, {\\n    key: \\\"onStopRecording\\\",\\n    value: function onStopRecording(audioVideoURL, type) {\\n      var _this = this;\\n\\n      URL.revokeObjectURL(audioVideoURL);\\n      var recordType = this.player().record().getRecordType();\\n      this.engine.getBlob(function (recording) {\\n        switch (recordType) {\\n          case _recordMode.AUDIO_ONLY:\\n            if (recording.audio !== undefined) {\\n              _this.recordedData = recording.audio;\\n            }\\n\\n            break;\\n\\n          case _recordMode.VIDEO_ONLY:\\n          case _recordMode.AUDIO_VIDEO:\\n          case _recordMode.AUDIO_SCREEN:\\n          case _recordMode.SCREEN_ONLY:\\n            if (recording.video !== undefined) {\\n              _this.recordedData = recording.video;\\n            }\\n\\n            break;\\n\\n          case _recordMode.ANIMATION:\\n            if (recording.gif !== undefined) {\\n              _this.recordedData = recording.gif;\\n            }\\n\\n            break;\\n        }\\n\\n        _this.addFileInfo(_this.recordedData);\\n\\n        _this.trigger(_event.default.RECORD_COMPLETE);\\n      });\\n    }\\n  }, {\\n    key: \\\"onTimeStamp\\\",\\n    value: function onTimeStamp(current, all) {\\n      this.player().currentTimestamp = current;\\n      this.player().allTimestamps = all;\\n      var internal;\\n\\n      switch (this.player().record().getRecordType()) {\\n        case _recordMode.AUDIO_ONLY:\\n          internal = this.engine.audioRecorder;\\n          break;\\n\\n        case _recordMode.ANIMATION:\\n          internal = this.engine.gifRecorder;\\n          break;\\n\\n        default:\\n          internal = this.engine.videoRecorder;\\n      }\\n\\n      var maxFileSizeReached = false;\\n\\n      if (internal) {\\n        internal = internal.getInternalRecorder();\\n      }\\n\\n      if (internal instanceof _recordrtc.default.MediaStreamRecorder === true) {\\n        this.player().recordedData = internal.getArrayOfBlobs();\\n        this.addFileInfo(this.player().recordedData[this.player_.recordedData.length - 1]);\\n\\n        if (this.maxFileSize > 0) {\\n          var currentSize = new Blob(this.player().recordedData).size;\\n\\n          if (currentSize >= this.maxFileSize) {\\n            maxFileSizeReached = true;\\n          }\\n        }\\n      }\\n\\n      this.player().trigger(_event.default.TIMESTAMP);\\n\\n      if (maxFileSizeReached) {\\n        this.player().stop();\\n      }\\n    }\\n  }]);\\n  return RecordRTCEngine;\\n}(_recordEngine.RecordEngine);\\n\\n_video.default.RecordRTCEngine = RecordRTCEngine;\\nComponent.registerComponent('RecordRTCEngine', RecordRTCEngine);\\nvar _default = RecordRTCEngine;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/engine/record-rtc.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/event.js\":\n/*!*************************!*\\\n  !*** ./src/js/event.js ***!\n  \\*************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar Event = function Event() {\\n  (0, _classCallCheck2.default)(this, Event);\\n};\\n\\nEvent.READY = 'ready';\\nEvent.ERROR = 'error';\\nEvent.LOADEDMETADATA = 'loadedmetadata';\\nEvent.LOADSTART = 'loadstart';\\nEvent.USERINACTIVE = 'userinactive';\\nEvent.TIMEUPDATE = 'timeupdate';\\nEvent.DURATIONCHANGE = 'durationchange';\\nEvent.ENDED = 'ended';\\nEvent.PAUSE = 'pause';\\nEvent.PLAY = 'play';\\nEvent.DEVICE_READY = 'deviceReady';\\nEvent.DEVICE_ERROR = 'deviceError';\\nEvent.START_RECORD = 'startRecord';\\nEvent.STOP_RECORD = 'stopRecord';\\nEvent.FINISH_RECORD = 'finishRecord';\\nEvent.RECORD_COMPLETE = 'recordComplete';\\nEvent.PROGRESS_RECORD = 'progressRecord';\\nEvent.TIMESTAMP = 'timestamp';\\nEvent.ENUMERATE_READY = 'enumerateReady';\\nEvent.ENUMERATE_ERROR = 'enumerateError';\\nEvent.AUDIO_BUFFER_UPDATE = 'audioBufferUpdate';\\nEvent.AUDIO_OUTPUT_READY = 'audioOutputReady';\\nEvent.START_CONVERT = 'startConvert';\\nEvent.FINISH_CONVERT = 'finishConvert';\\nEvent.ENTER_PIP = 'enterPIP';\\nEvent.LEAVE_PIP = 'leavePIP';\\nEvent.ENTERPICTUREINPICTURE = 'enterpictureinpicture';\\nEvent.LEAVEPICTUREINPICTURE = 'leavepictureinpicture';\\nObject.freeze(Event);\\nvar _default = Event;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/event.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/hot-keys.js\":\n/*!****************************!*\\\n  !*** ./src/js/hot-keys.js ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar _recordMode = __webpack_require__(/*! ./engine/record-mode */ \\\"./src/js/engine/record-mode.js\\\");\\n\\nvar X_KEY = 88;\\nvar P_KEY = 80;\\nvar C_KEY = 67;\\n\\nvar defaultKeyHandler = function defaultKeyHandler(event) {\\n  switch (event.which) {\\n    case X_KEY:\\n      switch (this.player_.record().getRecordType()) {\\n        case _recordMode.IMAGE_ONLY:\\n          this.player_.cameraButton.trigger('click');\\n          break;\\n\\n        default:\\n          this.player_.recordToggle.trigger('click');\\n      }\\n\\n      break;\\n\\n    case P_KEY:\\n      if (this.player_.record().pictureInPicture === true) {\\n        this.player_.pipToggle.trigger('click');\\n      }\\n\\n      break;\\n\\n    case C_KEY:\\n      if (this.player_.controlBar.playToggle && this.player_.controlBar.playToggle.contentEl()) {\\n        player.controlBar.playToggle.trigger('click');\\n      }\\n\\n      break;\\n  }\\n};\\n\\nvar _default = defaultKeyHandler;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/hot-keys.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/utils/browser-shim.js\":\n/*!**************************************!*\\\n  !*** ./src/js/utils/browser-shim.js ***!\n  \\**************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar setSrcObject = function setSrcObject(stream, element) {\\n  if ('srcObject' in element) {\\n    element.srcObject = stream;\\n  } else if ('mozSrcObject' in element) {\\n    element.mozSrcObject = stream;\\n  } else {\\n    element.srcObject = stream;\\n  }\\n};\\n\\nvar _default = setSrcObject;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/utils/browser-shim.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/utils/compare-version.js\":\n/*!*****************************************!*\\\n  !*** ./src/js/utils/compare-version.js ***!\n  \\*****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar compareVersion = function compareVersion(v1, v2) {\\n  if (typeof v1 !== 'string') return false;\\n  if (typeof v2 !== 'string') return false;\\n  v1 = v1.split('.');\\n  v2 = v2.split('.');\\n  var k = Math.min(v1.length, v2.length);\\n  var i = 0;\\n\\n  for (i; i < k; ++i) {\\n    v1[i] = parseInt(v1[i], 10);\\n    v2[i] = parseInt(v2[i], 10);\\n    if (v1[i] > v2[i]) return 1;\\n    if (v1[i] < v2[i]) return -1;\\n  }\\n\\n  return v1.length === v2.length ? 0 : v1.length < v2.length ? -1 : 1;\\n};\\n\\nvar _default = compareVersion;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/utils/compare-version.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/utils/detect-browser.js\":\n/*!****************************************!*\\\n  !*** ./src/js/utils/detect-browser.js ***!\n  \\****************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.isFirefox = exports.isSafari = exports.isChrome = exports.isOpera = exports.isEdge = exports.detectBrowser = void 0;\\n\\nvar _window = _interopRequireDefault(__webpack_require__(/*! global/window */ \\\"./node_modules/global/window.js\\\"));\\n\\nvar detectBrowser = function detectBrowser() {\\n  var result = {};\\n  result.browser = null;\\n  result.version = null;\\n  result.minVersion = null;\\n\\n  if (typeof _window.default === 'undefined' || !_window.default.navigator) {\\n    result.browser = 'Not a supported browser.';\\n    return result;\\n  }\\n\\n  if (navigator.mozGetUserMedia) {\\n    result.browser = 'firefox';\\n    result.version = extractVersion(navigator.userAgent, /Firefox\\\\/(\\\\d+)\\\\./, 1);\\n    result.minVersion = 31;\\n  } else if (navigator.webkitGetUserMedia) {\\n    result.browser = 'chrome';\\n    result.version = extractVersion(navigator.userAgent, /Chrom(e|ium)\\\\/(\\\\d+)\\\\./, 2);\\n    result.minVersion = 38;\\n  } else if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\\\/(\\\\d+).(\\\\d+)$/)) {\\n    result.browser = 'edge';\\n    result.version = extractVersion(navigator.userAgent, /Edge\\\\/(\\\\d+).(\\\\d+)$/, 2);\\n    result.minVersion = 10547;\\n  } else if (_window.default.RTCPeerConnection && navigator.userAgent.match(/AppleWebKit\\\\/(\\\\d+)\\\\./)) {\\n    result.browser = 'safari';\\n    result.version = extractVersion(navigator.userAgent, /AppleWebKit\\\\/(\\\\d+)\\\\./, 1);\\n  } else {\\n    result.browser = 'Not a supported browser.';\\n    return result;\\n  }\\n\\n  return result;\\n};\\n\\nexports.detectBrowser = detectBrowser;\\n\\nvar extractVersion = function extractVersion(uastring, expr, pos) {\\n  var match = uastring.match(expr);\\n  return match && match.length >= pos && parseInt(match[pos], 10);\\n};\\n\\nvar isEdge = function isEdge() {\\n  return detectBrowser().browser === 'edge';\\n};\\n\\nexports.isEdge = isEdge;\\n\\nvar isSafari = function isSafari() {\\n  return detectBrowser().browser === 'safari';\\n};\\n\\nexports.isSafari = isSafari;\\n\\nvar isOpera = function isOpera() {\\n  return !!_window.default.opera || navigator.userAgent.indexOf('OPR/') !== -1;\\n};\\n\\nexports.isOpera = isOpera;\\n\\nvar isChrome = function isChrome() {\\n  return detectBrowser().browser === 'chrome';\\n};\\n\\nexports.isChrome = isChrome;\\n\\nvar isFirefox = function isFirefox() {\\n  return detectBrowser().browser === 'firefox';\\n};\\n\\nexports.isFirefox = isFirefox;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/utils/detect-browser.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/utils/file-util.js\":\n/*!***********************************!*\\\n  !*** ./src/js/utils/file-util.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.addFileInfo = exports.blobToArrayBuffer = exports.downloadBlob = void 0;\\n\\nvar downloadBlob = function downloadBlob(fileName, data) {\\n  if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\\n    return navigator.msSaveOrOpenBlob(data, fileName);\\n  } else if (typeof navigator.msSaveBlob !== 'undefined') {\\n    return navigator.msSaveBlob(data, fileName);\\n  }\\n\\n  var hyperlink = document.createElement('a');\\n  hyperlink.href = URL.createObjectURL(data);\\n  hyperlink.download = fileName;\\n  hyperlink.style = 'display:none;opacity:0;color:transparent;';\\n  (document.body || document.documentElement).appendChild(hyperlink);\\n\\n  if (typeof hyperlink.click === 'function') {\\n    hyperlink.click();\\n  } else {\\n    hyperlink.target = '_blank';\\n    hyperlink.dispatchEvent(new MouseEvent('click', {\\n      view: window,\\n      bubbles: true,\\n      cancelable: true\\n    }));\\n  }\\n\\n  URL.revokeObjectURL(hyperlink.href);\\n};\\n\\nexports.downloadBlob = downloadBlob;\\n\\nvar blobToArrayBuffer = function blobToArrayBuffer(fileObj) {\\n  return new Promise(function (resolve, reject) {\\n    var reader = new FileReader();\\n\\n    reader.onloadend = function () {\\n      resolve(reader.result);\\n    };\\n\\n    reader.onerror = function (ev) {\\n      reject(ev.error);\\n    };\\n\\n    reader.readAsArrayBuffer(fileObj);\\n  });\\n};\\n\\nexports.blobToArrayBuffer = blobToArrayBuffer;\\n\\nvar addFileInfo = function addFileInfo(fileObj, now) {\\n  if (fileObj instanceof Blob || fileObj instanceof File) {\\n    if (now === undefined) {\\n      now = new Date();\\n    }\\n\\n    try {\\n      fileObj.lastModified = now.getTime();\\n      fileObj.lastModifiedDate = now;\\n    } catch (e) {\\n      if (e instanceof TypeError) {} else {\\n        throw e;\\n      }\\n    }\\n\\n    var fileExtension = '.' + fileObj.type.split('/')[1];\\n\\n    if (fileExtension.indexOf(';') > -1) {\\n      fileExtension = fileExtension.split(';')[0];\\n    }\\n\\n    try {\\n      fileObj.name = now.getTime() + fileExtension;\\n    } catch (e) {\\n      if (e instanceof TypeError) {} else {\\n        throw e;\\n      }\\n    }\\n  }\\n};\\n\\nexports.addFileInfo = addFileInfo;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/utils/file-util.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/utils/format-time.js\":\n/*!*************************************!*\\\n  !*** ./src/js/utils/format-time.js ***!\n  \\*************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = void 0;\\n\\nvar formatTime = function formatTime(seconds, guide, msDisplayMax) {\\n  seconds = seconds < 0 ? 0 : seconds;\\n  guide = guide || seconds;\\n  var s = Math.floor(seconds % 60),\\n      m = Math.floor(seconds / 60 % 60),\\n      h = Math.floor(seconds / 3600),\\n      gm = Math.floor(guide / 60 % 60),\\n      gh = Math.floor(guide / 3600),\\n      ms = Math.floor((seconds - s) * 1000);\\n\\n  if (isNaN(seconds) || seconds === Infinity) {\\n    h = m = s = ms = '-';\\n  }\\n\\n  if (guide > 0 && guide < msDisplayMax) {\\n    if (ms < 100) {\\n      if (ms < 10) {\\n        ms = '00' + ms;\\n      } else {\\n        ms = '0' + ms;\\n      }\\n    }\\n\\n    ms = ':' + ms;\\n  } else {\\n    ms = '';\\n  }\\n\\n  h = h > 0 || gh > 0 ? h + ':' : '';\\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\\n  s = s < 10 ? '0' + s : s;\\n  return h + m + s + ms;\\n};\\n\\nvar _default = formatTime;\\nexports.default = _default;\\nmodule.exports = exports.default;\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/utils/format-time.js?\");\n\n/***/ }),\n\n/***/ \"./src/js/videojs.record.js\":\n/*!**********************************!*\\\n  !*** ./src/js/videojs.record.js ***!\n  \\**********************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\neval(\"\\n\\nvar _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ \\\"./node_modules/@babel/runtime/helpers/interopRequireDefault.js\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.Record = void 0;\\n\\nvar _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ \\\"./node_modules/@babel/runtime/helpers/typeof.js\\\"));\\n\\nvar _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ \\\"./node_modules/@babel/runtime/helpers/classCallCheck.js\\\"));\\n\\nvar _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ \\\"./node_modules/@babel/runtime/helpers/createClass.js\\\"));\\n\\nvar _possibleConstructorReturn2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/possibleConstructorReturn */ \\\"./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\\\"));\\n\\nvar _assertThisInitialized2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/assertThisInitialized */ \\\"./node_modules/@babel/runtime/helpers/assertThisInitialized.js\\\"));\\n\\nvar _getPrototypeOf2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/getPrototypeOf */ \\\"./node_modules/@babel/runtime/helpers/getPrototypeOf.js\\\"));\\n\\nvar _get2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/get */ \\\"./node_modules/@babel/runtime/helpers/get.js\\\"));\\n\\nvar _inherits2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/inherits */ \\\"./node_modules/@babel/runtime/helpers/inherits.js\\\"));\\n\\nvar _video = _interopRequireDefault(__webpack_require__(/*! video.js */ \\\"video.js\\\"));\\n\\nvar _animationDisplay = _interopRequireDefault(__webpack_require__(/*! ./controls/animation-display */ \\\"./src/js/controls/animation-display.js\\\"));\\n\\nvar _recordCanvas = _interopRequireDefault(__webpack_require__(/*! ./controls/record-canvas */ \\\"./src/js/controls/record-canvas.js\\\"));\\n\\nvar _deviceButton = _interopRequireDefault(__webpack_require__(/*! ./controls/device-button */ \\\"./src/js/controls/device-button.js\\\"));\\n\\nvar _cameraButton = _interopRequireDefault(__webpack_require__(/*! ./controls/camera-button */ \\\"./src/js/controls/camera-button.js\\\"));\\n\\nvar _recordToggle = _interopRequireDefault(__webpack_require__(/*! ./controls/record-toggle */ \\\"./src/js/controls/record-toggle.js\\\"));\\n\\nvar _recordIndicator = _interopRequireDefault(__webpack_require__(/*! ./controls/record-indicator */ \\\"./src/js/controls/record-indicator.js\\\"));\\n\\nvar _pictureInPictureToggle = _interopRequireDefault(__webpack_require__(/*! ./controls/picture-in-picture-toggle */ \\\"./src/js/controls/picture-in-picture-toggle.js\\\"));\\n\\nvar _event = _interopRequireDefault(__webpack_require__(/*! ./event */ \\\"./src/js/event.js\\\"));\\n\\nvar _hotKeys = _interopRequireDefault(__webpack_require__(/*! ./hot-keys */ \\\"./src/js/hot-keys.js\\\"));\\n\\nvar _defaults = _interopRequireDefault(__webpack_require__(/*! ./defaults */ \\\"./src/js/defaults.js\\\"));\\n\\nvar _formatTime = _interopRequireDefault(__webpack_require__(/*! ./utils/format-time */ \\\"./src/js/utils/format-time.js\\\"));\\n\\nvar _browserShim = _interopRequireDefault(__webpack_require__(/*! ./utils/browser-shim */ \\\"./src/js/utils/browser-shim.js\\\"));\\n\\nvar _compareVersion = _interopRequireDefault(__webpack_require__(/*! ./utils/compare-version */ \\\"./src/js/utils/compare-version.js\\\"));\\n\\nvar _detectBrowser = __webpack_require__(/*! ./utils/detect-browser */ \\\"./src/js/utils/detect-browser.js\\\");\\n\\nvar _engineLoader = __webpack_require__(/*! ./engine/engine-loader */ \\\"./src/js/engine/engine-loader.js\\\");\\n\\nvar _recordMode = __webpack_require__(/*! ./engine/record-mode */ \\\"./src/js/engine/record-mode.js\\\");\\n\\nvar Plugin = _video.default.getPlugin('plugin');\\n\\nvar Player = _video.default.getComponent('Player');\\n\\nvar AUTO = 'auto';\\n\\nPlayer.prototype.play = function play() {\\n  var retval = this.techGet_('play');\\n\\n  if (retval !== undefined && typeof retval.then === 'function') {\\n    retval.then(null, function (e) {});\\n  }\\n\\n  return retval;\\n};\\n\\nvar Record = function (_Plugin) {\\n  (0, _inherits2.default)(Record, _Plugin);\\n\\n  function Record(player, options) {\\n    var _this;\\n\\n    (0, _classCallCheck2.default)(this, Record);\\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Record).call(this, player, options));\\n    player.addClass('vjs-record');\\n\\n    _this.loadOptions();\\n\\n    _this.resetState();\\n\\n    var deviceIcon = 'av-perm';\\n\\n    switch (_this.getRecordType()) {\\n      case _recordMode.IMAGE_ONLY:\\n      case _recordMode.VIDEO_ONLY:\\n      case _recordMode.ANIMATION:\\n        deviceIcon = 'video-perm';\\n        break;\\n\\n      case _recordMode.AUDIO_ONLY:\\n        deviceIcon = 'audio-perm';\\n        break;\\n\\n      case _recordMode.SCREEN_ONLY:\\n        deviceIcon = 'screen-perm';\\n        break;\\n\\n      case _recordMode.AUDIO_SCREEN:\\n        deviceIcon = 'sv-perm';\\n        break;\\n    }\\n\\n    _deviceButton.default.prototype.buildCSSClass = function () {\\n      return 'vjs-record vjs-device-button vjs-control vjs-icon-' + deviceIcon;\\n    };\\n\\n    player.deviceButton = new _deviceButton.default(player, options);\\n    player.addChild(player.deviceButton);\\n    player.recordIndicator = new _recordIndicator.default(player, options);\\n    player.recordIndicator.hide();\\n    player.addChild(player.recordIndicator);\\n    player.recordCanvas = new _recordCanvas.default(player, options);\\n    player.recordCanvas.hide();\\n    player.addChild(player.recordCanvas);\\n    player.animationDisplay = new _animationDisplay.default(player, options);\\n    player.animationDisplay.hide();\\n    player.addChild(player.animationDisplay);\\n    player.cameraButton = new _cameraButton.default(player, options);\\n    player.cameraButton.hide();\\n    player.recordToggle = new _recordToggle.default(player, options);\\n    player.recordToggle.hide();\\n\\n    if (_video.default.VERSION === undefined || (0, _compareVersion.default)(_video.default.VERSION, '7.6.0') === -1) {\\n      player.pipToggle = new _pictureInPictureToggle.default(player, options);\\n      player.pipToggle.hide();\\n    }\\n\\n    if (_this.pictureInPicture === true) {\\n      _this.onEnterPiPHandler = _this.onEnterPiP.bind((0, _assertThisInitialized2.default)(_this));\\n      _this.onLeavePiPHandler = _this.onLeavePiP.bind((0, _assertThisInitialized2.default)(_this));\\n    }\\n\\n    if (_this.player.options_.controlBar) {\\n      var customUIElements = ['deviceButton', 'recordIndicator', 'cameraButton', 'recordToggle'];\\n\\n      if (player.pipToggle) {\\n        customUIElements.push('pipToggle');\\n      }\\n\\n      customUIElements.forEach(function (element) {\\n        if (_this.player.options_.controlBar[element] !== undefined) {\\n          _this.player[element].layoutExclude = true;\\n\\n          _this.player[element].hide();\\n        }\\n      });\\n    }\\n\\n    _this.player.one(_event.default.READY, _this.setupUI.bind((0, _assertThisInitialized2.default)(_this)));\\n\\n    return _this;\\n  }\\n\\n  (0, _createClass2.default)(Record, [{\\n    key: \\\"loadOptions\\\",\\n    value: function loadOptions() {\\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n\\n      var recordOptions = _video.default.mergeOptions(_defaults.default, this.player.options_.plugins.record, newOptions);\\n\\n      this.recordImage = recordOptions.image;\\n      this.recordAudio = recordOptions.audio;\\n      this.recordVideo = recordOptions.video;\\n      this.recordAnimation = recordOptions.animation;\\n      this.recordScreen = recordOptions.screen;\\n      this.maxLength = recordOptions.maxLength;\\n      this.maxFileSize = recordOptions.maxFileSize;\\n      this.msDisplayMax = parseFloat(recordOptions.msDisplayMax);\\n      this.debug = recordOptions.debug;\\n      this.pictureInPicture = recordOptions.pip;\\n      this.recordTimeSlice = recordOptions.timeSlice;\\n      this.autoMuteDevice = recordOptions.autoMuteDevice;\\n      this.pluginLibraryOptions = recordOptions.pluginLibraryOptions;\\n      this.videoFrameWidth = recordOptions.frameWidth;\\n      this.videoFrameHeight = recordOptions.frameHeight;\\n      this.videoFrameRate = recordOptions.videoFrameRate;\\n      this.videoBitRate = recordOptions.videoBitRate;\\n      this.videoEngine = recordOptions.videoEngine;\\n      this.videoRecorderType = recordOptions.videoRecorderType;\\n      this.videoMimeType = recordOptions.videoMimeType;\\n      this.videoWorkerURL = recordOptions.videoWorkerURL;\\n      this.videoWebAssemblyURL = recordOptions.videoWebAssemblyURL;\\n      this.convertEngine = recordOptions.convertEngine;\\n      this.convertWorkerURL = recordOptions.convertWorkerURL;\\n      this.convertOptions = recordOptions.convertOptions;\\n      this.audioEngine = recordOptions.audioEngine;\\n      this.audioRecorderType = recordOptions.audioRecorderType;\\n      this.audioWorkerURL = recordOptions.audioWorkerURL;\\n      this.audioWebAssemblyURL = recordOptions.audioWebAssemblyURL;\\n      this.audioBufferSize = recordOptions.audioBufferSize;\\n      this.audioSampleRate = recordOptions.audioSampleRate;\\n      this.audioBitRate = recordOptions.audioBitRate;\\n      this.audioChannels = recordOptions.audioChannels;\\n      this.audioMimeType = recordOptions.audioMimeType;\\n      this.audioBufferUpdate = recordOptions.audioBufferUpdate;\\n      this.animationFrameRate = recordOptions.animationFrameRate;\\n      this.animationQuality = recordOptions.animationQuality;\\n    }\\n  }, {\\n    key: \\\"setupUI\\\",\\n    value: function setupUI() {\\n      var _this2 = this;\\n\\n      this.player.controlBar.addChild(this.player.cameraButton);\\n      this.player.controlBar.el().insertBefore(this.player.cameraButton.el(), this.player.controlBar.el().firstChild);\\n      this.player.controlBar.el().insertBefore(this.player.recordToggle.el(), this.player.controlBar.el().firstChild);\\n\\n      if (this.player.controlBar.pictureInPictureToggle === undefined) {\\n        this.player.controlBar.addChild(this.player.pipToggle);\\n      } else {\\n        this.player.pipToggle = this.player.controlBar.pictureInPictureToggle;\\n        this.player.pipToggle.hide();\\n      }\\n\\n      if (this.player.controlBar.remainingTimeDisplay !== undefined) {\\n        this.player.controlBar.remainingTimeDisplay.el().style.display = 'none';\\n      }\\n\\n      if (this.player.controlBar.liveDisplay !== undefined) {\\n        this.player.controlBar.liveDisplay.el().style.display = 'none';\\n      }\\n\\n      this.player.loop(false);\\n\\n      switch (this.getRecordType()) {\\n        case _recordMode.AUDIO_ONLY:\\n          this.surfer = this.player.wavesurfer();\\n          break;\\n\\n        case _recordMode.IMAGE_ONLY:\\n        case _recordMode.VIDEO_ONLY:\\n        case _recordMode.AUDIO_VIDEO:\\n        case _recordMode.ANIMATION:\\n        case _recordMode.SCREEN_ONLY:\\n        case _recordMode.AUDIO_SCREEN:\\n          this.player.bigPlayButton.hide();\\n          this.player.one(_event.default.LOADEDMETADATA, function () {\\n            _this2.setDuration(_this2.maxLength);\\n          });\\n          this.player.one(_event.default.LOADSTART, function () {\\n            _this2.setDuration(_this2.maxLength);\\n          });\\n\\n          if (this.player.usingNativeControls_ === true) {\\n            if (this.player.tech_.el_ !== undefined) {\\n              this.player.tech_.el_.controls = false;\\n            }\\n          }\\n\\n          this.player.removeTechControlsListeners_();\\n\\n          if (this.player.options_.controls) {\\n            if (this.player.controlBar.progressControl !== undefined) {\\n              this.player.controlBar.progressControl.hide();\\n            }\\n\\n            this.player.on(_event.default.USERINACTIVE, function (event) {\\n              _this2.player.userActive(true);\\n            });\\n            this.player.controlBar.show();\\n            this.player.controlBar.el().style.display = 'flex';\\n          }\\n\\n          break;\\n      }\\n\\n      this.player.off(_event.default.TIMEUPDATE);\\n      this.player.off(_event.default.DURATIONCHANGE);\\n      this.player.off(_event.default.LOADEDMETADATA);\\n      this.player.off(_event.default.LOADSTART);\\n      this.setDuration(this.maxLength);\\n\\n      if (this.player.options_.plugins.record && this.player.options_.plugins.record.hotKeys && this.player.options_.plugins.record.hotKeys !== false) {\\n        var handler = this.player.options_.plugins.record.hotKeys;\\n\\n        if (handler === true) {\\n          handler = _hotKeys.default;\\n        }\\n\\n        this.player.options_.userActions = {\\n          hotkeys: handler\\n        };\\n      }\\n\\n      if (this.player.controlBar.playToggle !== undefined) {\\n        this.player.controlBar.playToggle.hide();\\n      }\\n    }\\n  }, {\\n    key: \\\"isRecording\\\",\\n    value: function isRecording() {\\n      return this._recording;\\n    }\\n  }, {\\n    key: \\\"isProcessing\\\",\\n    value: function isProcessing() {\\n      return this._processing;\\n    }\\n  }, {\\n    key: \\\"isDestroyed\\\",\\n    value: function isDestroyed() {\\n      var destroyed = this.player === null;\\n\\n      if (destroyed === false) {\\n        destroyed = this.player.children() === null;\\n      }\\n\\n      return destroyed;\\n    }\\n  }, {\\n    key: \\\"getDevice\\\",\\n    value: function getDevice() {\\n      var _this3 = this;\\n\\n      if (this.deviceReadyCallback === undefined) {\\n        this.deviceReadyCallback = this.onDeviceReady.bind(this);\\n      }\\n\\n      if (this.deviceErrorCallback === undefined) {\\n        this.deviceErrorCallback = this.onDeviceError.bind(this);\\n      }\\n\\n      if (this.engineStopCallback === undefined) {\\n        this.engineStopCallback = this.onRecordComplete.bind(this);\\n      }\\n\\n      if (this.getRecordType() === _recordMode.SCREEN_ONLY || this.getRecordType() === _recordMode.AUDIO_SCREEN) {\\n        if (navigator.mediaDevices === undefined || navigator.mediaDevices.getDisplayMedia === undefined) {\\n          this.player.trigger(_event.default.ERROR, 'This browser does not support navigator.mediaDevices.getDisplayMedia');\\n          return;\\n        }\\n      } else {\\n        if (navigator.mediaDevices === undefined || navigator.mediaDevices.getUserMedia === undefined) {\\n          this.player.trigger(_event.default.ERROR, 'This browser does not support navigator.mediaDevices.getUserMedia');\\n          return;\\n        }\\n      }\\n\\n      switch (this.getRecordType()) {\\n        case _recordMode.AUDIO_ONLY:\\n          this.mediaType = {\\n            audio: this.audioRecorderType === AUTO ? true : this.audioRecorderType,\\n            video: false\\n          };\\n          this.surfer.surfer.microphone.un(_event.default.DEVICE_READY, this.deviceReadyCallback);\\n          this.surfer.surfer.microphone.un(_event.default.DEVICE_ERROR, this.deviceErrorCallback);\\n          this.surfer.surfer.microphone.on(_event.default.DEVICE_READY, this.deviceReadyCallback);\\n          this.surfer.surfer.microphone.on(_event.default.DEVICE_ERROR, this.deviceErrorCallback);\\n          this.surfer.setupPlaybackEvents(false);\\n          this.surfer.liveMode = true;\\n          this.surfer.surfer.microphone.paused = false;\\n\\n          if (this.surfer.surfer.backend.ac.state === 'suspended') {\\n            this.surfer.surfer.backend.ac.resume();\\n          }\\n\\n          if (this.audioBufferUpdate === true) {\\n            this.surfer.surfer.microphone.reloadBufferFunction = function (event) {\\n              if (!_this3.surfer.surfer.microphone.paused) {\\n                _this3.surfer.surfer.empty();\\n\\n                _this3.surfer.surfer.loadDecodedBuffer(event.inputBuffer);\\n\\n                _this3.player.recordedData = event.inputBuffer;\\n\\n                _this3.player.trigger(_event.default.AUDIO_BUFFER_UPDATE);\\n              }\\n            };\\n          }\\n\\n          this.surfer.surfer.microphone.start();\\n          break;\\n\\n        case _recordMode.IMAGE_ONLY:\\n        case _recordMode.VIDEO_ONLY:\\n          this.mediaType = {\\n            audio: false,\\n            video: this.videoRecorderType === AUTO ? true : this.videoRecorderType\\n          };\\n          navigator.mediaDevices.getUserMedia({\\n            audio: false,\\n            video: this.getRecordType() === _recordMode.IMAGE_ONLY ? this.recordImage : this.recordVideo\\n          }).then(this.onDeviceReady.bind(this)).catch(this.onDeviceError.bind(this));\\n          break;\\n\\n        case _recordMode.AUDIO_SCREEN:\\n          this.mediaType = {\\n            audio: this.audioRecorderType === AUTO ? true : this.audioRecorderType,\\n            video: this.videoRecorderType === AUTO ? true : this.videoRecorderType\\n          };\\n          navigator.mediaDevices.getDisplayMedia({\\n            video: true\\n          }).then(function (screenStream) {\\n            navigator.mediaDevices.getUserMedia({\\n              audio: _this3.recordAudio\\n            }).then(function (mic) {\\n              screenStream.addTrack(mic.getTracks()[0]);\\n\\n              _this3.onDeviceReady.bind(_this3)(screenStream);\\n            });\\n          }).catch(this.onDeviceError.bind(this));\\n          break;\\n\\n        case _recordMode.AUDIO_VIDEO:\\n          this.mediaType = {\\n            audio: this.audioRecorderType === AUTO ? true : this.audioRecorderType,\\n            video: this.videoRecorderType === AUTO ? true : this.videoRecorderType\\n          };\\n          navigator.mediaDevices.getUserMedia({\\n            audio: this.recordAudio,\\n            video: this.recordVideo\\n          }).then(this.onDeviceReady.bind(this)).catch(this.onDeviceError.bind(this));\\n          break;\\n\\n        case _recordMode.ANIMATION:\\n          this.mediaType = {\\n            audio: false,\\n            video: false,\\n            gif: true\\n          };\\n          navigator.mediaDevices.getUserMedia({\\n            audio: false,\\n            video: this.recordAnimation\\n          }).then(this.onDeviceReady.bind(this)).catch(this.onDeviceError.bind(this));\\n          break;\\n\\n        case _recordMode.SCREEN_ONLY:\\n          this.mediaType = {\\n            audio: false,\\n            video: false,\\n            screen: true,\\n            gif: false\\n          };\\n          navigator.mediaDevices.getDisplayMedia({\\n            video: true\\n          }).then(this.onDeviceReady.bind(this)).catch(this.onDeviceError.bind(this));\\n          break;\\n      }\\n    }\\n  }, {\\n    key: \\\"onDeviceReady\\\",\\n    value: function onDeviceReady(stream) {\\n      var _this4 = this;\\n\\n      this._deviceActive = true;\\n      this.stream = stream;\\n      this.player.deviceButton.hide();\\n      this.setDuration(this.maxLength);\\n      this.setCurrentTime(0);\\n\\n      if (this.player.controlBar.playToggle !== undefined) {\\n        this.player.controlBar.playToggle.hide();\\n      }\\n\\n      this.off(this.player, _event.default.TIMEUPDATE, this.playbackTimeUpdate);\\n      this.off(this.player, _event.default.ENDED, this.playbackTimeUpdate);\\n\\n      if (this.getRecordType() !== _recordMode.IMAGE_ONLY) {\\n        if (this.getRecordType() !== _recordMode.AUDIO_ONLY && (0, _engineLoader.isAudioPluginActive)(this.audioEngine)) {\\n          throw new Error('Currently ' + this.audioEngine + ' is only supported in audio-only mode.');\\n        }\\n\\n        var EngineClass, engineType;\\n\\n        switch (this.getRecordType()) {\\n          case _recordMode.AUDIO_ONLY:\\n            EngineClass = (0, _engineLoader.getAudioEngine)(this.audioEngine);\\n            engineType = this.audioEngine;\\n            break;\\n\\n          default:\\n            EngineClass = (0, _engineLoader.getVideoEngine)(this.videoEngine);\\n            engineType = this.videoEngine;\\n        }\\n\\n        try {\\n          this.engine = new EngineClass(this.player, this.player.options_);\\n        } catch (err) {\\n          throw new Error('Could not load ' + engineType + ' plugin');\\n        }\\n\\n        this.engine.on(_event.default.RECORD_COMPLETE, this.engineStopCallback);\\n        this.engine.bufferSize = this.audioBufferSize;\\n        this.engine.sampleRate = this.audioSampleRate;\\n        this.engine.bitRate = this.audioBitRate;\\n        this.engine.audioChannels = this.audioChannels;\\n        this.engine.audioWorkerURL = this.audioWorkerURL;\\n        this.engine.audioWebAssemblyURL = this.audioWebAssemblyURL;\\n        this.engine.mimeType = {\\n          video: this.videoMimeType,\\n          gif: 'image/gif'\\n        };\\n\\n        if (this.audioMimeType !== null && this.audioMimeType !== AUTO) {\\n          this.engine.mimeType.audio = this.audioMimeType;\\n        }\\n\\n        this.engine.videoWorkerURL = this.videoWorkerURL;\\n        this.engine.videoWebAssemblyURL = this.videoWebAssemblyURL;\\n        this.engine.videoBitRate = this.videoBitRate;\\n        this.engine.videoFrameRate = this.videoFrameRate;\\n        this.engine.video = {\\n          width: this.videoFrameWidth,\\n          height: this.videoFrameHeight\\n        };\\n        this.engine.canvas = {\\n          width: this.videoFrameWidth,\\n          height: this.videoFrameHeight\\n        };\\n        this.engine.quality = this.animationQuality;\\n        this.engine.frameRate = this.animationFrameRate;\\n\\n        if (this.recordTimeSlice && this.recordTimeSlice > 0) {\\n          this.engine.timeSlice = this.recordTimeSlice;\\n          this.engine.maxFileSize = this.maxFileSize;\\n        }\\n\\n        this.engine.pluginLibraryOptions = this.pluginLibraryOptions;\\n        this.engine.setup(this.stream, this.mediaType, this.debug);\\n\\n        if (this.convertEngine !== '') {\\n          var ConvertEngineClass = (0, _engineLoader.getConvertEngine)(this.convertEngine);\\n\\n          try {\\n            this.converter = new ConvertEngineClass(this.player, this.player.options_);\\n          } catch (err) {\\n            throw new Error('Could not load ' + this.convertEngine + ' plugin');\\n          }\\n\\n          this.converter.convertWorkerURL = this.convertWorkerURL;\\n          this.converter.convertOptions = this.convertOptions;\\n          this.converter.pluginLibraryOptions = this.pluginLibraryOptions;\\n          this.converter.setup(this.mediaType, this.debug);\\n        }\\n\\n        var uiElements = ['currentTimeDisplay', 'timeDivider', 'durationDisplay'];\\n        uiElements.forEach(function (element) {\\n          element = _this4.player.controlBar[element];\\n\\n          if (element !== undefined) {\\n            element.el().style.display = 'block';\\n            element.show();\\n          }\\n        });\\n        this.player.recordToggle.show();\\n      } else {\\n        this.player.recordIndicator.disable();\\n        this.retrySnapshot();\\n        this.player.cameraButton.onStop();\\n        this.player.cameraButton.show();\\n      }\\n\\n      if (this.getRecordType() !== _recordMode.AUDIO_ONLY) {\\n        this.mediaElement = this.player.el().firstChild;\\n        this.mediaElement.controls = false;\\n        this.mediaElement.muted = true;\\n        this.displayVolumeControl(false);\\n\\n        if (this.pictureInPicture === true) {\\n          this.player.pipToggle.show();\\n          this.mediaElement.removeEventListener(_event.default.ENTERPICTUREINPICTURE, this.onEnterPiPHandler);\\n          this.mediaElement.removeEventListener(_event.default.LEAVEPICTUREINPICTURE, this.onLeavePiPHandler);\\n          this.mediaElement.addEventListener(_event.default.ENTERPICTUREINPICTURE, this.onEnterPiPHandler);\\n          this.mediaElement.addEventListener(_event.default.LEAVEPICTUREINPICTURE, this.onLeavePiPHandler);\\n        }\\n\\n        this.load(this.stream);\\n        this.player.one(_event.default.LOADEDMETADATA, function () {\\n          _this4.mediaElement.play();\\n\\n          _this4.player.trigger(_event.default.DEVICE_READY);\\n        });\\n      } else {\\n        this.player.trigger(_event.default.DEVICE_READY);\\n      }\\n    }\\n  }, {\\n    key: \\\"onDeviceError\\\",\\n    value: function onDeviceError(code) {\\n      this._deviceActive = false;\\n\\n      if (!this.isDestroyed()) {\\n        this.player.deviceErrorCode = code;\\n        this.player.trigger(_event.default.DEVICE_ERROR);\\n      }\\n    }\\n  }, {\\n    key: \\\"start\\\",\\n    value: function start() {\\n      var _this5 = this;\\n\\n      if (!this.isProcessing()) {\\n        this._recording = true;\\n\\n        if (this.player.controlBar.playToggle !== undefined) {\\n          this.player.controlBar.playToggle.hide();\\n        }\\n\\n        this.off(this.player, _event.default.TIMEUPDATE, this.playbackTimeUpdate);\\n        this.off(this.player, _event.default.ENDED, this.playbackTimeUpdate);\\n\\n        switch (this.getRecordType()) {\\n          case _recordMode.AUDIO_ONLY:\\n            this.surfer.setupPlaybackEvents(false);\\n            this.surfer.surfer.microphone.paused = false;\\n            this.surfer.liveMode = true;\\n            this.surfer.surfer.microphone.play();\\n            break;\\n\\n          case _recordMode.VIDEO_ONLY:\\n          case _recordMode.AUDIO_VIDEO:\\n          case _recordMode.AUDIO_SCREEN:\\n          case _recordMode.SCREEN_ONLY:\\n            this.startVideoPreview();\\n            break;\\n\\n          case _recordMode.ANIMATION:\\n            this.player.recordCanvas.hide();\\n            this.player.animationDisplay.hide();\\n            this.mediaElement.style.display = 'block';\\n            this.captureFrame().then(function (result) {\\n              _this5.startVideoPreview();\\n            });\\n            break;\\n        }\\n\\n        if (this.autoMuteDevice) {\\n          this.muteTracks(false);\\n        }\\n\\n        switch (this.getRecordType()) {\\n          case _recordMode.IMAGE_ONLY:\\n            this.createSnapshot();\\n            this.player.trigger(_event.default.START_RECORD);\\n            break;\\n\\n          case _recordMode.VIDEO_ONLY:\\n          case _recordMode.AUDIO_VIDEO:\\n          case _recordMode.AUDIO_SCREEN:\\n          case _recordMode.ANIMATION:\\n          case _recordMode.SCREEN_ONLY:\\n            this.player.one(_event.default.LOADEDMETADATA, function () {\\n              _this5.startRecording();\\n            });\\n            break;\\n\\n          default:\\n            this.startRecording();\\n        }\\n      }\\n    }\\n  }, {\\n    key: \\\"startRecording\\\",\\n    value: function startRecording() {\\n      this.paused = false;\\n      this.pauseTime = this.pausedTime = 0;\\n      this.startTime = performance.now();\\n      var COUNTDOWN_SPEED = 100;\\n      this.countDown = this.player.setInterval(this.onCountDown.bind(this), COUNTDOWN_SPEED);\\n\\n      if (this.engine !== undefined) {\\n        this.engine.dispose();\\n      }\\n\\n      this.engine.start();\\n      this.player.trigger(_event.default.START_RECORD);\\n    }\\n  }, {\\n    key: \\\"stop\\\",\\n    value: function stop() {\\n      if (!this.isProcessing()) {\\n        this._recording = false;\\n        this._processing = true;\\n\\n        if (this.getRecordType() !== _recordMode.IMAGE_ONLY) {\\n          this.player.trigger(_event.default.STOP_RECORD);\\n          this.player.clearInterval(this.countDown);\\n\\n          if (this.engine) {\\n            this.engine.stop();\\n          }\\n\\n          if (this.autoMuteDevice) {\\n            this.muteTracks(true);\\n          }\\n        } else {\\n          if (this.player.recordedData) {\\n            this.player.trigger(_event.default.FINISH_RECORD);\\n          }\\n        }\\n      }\\n    }\\n  }, {\\n    key: \\\"stopDevice\\\",\\n    value: function stopDevice() {\\n      if (this.isRecording()) {\\n        this.player.one(_event.default.FINISH_RECORD, this.stopStream.bind(this));\\n        this.stop();\\n      } else {\\n        this.stopStream();\\n      }\\n    }\\n  }, {\\n    key: \\\"stopStream\\\",\\n    value: function stopStream() {\\n      if (this.stream) {\\n        this._deviceActive = false;\\n\\n        if (this.getRecordType() === _recordMode.AUDIO_ONLY) {\\n          this.surfer.surfer.microphone.stopDevice();\\n          return;\\n        }\\n\\n        this.stream.getTracks().forEach(function (stream) {\\n          stream.stop();\\n        });\\n      }\\n    }\\n  }, {\\n    key: \\\"pause\\\",\\n    value: function pause() {\\n      if (!this.paused) {\\n        this.pauseTime = performance.now();\\n        this.paused = true;\\n        this.engine.pause();\\n      }\\n    }\\n  }, {\\n    key: \\\"resume\\\",\\n    value: function resume() {\\n      if (this.paused) {\\n        this.pausedTime += performance.now() - this.pauseTime;\\n        this.engine.resume();\\n        this.paused = false;\\n      }\\n    }\\n  }, {\\n    key: \\\"onRecordComplete\\\",\\n    value: function onRecordComplete() {\\n      var _this6 = this;\\n\\n      this.player.recordedData = this.engine.recordedData;\\n\\n      if (this.player.controlBar.playToggle !== undefined) {\\n        this.player.controlBar.playToggle.removeClass('vjs-ended');\\n        this.player.controlBar.playToggle.show();\\n      }\\n\\n      if (this.converter !== undefined) {\\n        this.converter.convert(this.player.recordedData);\\n      }\\n\\n      this.player.trigger(_event.default.FINISH_RECORD);\\n\\n      if (this.isDestroyed()) {\\n        return;\\n      }\\n\\n      switch (this.getRecordType()) {\\n        case _recordMode.AUDIO_ONLY:\\n          this.surfer.pause();\\n          this.surfer.setupPlaybackEvents(true);\\n          this.player.loadingSpinner.show();\\n          this.surfer.surfer.once(_event.default.READY, function () {\\n            _this6._processing = false;\\n          });\\n          this.load(this.player.recordedData);\\n          break;\\n\\n        case _recordMode.VIDEO_ONLY:\\n        case _recordMode.AUDIO_VIDEO:\\n        case _recordMode.AUDIO_SCREEN:\\n        case _recordMode.SCREEN_ONLY:\\n          this.player.one(_event.default.PAUSE, function () {\\n            _this6._processing = false;\\n\\n            _this6.player.loadingSpinner.hide();\\n\\n            _this6.setDuration(_this6.streamDuration);\\n\\n            _this6.on(_this6.player, _event.default.TIMEUPDATE, _this6.playbackTimeUpdate);\\n\\n            _this6.on(_this6.player, _event.default.ENDED, _this6.playbackTimeUpdate);\\n\\n            if (_this6.getRecordType() === _recordMode.AUDIO_VIDEO || _this6.getRecordType() === _recordMode.AUDIO_SCREEN) {\\n              _this6.mediaElement.muted = false;\\n\\n              _this6.displayVolumeControl(true);\\n            }\\n\\n            _this6.load(_this6.player.recordedData);\\n          });\\n          this.player.pause();\\n          break;\\n\\n        case _recordMode.ANIMATION:\\n          this._processing = false;\\n          this.player.loadingSpinner.hide();\\n          this.setDuration(this.streamDuration);\\n          this.mediaElement.style.display = 'none';\\n          this.player.recordCanvas.show();\\n          this.player.pause();\\n          this.on(this.player, _event.default.PLAY, this.showAnimation);\\n          this.on(this.player, _event.default.PAUSE, this.hideAnimation);\\n          break;\\n      }\\n    }\\n  }, {\\n    key: \\\"onCountDown\\\",\\n    value: function onCountDown() {\\n      if (!this.paused) {\\n        var now = performance.now();\\n        var duration = this.maxLength;\\n        var currentTime = (now - (this.startTime + this.pausedTime)) / 1000;\\n        this.streamDuration = currentTime;\\n\\n        if (currentTime >= duration) {\\n          currentTime = duration;\\n          this.stop();\\n        }\\n\\n        this.setDuration(duration);\\n        this.setCurrentTime(currentTime, duration);\\n        this.player.trigger(_event.default.PROGRESS_RECORD);\\n      }\\n    }\\n  }, {\\n    key: \\\"getCurrentTime\\\",\\n    value: function getCurrentTime() {\\n      var currentTime = isNaN(this.streamCurrentTime) ? 0 : this.streamCurrentTime;\\n\\n      if (this.getRecordType() === _recordMode.AUDIO_ONLY) {\\n        currentTime = this.surfer.getCurrentTime();\\n      }\\n\\n      return currentTime;\\n    }\\n  }, {\\n    key: \\\"setCurrentTime\\\",\\n    value: function setCurrentTime(currentTime, duration) {\\n      currentTime = isNaN(currentTime) ? 0 : currentTime;\\n      duration = isNaN(duration) ? 0 : duration;\\n\\n      switch (this.getRecordType()) {\\n        case _recordMode.AUDIO_ONLY:\\n          this.surfer.setCurrentTime(currentTime, duration);\\n          break;\\n\\n        case _recordMode.VIDEO_ONLY:\\n        case _recordMode.AUDIO_VIDEO:\\n        case _recordMode.AUDIO_SCREEN:\\n        case _recordMode.ANIMATION:\\n        case _recordMode.SCREEN_ONLY:\\n          if (this.player.controlBar.currentTimeDisplay && this.player.controlBar.currentTimeDisplay.contentEl()) {\\n            this.streamCurrentTime = Math.min(currentTime, duration);\\n            this.player.controlBar.currentTimeDisplay.formattedTime_ = this.player.controlBar.currentTimeDisplay.contentEl().lastChild.textContent = (0, _formatTime.default)(this.streamCurrentTime, duration, this.msDisplayMax);\\n          }\\n\\n          break;\\n      }\\n    }\\n  }, {\\n    key: \\\"getDuration\\\",\\n    value: function getDuration() {\\n      var duration = isNaN(this.streamDuration) ? 0 : this.streamDuration;\\n      return duration;\\n    }\\n  }, {\\n    key: \\\"setDuration\\\",\\n    value: function setDuration(duration) {\\n      duration = isNaN(duration) ? 0 : duration;\\n\\n      switch (this.getRecordType()) {\\n        case _recordMode.AUDIO_ONLY:\\n          this.surfer.setDuration(duration);\\n          break;\\n\\n        case _recordMode.VIDEO_ONLY:\\n        case _recordMode.AUDIO_VIDEO:\\n        case _recordMode.AUDIO_SCREEN:\\n        case _recordMode.ANIMATION:\\n        case _recordMode.SCREEN_ONLY:\\n          if (this.player.controlBar.durationDisplay && this.player.controlBar.durationDisplay.contentEl()) {\\n            this.player.controlBar.durationDisplay.formattedTime_ = this.player.controlBar.durationDisplay.contentEl().lastChild.textContent = (0, _formatTime.default)(duration, duration, this.msDisplayMax);\\n          }\\n\\n          break;\\n      }\\n    }\\n  }, {\\n    key: \\\"load\\\",\\n    value: function load(url) {\\n      switch (this.getRecordType()) {\\n        case _recordMode.AUDIO_ONLY:\\n          this.surfer.load(url);\\n          break;\\n\\n        case _recordMode.IMAGE_ONLY:\\n        case _recordMode.VIDEO_ONLY:\\n        case _recordMode.AUDIO_VIDEO:\\n        case _recordMode.AUDIO_SCREEN:\\n        case _recordMode.ANIMATION:\\n        case _recordMode.SCREEN_ONLY:\\n          if (url instanceof Blob || url instanceof File) {\\n            this.mediaElement.srcObject = null;\\n            this.mediaElement.src = URL.createObjectURL(url);\\n          } else {\\n            (0, _browserShim.default)(url, this.mediaElement);\\n          }\\n\\n          break;\\n      }\\n    }\\n  }, {\\n    key: \\\"saveAs\\\",\\n    value: function saveAs(name) {\\n      if (this.engine && name !== undefined) {\\n        this.engine.saveAs(name);\\n      }\\n    }\\n  }, {\\n    key: \\\"dispose\\\",\\n    value: function dispose() {\\n      this.player.off(_event.default.READY);\\n      this.player.off(_event.default.USERINACTIVE);\\n      this.player.off(_event.default.LOADEDMETADATA);\\n\\n      if (this.engine) {\\n        this.engine.dispose();\\n        this.engine.destroy();\\n        this.engine.off(_event.default.RECORD_COMPLETE, this.engineStopCallback);\\n      }\\n\\n      this.stop();\\n      this.stopDevice();\\n      this.removeRecording();\\n      this.player.clearInterval(this.countDown);\\n\\n      if (this.getRecordType() === _recordMode.AUDIO_ONLY) {\\n        if (this.surfer) {\\n          this.surfer.destroy();\\n        }\\n      }\\n\\n      this.resetState();\\n      (0, _get2.default)((0, _getPrototypeOf2.default)(Record.prototype), \\\"dispose\\\", this).call(this);\\n    }\\n  }, {\\n    key: \\\"destroy\\\",\\n    value: function destroy() {\\n      this.player.dispose();\\n    }\\n  }, {\\n    key: \\\"reset\\\",\\n    value: function reset() {\\n      var _this7 = this;\\n\\n      if (this.engine) {\\n        this.engine.dispose();\\n        this.engine.off(_event.default.RECORD_COMPLETE, this.engineStopCallback);\\n      }\\n\\n      this.stop();\\n      this.stopDevice();\\n      this.player.clearInterval(this.countDown);\\n      this.removeRecording();\\n      this.loadOptions();\\n      this.resetState();\\n      this.setDuration(this.maxLength);\\n      this.setCurrentTime(0);\\n      this.player.reset();\\n\\n      switch (this.getRecordType()) {\\n        case _recordMode.AUDIO_ONLY:\\n          if (this.surfer && this.surfer.surfer) {\\n            this.surfer.surfer.empty();\\n          }\\n\\n          break;\\n\\n        case _recordMode.IMAGE_ONLY:\\n        case _recordMode.ANIMATION:\\n          this.player.recordCanvas.hide();\\n          this.player.cameraButton.hide();\\n          break;\\n      }\\n\\n      if (this.player.controlBar.playToggle !== undefined) {\\n        this.player.controlBar.playToggle.hide();\\n      }\\n\\n      this.player.deviceButton.show();\\n      this.player.recordToggle.hide();\\n      this.player.one(_event.default.LOADEDMETADATA, function () {\\n        _this7.setDuration(_this7.maxLength);\\n      });\\n    }\\n  }, {\\n    key: \\\"resetState\\\",\\n    value: function resetState() {\\n      this._recording = false;\\n      this._processing = false;\\n      this._deviceActive = false;\\n      this.devices = [];\\n    }\\n  }, {\\n    key: \\\"removeRecording\\\",\\n    value: function removeRecording() {\\n      if (this.mediaElement && this.mediaElement.src.startsWith('blob:') === true) {\\n        URL.revokeObjectURL(this.mediaElement.src);\\n        this.mediaElement.src = '';\\n      }\\n    }\\n  }, {\\n    key: \\\"muteTracks\\\",\\n    value: function muteTracks(mute) {\\n      if ((this.getRecordType() === _recordMode.AUDIO_ONLY || this.getRecordType() === _recordMode.AUDIO_SCREEN || this.getRecordType() === _recordMode.AUDIO_VIDEO) && this.stream.getAudioTracks().length > 0) {\\n        this.stream.getAudioTracks()[0].enabled = !mute;\\n      }\\n\\n      if (this.getRecordType() !== _recordMode.AUDIO_ONLY && this.stream.getVideoTracks().length > 0) {\\n        this.stream.getVideoTracks()[0].enabled = !mute;\\n      }\\n    }\\n  }, {\\n    key: \\\"getRecordType\\\",\\n    value: function getRecordType() {\\n      return (0, _recordMode.getRecorderMode)(this.recordImage, this.recordAudio, this.recordVideo, this.recordAnimation, this.recordScreen);\\n    }\\n  }, {\\n    key: \\\"createSnapshot\\\",\\n    value: function createSnapshot() {\\n      var _this8 = this;\\n\\n      this.captureFrame().then(function (result) {\\n        _this8.player.recordedData = result.toDataURL('image/png');\\n        _this8.mediaElement.style.display = 'none';\\n\\n        _this8.player.recordCanvas.show();\\n\\n        _this8.stop();\\n      });\\n    }\\n  }, {\\n    key: \\\"retrySnapshot\\\",\\n    value: function retrySnapshot() {\\n      this._processing = false;\\n      this.player.recordCanvas.hide();\\n      this.player.el().firstChild.style.display = 'block';\\n    }\\n  }, {\\n    key: \\\"captureFrame\\\",\\n    value: function captureFrame() {\\n      var _this9 = this;\\n\\n      var detected = (0, _detectBrowser.detectBrowser)();\\n      var recordCanvas = this.player.recordCanvas.el().firstChild;\\n      recordCanvas.width = this.player.width();\\n      recordCanvas.height = this.player.height();\\n      return new Promise(function (resolve, reject) {\\n        if (detected.browser === 'chrome' && detected.version >= 60 && (typeof ImageCapture === \\\"undefined\\\" ? \\\"undefined\\\" : (0, _typeof2.default)(ImageCapture)) === (typeof Function === \\\"undefined\\\" ? \\\"undefined\\\" : (0, _typeof2.default)(Function))) {\\n          try {\\n            var track = _this9.stream.getVideoTracks()[0];\\n\\n            var imageCapture = new ImageCapture(track);\\n            imageCapture.grabFrame().then(function (imageBitmap) {\\n              _this9.drawCanvas(recordCanvas, imageBitmap);\\n\\n              resolve(recordCanvas);\\n            }).catch(function (error) {});\\n          } catch (err) {}\\n        }\\n\\n        _this9.drawCanvas(recordCanvas, _this9.mediaElement);\\n\\n        resolve(recordCanvas);\\n      });\\n    }\\n  }, {\\n    key: \\\"drawCanvas\\\",\\n    value: function drawCanvas(canvas, element) {\\n      canvas.getContext('2d').drawImage(element, 0, 0, canvas.width, canvas.height);\\n    }\\n  }, {\\n    key: \\\"startVideoPreview\\\",\\n    value: function startVideoPreview() {\\n      this.off(_event.default.TIMEUPDATE);\\n      this.off(_event.default.DURATIONCHANGE);\\n      this.off(_event.default.LOADEDMETADATA);\\n      this.off(_event.default.PLAY);\\n      this.mediaElement.muted = true;\\n      this.displayVolumeControl(false);\\n      this.removeRecording();\\n      this.load(this.stream);\\n      this.mediaElement.play();\\n    }\\n  }, {\\n    key: \\\"showAnimation\\\",\\n    value: function showAnimation() {\\n      var animationDisplay = this.player.animationDisplay.el().firstChild;\\n      animationDisplay.width = this.player.width();\\n      animationDisplay.height = this.player.height();\\n      this.player.recordCanvas.hide();\\n      (0, _browserShim.default)(this.player.recordedData, animationDisplay);\\n      this.player.animationDisplay.show();\\n    }\\n  }, {\\n    key: \\\"hideAnimation\\\",\\n    value: function hideAnimation() {\\n      this.player.recordCanvas.show();\\n      this.player.animationDisplay.hide();\\n    }\\n  }, {\\n    key: \\\"playbackTimeUpdate\\\",\\n    value: function playbackTimeUpdate() {\\n      this.setCurrentTime(this.player.currentTime(), this.streamDuration);\\n    }\\n  }, {\\n    key: \\\"enumerateDevices\\\",\\n    value: function enumerateDevices() {\\n      var _this10 = this;\\n\\n      if (!navigator.mediaDevices || !navigator.mediaDevices.enumerateDevices) {\\n        this.player.enumerateErrorCode = 'enumerateDevices() not supported.';\\n        this.player.trigger(_event.default.ENUMERATE_ERROR);\\n        return;\\n      }\\n\\n      navigator.mediaDevices.enumerateDevices(this).then(function (devices) {\\n        _this10.devices = [];\\n        devices.forEach(function (device) {\\n          _this10.devices.push(device);\\n        });\\n\\n        _this10.player.trigger(_event.default.ENUMERATE_READY);\\n      }).catch(function (err) {\\n        _this10.player.enumerateErrorCode = err;\\n\\n        _this10.player.trigger(_event.default.ENUMERATE_ERROR);\\n      });\\n    }\\n  }, {\\n    key: \\\"setVideoInput\\\",\\n    value: function setVideoInput(deviceId) {\\n      if (this.recordVideo === Object(this.recordVideo)) {\\n        this.recordVideo.deviceId = {\\n          exact: deviceId\\n        };\\n      } else if (this.recordVideo === true) {\\n        this.recordVideo = {\\n          deviceId: {\\n            exact: deviceId\\n          }\\n        };\\n      }\\n\\n      this.stopDevice();\\n      this.getDevice();\\n    }\\n  }, {\\n    key: \\\"setAudioInput\\\",\\n    value: function setAudioInput(deviceId) {\\n      if (this.recordAudio === Object(this.recordAudio)) {\\n        this.recordAudio.deviceId = {\\n          exact: deviceId\\n        };\\n      } else if (this.recordAudio === true) {\\n        this.recordAudio = {\\n          deviceId: {\\n            exact: deviceId\\n          }\\n        };\\n      }\\n\\n      switch (this.getRecordType()) {\\n        case _recordMode.AUDIO_ONLY:\\n          this.surfer.surfer.microphone.constraints = {\\n            video: false,\\n            audio: this.recordAudio\\n          };\\n          break;\\n      }\\n\\n      this.stopDevice();\\n      this.getDevice();\\n    }\\n  }, {\\n    key: \\\"setAudioOutput\\\",\\n    value: function setAudioOutput(deviceId) {\\n      var _this11 = this;\\n\\n      var errorMessage;\\n\\n      switch (this.getRecordType()) {\\n        case _recordMode.AUDIO_ONLY:\\n          this.surfer.surfer.setSinkId(deviceId).then(function (result) {\\n            _this11.player.trigger(_event.default.AUDIO_OUTPUT_READY);\\n\\n            return;\\n          }).catch(function (err) {\\n            errorMessage = err;\\n          });\\n          break;\\n\\n        default:\\n          var element = player.tech_.el_;\\n\\n          if (deviceId) {\\n            if (typeof element.sinkId !== 'undefined') {\\n              element.setSinkId(deviceId).then(function (result) {\\n                _this11.player.trigger(_event.default.AUDIO_OUTPUT_READY);\\n\\n                return;\\n              }).catch(function (err) {\\n                errorMessage = err;\\n              });\\n            } else {\\n              errorMessage = 'Browser does not support audio output device selection.';\\n            }\\n          } else {\\n            errorMessage = \\\"Invalid deviceId: \\\".concat(deviceId);\\n          }\\n\\n          break;\\n      }\\n\\n      this.player.trigger(_event.default.ERROR, errorMessage);\\n    }\\n  }, {\\n    key: \\\"displayVolumeControl\\\",\\n    value: function displayVolumeControl(display) {\\n      if (this.player.controlBar.volumePanel !== undefined) {\\n        if (display === true) {\\n          display = 'flex';\\n        } else {\\n          display = 'none';\\n        }\\n\\n        this.player.controlBar.volumePanel.el().style.display = display;\\n      }\\n    }\\n  }, {\\n    key: \\\"onEnterPiP\\\",\\n    value: function onEnterPiP(event) {\\n      this.player.trigger(_event.default.ENTER_PIP, event);\\n    }\\n  }, {\\n    key: \\\"onLeavePiP\\\",\\n    value: function onLeavePiP(event) {\\n      this.player.trigger(_event.default.LEAVE_PIP);\\n    }\\n  }]);\\n  return Record;\\n}(Plugin);\\n\\nexports.Record = Record;\\nRecord.VERSION = \\\"3.8.0\\\";\\n_video.default.Record = Record;\\n\\nif (_video.default.getPlugin('record') === undefined) {\\n  _video.default.registerPlugin('record', Record);\\n}\\n\\n//# sourceURL=webpack://VideojsRecord/./src/js/videojs.record.js?\");\n\n/***/ }),\n\n/***/ 0:\n/*!**********************************************************************!*\\\n  !*** multi ./src/js/videojs.record.js ./src/css/videojs.record.scss ***!\n  \\**********************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\neval(\"__webpack_require__(/*! /home/thijs/projects/videojs-record/src/js/videojs.record.js */\\\"./src/js/videojs.record.js\\\");\\nmodule.exports = __webpack_require__(/*! /home/thijs/projects/videojs-record/src/css/videojs.record.scss */\\\"./src/css/videojs.record.scss\\\");\\n\\n\\n//# sourceURL=webpack://VideojsRecord/multi_./src/js/videojs.record.js_./src/css/videojs.record.scss?\");\n\n/***/ }),\n\n/***/ \"recordrtc\":\n/*!****************************!*\\\n  !*** external \"RecordRTC\" ***!\n  \\****************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_recordrtc__;\\n\\n//# sourceURL=webpack://VideojsRecord/external_%22RecordRTC%22?\");\n\n/***/ }),\n\n/***/ \"video.js\":\n/*!**************************!*\\\n  !*** external \"videojs\" ***!\n  \\**************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\neval(\"module.exports = __WEBPACK_EXTERNAL_MODULE_video_js__;\\n\\n//# sourceURL=webpack://VideojsRecord/external_%22videojs%22?\");\n\n/***/ })\n\n/******/ });\n});","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about TS Segments.\n */\n'use strict';\n\nvar StreamTypes = require('./stream-types.js');\n\nvar parsePid = function(packet) {\n  var pid = packet[1] & 0x1f;\n  pid <<= 8;\n  pid |= packet[2];\n  return pid;\n};\n\nvar parsePayloadUnitStartIndicator = function(packet) {\n  return !!(packet[1] & 0x40);\n};\n\nvar parseAdaptionField = function(packet) {\n  var offset = 0;\n  // if an adaption field is present, its length is specified by the\n  // fifth byte of the TS packet header. The adaptation field is\n  // used to add stuffing to PES packets that don't fill a complete\n  // TS packet, and to specify some forms of timing and control data\n  // that we do not currently use.\n  if (((packet[3] & 0x30) >>> 4) > 0x01) {\n    offset += packet[4] + 1;\n  }\n  return offset;\n};\n\nvar parseType = function(packet, pmtPid) {\n  var pid = parsePid(packet);\n  if (pid === 0) {\n    return 'pat';\n  } else if (pid === pmtPid) {\n    return 'pmt';\n  } else if (pmtPid) {\n    return 'pes';\n  }\n  return null;\n};\n\nvar parsePat = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    offset += packet[offset] + 1;\n  }\n\n  return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n};\n\nvar parsePmt = function(packet) {\n  var programMapTable = {};\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  var payloadOffset = 4 + parseAdaptionField(packet);\n\n  if (pusi) {\n    payloadOffset += packet[payloadOffset] + 1;\n  }\n\n  // PMTs can be sent ahead of the time when they should actually\n  // take effect. We don't believe this should ever be the case\n  // for HLS but we'll ignore \"forward\" PMT declarations if we see\n  // them. Future PMT declarations have the current_next_indicator\n  // set to zero.\n  if (!(packet[payloadOffset + 5] & 0x01)) {\n    return;\n  }\n\n  var sectionLength, tableEnd, programInfoLength;\n  // the mapping table ends at the end of the current section\n  sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n  tableEnd = 3 + sectionLength - 4;\n\n  // to determine where the table is, we have to figure out how\n  // long the program info descriptors are\n  programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11];\n\n  // advance the offset to the first entry in the mapping table\n  var offset = 12 + programInfoLength;\n  while (offset < tableEnd) {\n    var i = payloadOffset + offset;\n    // add an entry that maps the elementary_pid to the stream_type\n    programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i];\n\n    // move to the next table entry\n    // skip past the elementary stream descriptors, if present\n    offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n  }\n  return programMapTable;\n};\n\nvar parsePesType = function(packet, programMapTable) {\n  var pid = parsePid(packet);\n  var type = programMapTable[pid];\n  switch (type) {\n    case StreamTypes.H264_STREAM_TYPE:\n      return 'video';\n    case StreamTypes.ADTS_STREAM_TYPE:\n      return 'audio';\n    case StreamTypes.METADATA_STREAM_TYPE:\n      return 'timed-metadata';\n    default:\n      return null;\n  }\n};\n\nvar parsePesTime = function(packet) {\n  var pusi = parsePayloadUnitStartIndicator(packet);\n  if (!pusi) {\n    return null;\n  }\n\n  var offset = 4 + parseAdaptionField(packet);\n\n  if (offset >= packet.byteLength) {\n    // From the H 222.0 MPEG-TS spec\n    // \"For transport stream packets carrying PES packets, stuffing is needed when there\n    //  is insufficient PES packet data to completely fill the transport stream packet\n    //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n    //  the sum of the lengths of the data elements in it, so that the payload bytes\n    //  remaining after the adaptation field exactly accommodates the available PES packet\n    //  data.\"\n    //\n    // If the offset is >= the length of the packet, then the packet contains no data\n    // and instead is just adaption field stuffing bytes\n    return null;\n  }\n\n  var pes = null;\n  var ptsDtsFlags;\n\n  // PES packets may be annotated with a PTS value, or a PTS value\n  // and a DTS value. Determine what combination of values is\n  // available to work with.\n  ptsDtsFlags = packet[offset + 7];\n\n  // PTS and DTS are normally stored as a 33-bit number.  Javascript\n  // performs all bitwise operations on 32-bit integers but javascript\n  // supports a much greater range (52-bits) of integer using standard\n  // mathematical operations.\n  // We construct a 31-bit value using bitwise operators over the 31\n  // most significant bits and then multiply by 4 (equal to a left-shift\n  // of 2) before we add the final 2 least significant bits of the\n  // timestamp (equal to an OR.)\n  if (ptsDtsFlags & 0xC0) {\n    pes = {};\n    // the PTS and DTS are not written out directly. For information\n    // on how they are encoded, see\n    // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n    pes.pts = (packet[offset + 9] & 0x0E) << 27 |\n      (packet[offset + 10] & 0xFF) << 20 |\n      (packet[offset + 11] & 0xFE) << 12 |\n      (packet[offset + 12] & 0xFF) <<  5 |\n      (packet[offset + 13] & 0xFE) >>>  3;\n    pes.pts *= 4; // Left shift by 2\n    pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n    pes.dts = pes.pts;\n    if (ptsDtsFlags & 0x40) {\n      pes.dts = (packet[offset + 14] & 0x0E) << 27 |\n        (packet[offset + 15] & 0xFF) << 20 |\n        (packet[offset + 16] & 0xFE) << 12 |\n        (packet[offset + 17] & 0xFF) << 5 |\n        (packet[offset + 18] & 0xFE) >>> 3;\n      pes.dts *= 4; // Left shift by 2\n      pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n    }\n  }\n  return pes;\n};\n\nvar parseNalUnitType = function(type) {\n  switch (type) {\n    case 0x05:\n      return 'slice_layer_without_partitioning_rbsp_idr';\n    case 0x06:\n      return 'sei_rbsp';\n    case 0x07:\n      return 'seq_parameter_set_rbsp';\n    case 0x08:\n      return 'pic_parameter_set_rbsp';\n    case 0x09:\n      return 'access_unit_delimiter_rbsp';\n    default:\n      return null;\n  }\n};\n\nvar videoPacketContainsKeyFrame = function(packet) {\n  var offset = 4 + parseAdaptionField(packet);\n  var frameBuffer = packet.subarray(offset);\n  var frameI = 0;\n  var frameSyncPoint = 0;\n  var foundKeyFrame = false;\n  var nalType;\n\n  // advance the sync point to a NAL start, if necessary\n  for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n    if (frameBuffer[frameSyncPoint + 2] === 1) {\n      // the sync point is properly aligned\n      frameI = frameSyncPoint + 5;\n      break;\n    }\n  }\n\n  while (frameI < frameBuffer.byteLength) {\n    // look at the current byte to determine if we've hit the end of\n    // a NAL unit boundary\n    switch (frameBuffer[frameI]) {\n    case 0:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0) {\n        frameI += 2;\n        break;\n      } else if (frameBuffer[frameI - 2] !== 0) {\n        frameI++;\n        break;\n      }\n\n      if (frameSyncPoint + 3 !== frameI - 2) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n\n      // drop trailing zeroes\n      do {\n        frameI++;\n      } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    case 1:\n      // skip past non-sync sequences\n      if (frameBuffer[frameI - 1] !== 0 ||\n          frameBuffer[frameI - 2] !== 0) {\n        frameI += 3;\n        break;\n      }\n\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n      frameSyncPoint = frameI - 2;\n      frameI += 3;\n      break;\n    default:\n      // the current byte isn't a one or zero, so it cannot be part\n      // of a sync sequence\n      frameI += 3;\n      break;\n    }\n  }\n  frameBuffer = frameBuffer.subarray(frameSyncPoint);\n  frameI -= frameSyncPoint;\n  frameSyncPoint = 0;\n  // parse the final nal\n  if (frameBuffer && frameBuffer.byteLength > 3) {\n    nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n    if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n      foundKeyFrame = true;\n    }\n  }\n\n  return foundKeyFrame;\n};\n\n\nmodule.exports = {\n  parseType: parseType,\n  parsePat: parsePat,\n  parsePmt: parsePmt,\n  parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n  parsePesType: parsePesType,\n  parsePesTime: parsePesTime,\n  videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A lightweight readable stream implemention that handles event dispatching.\n * Objects that inherit from streams should call init in their constructors.\n */\n'use strict';\n\nvar Stream = function() {\n  this.init = function() {\n    var listeners = {};\n    /**\n     * Add a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} the callback to be invoked when an event of\n     * the specified type occurs\n     */\n    this.on = function(type, listener) {\n      if (!listeners[type]) {\n        listeners[type] = [];\n      }\n      listeners[type] = listeners[type].concat(listener);\n    };\n    /**\n     * Remove a listener for a specified event type.\n     * @param type {string} the event name\n     * @param listener {function} a function previously registered for this\n     * type of event through `on`\n     */\n    this.off = function(type, listener) {\n      var index;\n      if (!listeners[type]) {\n        return false;\n      }\n      index = listeners[type].indexOf(listener);\n      listeners[type] = listeners[type].slice();\n      listeners[type].splice(index, 1);\n      return index > -1;\n    };\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     * @param type {string} the event name\n     */\n    this.trigger = function(type) {\n      var callbacks, i, length, args;\n      callbacks = listeners[type];\n      if (!callbacks) {\n        return;\n      }\n      // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n      if (arguments.length === 2) {\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        args = [];\n        i = arguments.length;\n        for (i = 1; i < arguments.length; ++i) {\n          args.push(arguments[i]);\n        }\n        length = callbacks.length;\n        for (i = 0; i < length; ++i) {\n          callbacks[i].apply(this, args);\n        }\n      }\n    };\n    /**\n     * Destroys the stream and cleans up.\n     */\n    this.dispose = function() {\n      listeners = {};\n    };\n  };\n};\n\n/**\n * Forwards all `data` events on this stream to the destination stream. The\n * destination stream should provide a method `push` to receive the data\n * events as they arrive.\n * @param destination {stream} the stream that will receive all `data` events\n * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n *                            when the current stream emits a 'done' event\n * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n */\nStream.prototype.pipe = function(destination) {\n  this.on('data', function(data) {\n    destination.push(data);\n  });\n\n  this.on('done', function(flushSource) {\n    destination.flush(flushSource);\n  });\n\n  return destination;\n};\n\n// Default stream functions that are expected to be overridden to perform\n// actual work. These are provided by the prototype as a sort of no-op\n// implementation so that we don't have to check for their existence in the\n// `pipe` function above.\nStream.prototype.push = function(data) {\n  this.trigger('data', data);\n};\n\nStream.prototype.flush = function(flushSource) {\n  this.trigger('done', flushSource);\n};\n\nmodule.exports = Stream;\n","module.exports = function isPrimitive(value) {\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// -----------------\n// Link To Transport\n// -----------------\n\nvar Stream = require('../utils/stream');\nvar cea708Parser = require('../tools/caption-packet-parser');\n\nvar CaptionStream = function() {\n\n  CaptionStream.prototype.init.call(this);\n\n  this.captionPackets_ = [];\n\n  this.ccStreams_ = [\n    new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n  ];\n\n  this.reset();\n\n  // forward data and done events from CCs to this CaptionStream\n  this.ccStreams_.forEach(function(cc) {\n    cc.on('data', this.trigger.bind(this, 'data'));\n    cc.on('done', this.trigger.bind(this, 'done'));\n  }, this);\n\n};\n\nCaptionStream.prototype = new Stream();\nCaptionStream.prototype.push = function(event) {\n  var sei, userData, newCaptionPackets;\n\n  // only examine SEI NALs\n  if (event.nalUnitType !== 'sei_rbsp') {\n    return;\n  }\n\n  // parse the sei\n  sei = cea708Parser.parseSei(event.escapedRBSP);\n\n  // ignore everything but user_data_registered_itu_t_t35\n  if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n    return;\n  }\n\n  // parse out the user data payload\n  userData = cea708Parser.parseUserData(sei);\n\n  // ignore unrecognized userData\n  if (!userData) {\n    return;\n  }\n\n  // Sometimes, the same segment # will be downloaded twice. To stop the\n  // caption data from being processed twice, we track the latest dts we've\n  // received and ignore everything with a dts before that. However, since\n  // data for a specific dts can be split across packets on either side of\n  // a segment boundary, we need to make sure we *don't* ignore the packets\n  // from the *next* segment that have dts === this.latestDts_. By constantly\n  // tracking the number of packets received with dts === this.latestDts_, we\n  // know how many should be ignored once we start receiving duplicates.\n  if (event.dts < this.latestDts_) {\n    // We've started getting older data, so set the flag.\n    this.ignoreNextEqualDts_ = true;\n    return;\n  } else if ((event.dts === this.latestDts_) && (this.ignoreNextEqualDts_)) {\n    this.numSameDts_--;\n    if (!this.numSameDts_) {\n      // We've received the last duplicate packet, time to start processing again\n      this.ignoreNextEqualDts_ = false;\n    }\n    return;\n  }\n\n  // parse out CC data packets and save them for later\n  newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n  this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n  if (this.latestDts_ !== event.dts) {\n    this.numSameDts_ = 0;\n  }\n  this.numSameDts_++;\n  this.latestDts_ = event.dts;\n};\n\nCaptionStream.prototype.flush = function() {\n  // make sure we actually parsed captions before proceeding\n  if (!this.captionPackets_.length) {\n    this.ccStreams_.forEach(function(cc) {\n      cc.flush();\n    }, this);\n    return;\n  }\n\n  // In Chrome, the Array#sort function is not stable so add a\n  // presortIndex that we can use to ensure we get a stable-sort\n  this.captionPackets_.forEach(function(elem, idx) {\n    elem.presortIndex = idx;\n  });\n\n  // sort caption byte-pairs based on their PTS values\n  this.captionPackets_.sort(function(a, b) {\n    if (a.pts === b.pts) {\n      return a.presortIndex - b.presortIndex;\n    }\n    return a.pts - b.pts;\n  });\n\n  this.captionPackets_.forEach(function(packet) {\n    if (packet.type < 2) {\n      // Dispatch packet to the right Cea608Stream\n      this.dispatchCea608Packet(packet);\n    }\n    // this is where an 'else' would go for a dispatching packets\n    // to a theoretical Cea708Stream that handles SERVICEn data\n  }, this);\n\n  this.captionPackets_.length = 0;\n  this.ccStreams_.forEach(function(cc) {\n    cc.flush();\n  }, this);\n  return;\n};\n\nCaptionStream.prototype.reset = function() {\n  this.latestDts_ = null;\n  this.ignoreNextEqualDts_ = false;\n  this.numSameDts_ = 0;\n  this.activeCea608Channel_ = [null, null];\n  this.ccStreams_.forEach(function(ccStream) {\n    ccStream.reset();\n  });\n};\n\n// From the CEA-608 spec:\n/*\n * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n * to switch to captioning or Text.\n*/\n// With that in mind, we ignore any data between an XDS control code and a\n// subsequent closed-captioning control code.\nCaptionStream.prototype.dispatchCea608Packet = function(packet) {\n  // NOTE: packet.type is the CEA608 field\n  if (this.setsTextOrXDSActive(packet)) {\n    this.activeCea608Channel_[packet.type] = null;\n  } else if (this.setsChannel1Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 0;\n  } else if (this.setsChannel2Active(packet)) {\n    this.activeCea608Channel_[packet.type] = 1;\n  }\n  if (this.activeCea608Channel_[packet.type] === null) {\n    // If we haven't received anything to set the active channel, or the\n    // packets are Text/XDS data, discard the data; we don't want jumbled\n    // captions\n    return;\n  }\n  this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n};\n\nCaptionStream.prototype.setsChannel1Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1000);\n};\nCaptionStream.prototype.setsChannel2Active = function(packet) {\n  return ((packet.ccData & 0x7800) === 0x1800);\n};\nCaptionStream.prototype.setsTextOrXDSActive = function(packet) {\n  return ((packet.ccData & 0x7100) === 0x0100) ||\n    ((packet.ccData & 0x78fe) === 0x102a) ||\n    ((packet.ccData & 0x78fe) === 0x182a);\n};\n\n// ----------------------\n// Session to Application\n// ----------------------\n\n// This hash maps non-ASCII, special, and extended character codes to their\n// proper Unicode equivalent. The first keys that are only a single byte\n// are the non-standard ASCII characters, which simply map the CEA608 byte\n// to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n// character codes, but have their MSB bitmasked with 0x03 so that a lookup\n// can be performed regardless of the field and data channel on which the\n// character code was received.\nvar CHARACTER_TRANSLATION = {\n  0x2a: 0xe1,     // á\n  0x5c: 0xe9,     // é\n  0x5e: 0xed,     // í\n  0x5f: 0xf3,     // ó\n  0x60: 0xfa,     // ú\n  0x7b: 0xe7,     // ç\n  0x7c: 0xf7,     // ÷\n  0x7d: 0xd1,     // Ñ\n  0x7e: 0xf1,     // ñ\n  0x7f: 0x2588,   // █\n  0x0130: 0xae,   // ®\n  0x0131: 0xb0,   // °\n  0x0132: 0xbd,   // ½\n  0x0133: 0xbf,   // ¿\n  0x0134: 0x2122, // ™\n  0x0135: 0xa2,   // ¢\n  0x0136: 0xa3,   // £\n  0x0137: 0x266a, // ♪\n  0x0138: 0xe0,   // à\n  0x0139: 0xa0,   //\n  0x013a: 0xe8,   // è\n  0x013b: 0xe2,   // â\n  0x013c: 0xea,   // ê\n  0x013d: 0xee,   // î\n  0x013e: 0xf4,   // ô\n  0x013f: 0xfb,   // û\n  0x0220: 0xc1,   // Á\n  0x0221: 0xc9,   // É\n  0x0222: 0xd3,   // Ó\n  0x0223: 0xda,   // Ú\n  0x0224: 0xdc,   // Ü\n  0x0225: 0xfc,   // ü\n  0x0226: 0x2018, // ‘\n  0x0227: 0xa1,   // ¡\n  0x0228: 0x2a,   // *\n  0x0229: 0x27,   // '\n  0x022a: 0x2014, // —\n  0x022b: 0xa9,   // ©\n  0x022c: 0x2120, // ℠\n  0x022d: 0x2022, // •\n  0x022e: 0x201c, // “\n  0x022f: 0x201d, // ”\n  0x0230: 0xc0,   // À\n  0x0231: 0xc2,   // Â\n  0x0232: 0xc7,   // Ç\n  0x0233: 0xc8,   // È\n  0x0234: 0xca,   // Ê\n  0x0235: 0xcb,   // Ë\n  0x0236: 0xeb,   // ë\n  0x0237: 0xce,   // Î\n  0x0238: 0xcf,   // Ï\n  0x0239: 0xef,   // ï\n  0x023a: 0xd4,   // Ô\n  0x023b: 0xd9,   // Ù\n  0x023c: 0xf9,   // ù\n  0x023d: 0xdb,   // Û\n  0x023e: 0xab,   // «\n  0x023f: 0xbb,   // »\n  0x0320: 0xc3,   // Ã\n  0x0321: 0xe3,   // ã\n  0x0322: 0xcd,   // Í\n  0x0323: 0xcc,   // Ì\n  0x0324: 0xec,   // ì\n  0x0325: 0xd2,   // Ò\n  0x0326: 0xf2,   // ò\n  0x0327: 0xd5,   // Õ\n  0x0328: 0xf5,   // õ\n  0x0329: 0x7b,   // {\n  0x032a: 0x7d,   // }\n  0x032b: 0x5c,   // \\\n  0x032c: 0x5e,   // ^\n  0x032d: 0x5f,   // _\n  0x032e: 0x7c,   // |\n  0x032f: 0x7e,   // ~\n  0x0330: 0xc4,   // Ä\n  0x0331: 0xe4,   // ä\n  0x0332: 0xd6,   // Ö\n  0x0333: 0xf6,   // ö\n  0x0334: 0xdf,   // ß\n  0x0335: 0xa5,   // ¥\n  0x0336: 0xa4,   // ¤\n  0x0337: 0x2502, // │\n  0x0338: 0xc5,   // Å\n  0x0339: 0xe5,   // å\n  0x033a: 0xd8,   // Ø\n  0x033b: 0xf8,   // ø\n  0x033c: 0x250c, // ┌\n  0x033d: 0x2510, // ┐\n  0x033e: 0x2514, // └\n  0x033f: 0x2518  // ┘\n};\n\nvar getCharFromCode = function(code) {\n  if (code === null) {\n    return '';\n  }\n  code = CHARACTER_TRANSLATION[code] || code;\n  return String.fromCharCode(code);\n};\n\n// the index of the last row in a CEA-608 display buffer\nvar BOTTOM_ROW = 14;\n\n// This array is used for mapping PACs -> row #, since there's no way of\n// getting it through bit logic.\nvar ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620,\n            0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420];\n\n// CEA-608 captions are rendered onto a 34x15 matrix of character\n// cells. The \"bottom\" row is the last element in the outer array.\nvar createDisplayBuffer = function() {\n  var result = [], i = BOTTOM_ROW + 1;\n  while (i--) {\n    result.push('');\n  }\n  return result;\n};\n\nvar Cea608Stream = function(field, dataChannel) {\n  Cea608Stream.prototype.init.call(this);\n\n  this.field_ = field || 0;\n  this.dataChannel_ = dataChannel || 0;\n\n  this.name_ = 'CC' + (((this.field_ << 1) | this.dataChannel_) + 1);\n\n  this.setConstants();\n  this.reset();\n\n  this.push = function(packet) {\n    var data, swap, char0, char1, text;\n    // remove the parity bits\n    data = packet.ccData & 0x7f7f;\n\n    // ignore duplicate control codes; the spec demands they're sent twice\n    if (data === this.lastControlCode_) {\n      this.lastControlCode_ = null;\n      return;\n    }\n\n    // Store control codes\n    if ((data & 0xf000) === 0x1000) {\n      this.lastControlCode_ = data;\n    } else if (data !== this.PADDING_) {\n      this.lastControlCode_ = null;\n    }\n\n    char0 = data >>> 8;\n    char1 = data & 0xff;\n\n    if (data === this.PADDING_) {\n      return;\n\n    } else if (data === this.RESUME_CAPTION_LOADING_) {\n      this.mode_ = 'popOn';\n\n    } else if (data === this.END_OF_CAPTION_) {\n      // If an EOC is received while in paint-on mode, the displayed caption\n      // text should be swapped to non-displayed memory as if it was a pop-on\n      // caption. Because of that, we should explicitly switch back to pop-on\n      // mode\n      this.mode_ = 'popOn';\n      this.clearFormatting(packet.pts);\n      // if a caption was being displayed, it's gone now\n      this.flushDisplayed(packet.pts);\n\n      // flip memory\n      swap = this.displayed_;\n      this.displayed_ = this.nonDisplayed_;\n      this.nonDisplayed_ = swap;\n\n      // start measuring the time to display the caption\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.ROLL_UP_2_ROWS_) {\n      this.rollUpRows_ = 2;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_3_ROWS_) {\n      this.rollUpRows_ = 3;\n      this.setRollUp(packet.pts);\n    } else if (data === this.ROLL_UP_4_ROWS_) {\n      this.rollUpRows_ = 4;\n      this.setRollUp(packet.pts);\n    } else if (data === this.CARRIAGE_RETURN_) {\n      this.clearFormatting(packet.pts);\n      this.flushDisplayed(packet.pts);\n      this.shiftRowsUp_();\n      this.startPts_ = packet.pts;\n\n    } else if (data === this.BACKSPACE_) {\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n    } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n      this.flushDisplayed(packet.pts);\n      this.displayed_ = createDisplayBuffer();\n    } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n      this.nonDisplayed_ = createDisplayBuffer();\n\n    } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n      if (this.mode_ !== 'paintOn') {\n        // NOTE: This should be removed when proper caption positioning is\n        // implemented\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      }\n      this.mode_ = 'paintOn';\n      this.startPts_ = packet.pts;\n\n    // Append special characters to caption text\n    } else if (this.isSpecialCharacter(char0, char1)) {\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Append extended characters to caption text\n    } else if (this.isExtCharacter(char0, char1)) {\n      // Extended characters always follow their \"non-extended\" equivalents.\n      // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n      // decoders are supposed to drop the \"è\", while compliant decoders\n      // backspace the \"e\" and insert \"è\".\n\n      // Delete the previous character\n      if (this.mode_ === 'popOn') {\n        this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n      } else {\n        this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n      }\n\n      // Bitmask char0 so that we can apply character transformations\n      // regardless of field and data channel.\n      // Then byte-shift to the left and OR with char1 so we can pass the\n      // entire character code to `getCharFromCode`.\n      char0 = (char0 & 0x03) << 8;\n      text = getCharFromCode(char0 | char1);\n      this[this.mode_](packet.pts, text);\n      this.column_++;\n\n    // Process mid-row codes\n    } else if (this.isMidRowCode(char0, char1)) {\n      // Attributes are not additive, so clear all formatting\n      this.clearFormatting(packet.pts);\n\n      // According to the standard, mid-row codes\n      // should be replaced with spaces, so add one now\n      this[this.mode_](packet.pts, ' ');\n      this.column_++;\n\n      if ((char1 & 0xe) === 0xe) {\n        this.addFormatting(packet.pts, ['i']);\n      }\n\n      if ((char1 & 0x1) === 0x1) {\n        this.addFormatting(packet.pts, ['u']);\n      }\n\n    // Detect offset control codes and adjust cursor\n    } else if (this.isOffsetControlCode(char0, char1)) {\n      // Cursor position is set by indent PAC (see below) in 4-column\n      // increments, with an additional offset code of 1-3 to reach any\n      // of the 32 columns specified by CEA-608. So all we need to do\n      // here is increment the column cursor by the given offset.\n      this.column_ += (char1 & 0x03);\n\n    // Detect PACs (Preamble Address Codes)\n    } else if (this.isPAC(char0, char1)) {\n\n      // There's no logic for PAC -> row mapping, so we have to just\n      // find the row code in an array and use its index :(\n      var row = ROWS.indexOf(data & 0x1f20);\n\n      // Configure the caption window if we're in roll-up mode\n      if (this.mode_ === 'rollUp') {\n        // This implies that the base row is incorrectly set.\n        // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n        // of roll-up rows set.\n        if (row - this.rollUpRows_ + 1 < 0) {\n          row = this.rollUpRows_ - 1;\n        }\n\n        this.setRollUp(packet.pts, row);\n      }\n\n      if (row !== this.row_) {\n        // formatting is only persistent for current row\n        this.clearFormatting(packet.pts);\n        this.row_ = row;\n      }\n      // All PACs can apply underline, so detect and apply\n      // (All odd-numbered second bytes set underline)\n      if ((char1 & 0x1) && (this.formatting_.indexOf('u') === -1)) {\n          this.addFormatting(packet.pts, ['u']);\n      }\n\n      if ((data & 0x10) === 0x10) {\n        // We've got an indent level code. Each successive even number\n        // increments the column cursor by 4, so we can get the desired\n        // column position by bit-shifting to the right (to get n/2)\n        // and multiplying by 4.\n        this.column_ = ((data & 0xe) >> 1) * 4;\n      }\n\n      if (this.isColorPAC(char1)) {\n        // it's a color code, though we only support white, which\n        // can be either normal or italicized. white italics can be\n        // either 0x4e or 0x6e depending on the row, so we just\n        // bitwise-and with 0xe to see if italics should be turned on\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n      }\n\n    // We have a normal character in char0, and possibly one in char1\n    } else if (this.isNormalChar(char0)) {\n      if (char1 === 0x00) {\n        char1 = null;\n      }\n      text = getCharFromCode(char0);\n      text += getCharFromCode(char1);\n      this[this.mode_](packet.pts, text);\n      this.column_ += text.length;\n\n    } // finish data processing\n\n  };\n};\nCea608Stream.prototype = new Stream();\n// Trigger a cue point that captures the current state of the\n// display buffer\nCea608Stream.prototype.flushDisplayed = function(pts) {\n  var content = this.displayed_\n    // remove spaces from the start and end of the string\n    .map(function(row) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        // eslint-disable-next-line no-console\n        console.error('Skipping malformed caption.');\n        return '';\n      }\n    })\n    // combine all text rows to display in one cue\n    .join('\\n')\n    // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n  if (content.length) {\n    this.trigger('data', {\n      startPts: this.startPts_,\n      endPts: pts,\n      text: content,\n      stream: this.name_\n    });\n  }\n};\n\n/**\n * Zero out the data, used for startup and on seek\n */\nCea608Stream.prototype.reset = function() {\n  this.mode_ = 'popOn';\n  // When in roll-up mode, the index of the last row that will\n  // actually display captions. If a caption is shifted to a row\n  // with a lower index than this, it is cleared from the display\n  // buffer\n  this.topRow_ = 0;\n  this.startPts_ = 0;\n  this.displayed_ = createDisplayBuffer();\n  this.nonDisplayed_ = createDisplayBuffer();\n  this.lastControlCode_ = null;\n\n  // Track row and column for proper line-breaking and spacing\n  this.column_ = 0;\n  this.row_ = BOTTOM_ROW;\n  this.rollUpRows_ = 2;\n\n  // This variable holds currently-applied formatting\n  this.formatting_ = [];\n};\n\n/**\n * Sets up control code and related constants for this instance\n */\nCea608Stream.prototype.setConstants = function() {\n  // The following attributes have these uses:\n  // ext_ :    char0 for mid-row codes, and the base for extended\n  //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n  //           extended codes)\n  // control_: char0 for control codes, except byte-shifted to the\n  //           left so that we can do this.control_ | CONTROL_CODE\n  // offset_:  char0 for tab offset codes\n  //\n  // It's also worth noting that control codes, and _only_ control codes,\n  // differ between field 1 and field2. Field 2 control codes are always\n  // their field 1 value plus 1. That's why there's the \"| field\" on the\n  // control value.\n  if (this.dataChannel_ === 0) {\n    this.BASE_     = 0x10;\n    this.EXT_      = 0x11;\n    this.CONTROL_  = (0x14 | this.field_) << 8;\n    this.OFFSET_   = 0x17;\n  } else if (this.dataChannel_ === 1) {\n    this.BASE_     = 0x18;\n    this.EXT_      = 0x19;\n    this.CONTROL_  = (0x1c | this.field_) << 8;\n    this.OFFSET_   = 0x1f;\n  }\n\n  // Constants for the LSByte command codes recognized by Cea608Stream. This\n  // list is not exhaustive. For a more comprehensive listing and semantics see\n  // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n  // Padding\n  this.PADDING_                    = 0x0000;\n  // Pop-on Mode\n  this.RESUME_CAPTION_LOADING_     = this.CONTROL_ | 0x20;\n  this.END_OF_CAPTION_             = this.CONTROL_ | 0x2f;\n  // Roll-up Mode\n  this.ROLL_UP_2_ROWS_             = this.CONTROL_ | 0x25;\n  this.ROLL_UP_3_ROWS_             = this.CONTROL_ | 0x26;\n  this.ROLL_UP_4_ROWS_             = this.CONTROL_ | 0x27;\n  this.CARRIAGE_RETURN_            = this.CONTROL_ | 0x2d;\n  // paint-on mode\n  this.RESUME_DIRECT_CAPTIONING_   = this.CONTROL_ | 0x29;\n  // Erasure\n  this.BACKSPACE_                  = this.CONTROL_ | 0x21;\n  this.ERASE_DISPLAYED_MEMORY_     = this.CONTROL_ | 0x2c;\n  this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n};\n\n/**\n * Detects if the 2-byte packet data is a special character\n *\n * Special characters have a second byte in the range 0x30 to 0x3f,\n * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an special character\n */\nCea608Stream.prototype.isSpecialCharacter = function(char0, char1) {\n  return (char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f);\n};\n\n/**\n * Detects if the 2-byte packet data is an extended character\n *\n * Extended characters have a second byte in the range 0x20 to 0x3f,\n * with the first byte being 0x12 or 0x13 (for data channel 1) or\n * 0x1a or 0x1b (for data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an extended character\n */\nCea608Stream.prototype.isExtCharacter = function(char0, char1) {\n  return ((char0 === (this.EXT_ + 1) || char0 === (this.EXT_ + 2)) &&\n    (char1 >= 0x20 && char1 <= 0x3f));\n};\n\n/**\n * Detects if the 2-byte packet is a mid-row code\n *\n * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n * channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a mid-row code\n */\nCea608Stream.prototype.isMidRowCode = function(char0, char1) {\n  return (char0 === this.EXT_ && (char1 >= 0x20 && char1 <= 0x2f));\n};\n\n/**\n * Detects if the 2-byte packet is an offset control code\n *\n * Offset control codes have a second byte in the range 0x21 to 0x23,\n * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n * data channel 2).\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are an offset control code\n */\nCea608Stream.prototype.isOffsetControlCode = function(char0, char1) {\n  return (char0 === this.OFFSET_ && (char1 >= 0x21 && char1 <= 0x23));\n};\n\n/**\n * Detects if the 2-byte packet is a Preamble Address Code\n *\n * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n * range 0x40 to 0x7f.\n *\n * @param  {Integer} char0 The first byte\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the 2 bytes are a PAC\n */\nCea608Stream.prototype.isPAC = function(char0, char1) {\n  return (char0 >= this.BASE_ && char0 < (this.BASE_ + 8) &&\n    (char1 >= 0x40 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a packet's second byte is in the range of a PAC color code\n *\n * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n * 0x60 to 0x6f.\n *\n * @param  {Integer} char1 The second byte\n * @return {Boolean}       Whether the byte is a color PAC\n */\nCea608Stream.prototype.isColorPAC = function(char1) {\n  return ((char1 >= 0x40 && char1 <= 0x4f) || (char1 >= 0x60 && char1 <= 0x7f));\n};\n\n/**\n * Detects if a single byte is in the range of a normal character\n *\n * Normal text bytes are in the range 0x20 to 0x7f.\n *\n * @param  {Integer} char  The byte\n * @return {Boolean}       Whether the byte is a normal character\n */\nCea608Stream.prototype.isNormalChar = function(char) {\n  return (char >= 0x20 && char <= 0x7f);\n};\n\n/**\n * Configures roll-up\n *\n * @param  {Integer} pts         Current PTS\n * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n *                               a new position\n */\nCea608Stream.prototype.setRollUp = function(pts, newBaseRow) {\n  // Reset the base row to the bottom row when switching modes\n  if (this.mode_ !== 'rollUp') {\n    this.row_ = BOTTOM_ROW;\n    this.mode_ = 'rollUp';\n    // Spec says to wipe memories when switching to roll-up\n    this.flushDisplayed(pts);\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.displayed_ = createDisplayBuffer();\n  }\n\n  if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n    // move currently displayed captions (up or down) to the new base row\n    for (var i = 0; i < this.rollUpRows_; i++) {\n      this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n      this.displayed_[this.row_ - i] = '';\n    }\n  }\n\n  if (newBaseRow === undefined) {\n    newBaseRow = this.row_;\n  }\n\n  this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n};\n\n// Adds the opening HTML tag for the passed character to the caption text,\n// and keeps track of it for later closing\nCea608Stream.prototype.addFormatting = function(pts, format) {\n  this.formatting_ = this.formatting_.concat(format);\n  var text = format.reduce(function(text, format) {\n    return text + '<' + format + '>';\n  }, '');\n  this[this.mode_](pts, text);\n};\n\n// Adds HTML closing tags for current formatting to caption text and\n// clears remembered formatting\nCea608Stream.prototype.clearFormatting = function(pts) {\n  if (!this.formatting_.length) {\n    return;\n  }\n  var text = this.formatting_.reverse().reduce(function(text, format) {\n    return text + '</' + format + '>';\n  }, '');\n  this.formatting_ = [];\n  this[this.mode_](pts, text);\n};\n\n// Mode Implementations\nCea608Stream.prototype.popOn = function(pts, text) {\n  var baseRow = this.nonDisplayed_[this.row_];\n\n  // buffer characters\n  baseRow += text;\n  this.nonDisplayed_[this.row_] = baseRow;\n};\n\nCea608Stream.prototype.rollUp = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n\n};\n\nCea608Stream.prototype.shiftRowsUp_ = function() {\n  var i;\n  // clear out inactive rows\n  for (i = 0; i < this.topRow_; i++) {\n    this.displayed_[i] = '';\n  }\n  for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n    this.displayed_[i] = '';\n  }\n  // shift displayed rows up\n  for (i = this.topRow_; i < this.row_; i++) {\n    this.displayed_[i] = this.displayed_[i + 1];\n  }\n  // clear out the bottom row\n  this.displayed_[this.row_] = '';\n};\n\nCea608Stream.prototype.paintOn = function(pts, text) {\n  var baseRow = this.displayed_[this.row_];\n\n  baseRow += text;\n  this.displayed_[this.row_] = baseRow;\n};\n\n// exports\nmodule.exports = {\n  CaptionStream: CaptionStream,\n  Cea608Stream: Cea608Stream\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\n\nvar AdtsStream;\n\nvar\n  ADTS_SAMPLING_FREQUENCIES = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n/*\n * Accepts a ElementaryStream and emits data events with parsed\n * AAC Audio Frames of the individual packets. Input audio in ADTS\n * format is unpacked and re-emitted as AAC frames.\n *\n * @see http://wiki.multimedia.cx/index.php?title=ADTS\n * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n */\nAdtsStream = function() {\n  var buffer;\n\n  AdtsStream.prototype.init.call(this);\n\n  this.push = function(packet) {\n    var\n      i = 0,\n      frameNum = 0,\n      frameLength,\n      protectionSkipBytes,\n      frameEnd,\n      oldBuffer,\n      sampleCount,\n      adtsFrameDuration;\n\n    if (packet.type !== 'audio') {\n      // ignore non-audio data\n      return;\n    }\n\n    // Prepend any data in the buffer to the input data so that we can parse\n    // aac frames the cross a PES packet boundary\n    if (buffer) {\n      oldBuffer = buffer;\n      buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n      buffer.set(oldBuffer);\n      buffer.set(packet.data, oldBuffer.byteLength);\n    } else {\n      buffer = packet.data;\n    }\n\n    // unpack any ADTS frames which have been fully received\n    // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n    while (i + 5 < buffer.length) {\n\n      // Loook for the start of an ADTS header..\n      if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      // The protection skip bit tells us if we have 2 bytes of CRC data at the\n      // end of the ADTS header\n      protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2;\n\n      // Frame length is a 13 bit integer starting 16 bits from the\n      // end of the sync sequence\n      frameLength = ((buffer[i + 3] & 0x03) << 11) |\n        (buffer[i + 4] << 3) |\n        ((buffer[i + 5] & 0xe0) >> 5);\n\n      sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n      adtsFrameDuration = (sampleCount * 90000) /\n        ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n\n      frameEnd = i + frameLength;\n\n      // If we don't have enough data to actually finish this ADTS frame, return\n      // and wait for more data\n      if (buffer.byteLength < frameEnd) {\n        return;\n      }\n\n      // Otherwise, deliver the complete AAC frame\n      this.trigger('data', {\n        pts: packet.pts + (frameNum * adtsFrameDuration),\n        dts: packet.dts + (frameNum * adtsFrameDuration),\n        sampleCount: sampleCount,\n        audioobjecttype: ((buffer[i + 2] >>> 6) & 0x03) + 1,\n        channelcount: ((buffer[i + 2] & 1) << 2) |\n          ((buffer[i + 3] & 0xc0) >>> 6),\n        samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n        samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n        // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n        samplesize: 16,\n        data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n      });\n\n      // If the buffer is empty, clear it and return\n      if (buffer.byteLength === frameEnd) {\n        buffer = undefined;\n        return;\n      }\n\n      frameNum++;\n\n      // Remove the finished frame from the buffer and start the process again\n      buffer = buffer.subarray(frameEnd);\n    }\n  };\n  this.flush = function() {\n    this.trigger('done');\n  };\n};\n\nAdtsStream.prototype = new Stream();\n\nmodule.exports = AdtsStream;\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","'use strict';\n\nvar bind = require('function-bind');\nvar ES = require('es-abstract/es5');\nvar replace = bind.call(Function.call, String.prototype.replace);\n\n/* eslint-disable no-control-regex */\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\n/* eslint-enable no-control-regex */\n\nmodule.exports = function trim() {\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\n};\n","module.exports = function sign(number) {\n\treturn number >= 0 ? 1 : -1;\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Accepts program elementary stream (PES) data events and parses out\n * ID3 metadata from them, if present.\n * @see http://id3.org/id3v2.3.0\n */\n'use strict';\nvar\n  Stream = require('../utils/stream'),\n  StreamTypes = require('./stream-types'),\n  // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n  percentEncode = function(bytes, start, end) {\n    var i, result = '';\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n    return result;\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function(bytes, start, end) {\n    return decodeURIComponent(percentEncode(bytes, start, end));\n  },\n  // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591 = function(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  },\n  parseSyncSafeInteger = function(data) {\n    return (data[0] << 21) |\n            (data[1] << 14) |\n            (data[2] << 7) |\n            (data[3]);\n  },\n  tagParsers = {\n    TXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          // do not include the null terminator in the tag value\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n      tag.data = tag.value;\n    },\n    WXXX: function(tag) {\n      var i;\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591(tag.data, 0, i);\n          break;\n        }\n      }\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n  MetadataStream;\n\nMetadataStream = function(options) {\n  var\n    settings = {\n      debug: !!(options && options.debug),\n\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n    // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n    // tag data that is not complete enough to be parsed\n    buffer = [],\n    // the total number of bytes currently in the buffer\n    bufferSize = 0,\n    i;\n\n  MetadataStream.prototype.init.call(this);\n\n  // calculate the text track in-band metadata track dispatch type\n  // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n  this.dispatchType = StreamTypes.METADATA_STREAM_TYPE.toString(16);\n  if (settings.descriptor) {\n    for (i = 0; i < settings.descriptor.length; i++) {\n      this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n    }\n  }\n\n  this.push = function(chunk) {\n    var tag, frameStart, frameSize, frame, i, frameHeader;\n    if (chunk.type !== 'timed-metadata') {\n      return;\n    }\n\n    // if data_alignment_indicator is set in the PES header,\n    // we must have the start of a new ID3 tag. Assume anything\n    // remaining in the buffer was malformed and throw it out\n    if (chunk.dataAlignmentIndicator) {\n      bufferSize = 0;\n      buffer.length = 0;\n    }\n\n    // ignore events that don't look like ID3 data\n    if (buffer.length === 0 &&\n        (chunk.data.length < 10 ||\n          chunk.data[0] !== 'I'.charCodeAt(0) ||\n          chunk.data[1] !== 'D'.charCodeAt(0) ||\n          chunk.data[2] !== '3'.charCodeAt(0))) {\n      if (settings.debug) {\n        // eslint-disable-next-line no-console\n        console.log('Skipping unrecognized metadata packet');\n      }\n      return;\n    }\n\n    // add this chunk to the data we've collected so far\n\n    buffer.push(chunk);\n    bufferSize += chunk.data.byteLength;\n\n    // grab the size of the entire frame from the ID3 header\n    if (buffer.length === 1) {\n      // the frame size is transmitted as a 28-bit integer in the\n      // last four bytes of the ID3 header.\n      // The most significant bit of each byte is dropped and the\n      // results concatenated to recover the actual value.\n      tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10));\n\n      // ID3 reports the tag size excluding the header but it's more\n      // convenient for our comparisons to include it\n      tagSize += 10;\n    }\n\n    // if the entire frame has not arrived, wait for more data\n    if (bufferSize < tagSize) {\n      return;\n    }\n\n    // collect the entire frame so it can be parsed\n    tag = {\n      data: new Uint8Array(tagSize),\n      frames: [],\n      pts: buffer[0].pts,\n      dts: buffer[0].dts\n    };\n    for (i = 0; i < tagSize;) {\n      tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n      i += buffer[0].data.byteLength;\n      bufferSize -= buffer[0].data.byteLength;\n      buffer.shift();\n    }\n\n    // find the start of the first frame and the end of the tag\n    frameStart = 10;\n    if (tag.data[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n      frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14));\n\n      // clip any padding off the end\n      tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n    }\n\n    // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n      if (frameSize < 1) {\n         // eslint-disable-next-line no-console\n        return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n      }\n      frameHeader = String.fromCharCode(tag.data[frameStart],\n                                        tag.data[frameStart + 1],\n                                        tag.data[frameStart + 2],\n                                        tag.data[frameStart + 3]);\n\n\n      frame = {\n        id: frameHeader,\n        data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n      };\n      frame.key = frame.id;\n      if (tagParsers[frame.id]) {\n        tagParsers[frame.id](frame);\n\n        // handle the special PRIV frame used to indicate the start\n        // time for raw AAC data\n        if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n          var\n            d = frame.data,\n            size = ((d[3] & 0x01)  << 30) |\n                   (d[4]  << 22) |\n                   (d[5] << 14) |\n                   (d[6] << 6) |\n                   (d[7] >>> 2);\n\n          size *= 4;\n          size += d[7] & 0x03;\n          frame.timeStamp = size;\n          // in raw AAC, all subsequent data will be timestamped based\n          // on the value of this frame\n          // we couldn't have known the appropriate pts and dts before\n          // parsing this ID3 tag so set those values now\n          if (tag.pts === undefined && tag.dts === undefined) {\n            tag.pts = frame.timeStamp;\n            tag.dts = frame.timeStamp;\n          }\n          this.trigger('timestamp', frame);\n        }\n      }\n      tag.frames.push(frame);\n\n      frameStart += 10; // advance past the frame header\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < tagSize);\n    this.trigger('data', tag);\n  };\n};\nMetadataStream.prototype = new Stream();\n\nmodule.exports = MetadataStream;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nvar Stream = require('../utils/stream.js');\nvar ExpGolomb = require('../utils/exp-golomb.js');\n\nvar H264Stream, NalByteStream;\nvar PROFILES_WITH_OPTIONAL_SPS_DATA;\n\n/**\n * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n */\nNalByteStream = function() {\n  var\n    syncPoint = 0,\n    i,\n    buffer;\n  NalByteStream.prototype.init.call(this);\n\n  /*\n   * Scans a byte stream and triggers a data event with the NAL units found.\n   * @param {Object} data Event received from H264Stream\n   * @param {Uint8Array} data.data The h264 byte stream to be scanned\n   *\n   * @see H264Stream.push\n   */\n  this.push = function(data) {\n    var swapBuffer;\n\n    if (!buffer) {\n      buffer = data.data;\n    } else {\n      swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n      swapBuffer.set(buffer);\n      swapBuffer.set(data.data, buffer.byteLength);\n      buffer = swapBuffer;\n    }\n\n    // Rec. ITU-T H.264, Annex B\n    // scan for NAL unit boundaries\n\n    // a match looks like this:\n    // 0 0 1 .. NAL .. 0 0 1\n    // ^ sync point        ^ i\n    // or this:\n    // 0 0 1 .. NAL .. 0 0 0\n    // ^ sync point        ^ i\n\n    // advance the sync point to a NAL start, if necessary\n    for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n      if (buffer[syncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        i = syncPoint + 5;\n        break;\n      }\n    }\n\n    while (i < buffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (buffer[i]) {\n      case 0:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0) {\n          i += 2;\n          break;\n        } else if (buffer[i - 2] !== 0) {\n          i++;\n          break;\n        }\n\n        // deliver the NAL unit if it isn't empty\n        if (syncPoint + 3 !== i - 2) {\n          this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        }\n\n        // drop trailing zeroes\n        do {\n          i++;\n        } while (buffer[i] !== 1 && i < buffer.length);\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      case 1:\n        // skip past non-sync sequences\n        if (buffer[i - 1] !== 0 ||\n            buffer[i - 2] !== 0) {\n          i += 3;\n          break;\n        }\n\n        // deliver the NAL unit\n        this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n        syncPoint = i - 2;\n        i += 3;\n        break;\n      default:\n        // the current byte isn't a one or zero, so it cannot be part\n        // of a sync sequence\n        i += 3;\n        break;\n      }\n    }\n    // filter out the NAL units that were delivered\n    buffer = buffer.subarray(syncPoint);\n    i -= syncPoint;\n    syncPoint = 0;\n  };\n\n  this.flush = function() {\n    // deliver the last buffered NAL unit\n    if (buffer && buffer.byteLength > 3) {\n      this.trigger('data', buffer.subarray(syncPoint + 3));\n    }\n    // reset the stream state\n    buffer = null;\n    syncPoint = 0;\n    this.trigger('done');\n  };\n};\nNalByteStream.prototype = new Stream();\n\n// values of profile_idc that indicate additional fields are included in the SPS\n// see Recommendation ITU-T H.264 (4/2013),\n// 7.3.2.1.1 Sequence parameter set data syntax\nPROFILES_WITH_OPTIONAL_SPS_DATA = {\n  100: true,\n  110: true,\n  122: true,\n  244: true,\n  44: true,\n  83: true,\n  86: true,\n  118: true,\n  128: true,\n  138: true,\n  139: true,\n  134: true\n};\n\n/**\n * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n * events.\n */\nH264Stream = function() {\n  var\n    nalByteStream = new NalByteStream(),\n    self,\n    trackId,\n    currentPts,\n    currentDts,\n\n    discardEmulationPreventionBytes,\n    readSequenceParameterSet,\n    skipScalingList;\n\n  H264Stream.prototype.init.call(this);\n  self = this;\n\n  /*\n   * Pushes a packet from a stream onto the NalByteStream\n   *\n   * @param {Object} packet - A packet received from a stream\n   * @param {Uint8Array} packet.data - The raw bytes of the packet\n   * @param {Number} packet.dts - Decode timestamp of the packet\n   * @param {Number} packet.pts - Presentation timestamp of the packet\n   * @param {Number} packet.trackId - The id of the h264 track this packet came from\n   * @param {('video'|'audio')} packet.type - The type of packet\n   *\n   */\n  this.push = function(packet) {\n    if (packet.type !== 'video') {\n      return;\n    }\n    trackId = packet.trackId;\n    currentPts = packet.pts;\n    currentDts = packet.dts;\n\n    nalByteStream.push(packet);\n  };\n\n  /*\n   * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n   * for the NALUs to the next stream component.\n   * Also, preprocess caption and sequence parameter NALUs.\n   *\n   * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n   * @see NalByteStream.push\n   */\n  nalByteStream.on('data', function(data) {\n    var\n      event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data\n      };\n\n    switch (data[0] & 0x1f) {\n    case 0x05:\n      event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n      break;\n    case 0x06:\n      event.nalUnitType = 'sei_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      break;\n    case 0x07:\n      event.nalUnitType = 'seq_parameter_set_rbsp';\n      event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n      event.config = readSequenceParameterSet(event.escapedRBSP);\n      break;\n    case 0x08:\n      event.nalUnitType = 'pic_parameter_set_rbsp';\n      break;\n    case 0x09:\n      event.nalUnitType = 'access_unit_delimiter_rbsp';\n      break;\n\n    default:\n      break;\n    }\n    // This triggers data on the H264Stream\n    self.trigger('data', event);\n  });\n  nalByteStream.on('done', function() {\n    self.trigger('done');\n  });\n\n  this.flush = function() {\n    nalByteStream.flush();\n  };\n\n  /**\n   * Advance the ExpGolomb decoder past a scaling list. The scaling\n   * list is optionally transmitted as part of a sequence parameter\n   * set and is not relevant to transmuxing.\n   * @param count {number} the number of entries in this scaling list\n   * @param expGolombDecoder {object} an ExpGolomb pointed to the\n   * start of a scaling list\n   * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n   */\n  skipScalingList = function(count, expGolombDecoder) {\n    var\n      lastScale = 8,\n      nextScale = 8,\n      j,\n      deltaScale;\n\n    for (j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = expGolombDecoder.readExpGolomb();\n        nextScale = (lastScale + deltaScale + 256) % 256;\n      }\n\n      lastScale = (nextScale === 0) ? lastScale : nextScale;\n    }\n  };\n\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n  discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  };\n\n  /**\n   * Read a sequence parameter set and return some interesting video\n   * properties. A sequence parameter set is the H264 metadata that\n   * describes the properties of upcoming video frames.\n   * @param data {Uint8Array} the bytes of a sequence parameter set\n   * @return {object} an object with configuration parsed from the\n   * sequence parameter set, including the dimensions of the\n   * associated video frames.\n   */\n  readSequenceParameterSet = function(data) {\n    var\n      frameCropLeftOffset = 0,\n      frameCropRightOffset = 0,\n      frameCropTopOffset = 0,\n      frameCropBottomOffset = 0,\n      sarScale = 1,\n      expGolombDecoder, profileIdc, levelIdc, profileCompatibility,\n      chromaFormatIdc, picOrderCntType,\n      numRefFramesInPicOrderCntCycle, picWidthInMbsMinus1,\n      picHeightInMapUnitsMinus1,\n      frameMbsOnlyFlag,\n      scalingListCount,\n      sarRatio,\n      aspectRatioIdc,\n      i;\n\n    expGolombDecoder = new ExpGolomb(data);\n    profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n    profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n    levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n    expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n\n    // some profiles have more optional data we don't need\n    if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n      chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n      if (chromaFormatIdc === 3) {\n        expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n      }\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n      expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n      expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n      if (expGolombDecoder.readBoolean()) { // seq_scaling_matrix_present_flag\n        scalingListCount = (chromaFormatIdc !== 3) ? 8 : 12;\n        for (i = 0; i < scalingListCount; i++) {\n          if (expGolombDecoder.readBoolean()) { // seq_scaling_list_present_flag[ i ]\n            if (i < 6) {\n              skipScalingList(16, expGolombDecoder);\n            } else {\n              skipScalingList(64, expGolombDecoder);\n            }\n          }\n        }\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n    picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n    if (picOrderCntType === 0) {\n      expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n    } else if (picOrderCntType === 1) {\n      expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n      expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n      expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n      numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n      for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n      }\n    }\n\n    expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n    expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n    picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n    picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n\n    frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n    if (frameMbsOnlyFlag === 0) {\n      expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n    }\n\n    expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n    if (expGolombDecoder.readBoolean()) { // frame_cropping_flag\n      frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n      frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n    }\n    if (expGolombDecoder.readBoolean()) {\n      // vui_parameters_present_flag\n      if (expGolombDecoder.readBoolean()) {\n        // aspect_ratio_info_present_flag\n        aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break;\n          case 2: sarRatio = [12, 11]; break;\n          case 3: sarRatio = [10, 11]; break;\n          case 4: sarRatio = [16, 11]; break;\n          case 5: sarRatio = [40, 33]; break;\n          case 6: sarRatio = [24, 11]; break;\n          case 7: sarRatio = [20, 11]; break;\n          case 8: sarRatio = [32, 11]; break;\n          case 9: sarRatio = [80, 33]; break;\n          case 10: sarRatio = [18, 11]; break;\n          case 11: sarRatio = [15, 11]; break;\n          case 12: sarRatio = [64, 33]; break;\n          case 13: sarRatio = [160, 99]; break;\n          case 14: sarRatio = [4, 3]; break;\n          case 15: sarRatio = [3, 2]; break;\n          case 16: sarRatio = [2, 1]; break;\n          case 255: {\n            sarRatio = [expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte(),\n                        expGolombDecoder.readUnsignedByte() << 8 |\n                        expGolombDecoder.readUnsignedByte() ];\n            break;\n          }\n        }\n        if (sarRatio) {\n          sarScale = sarRatio[0] / sarRatio[1];\n        }\n      }\n    }\n    return {\n      profileIdc: profileIdc,\n      levelIdc: levelIdc,\n      profileCompatibility: profileCompatibility,\n      width: Math.ceil((((picWidthInMbsMinus1 + 1) * 16) - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n      height: ((2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16) - (frameCropTopOffset * 2) - (frameCropBottomOffset * 2)\n    };\n  };\n\n};\nH264Stream.prototype = new Stream();\n\nmodule.exports = {\n  H264Stream: H264Stream,\n  NalByteStream: NalByteStream\n};\n","var trim = require('string.prototype.trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar highPrefix = [33, 16, 5, 32, 164, 27];\nvar lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\nvar zeroFill = function(count) {\n  var a = [];\n  while (count--) {\n    a.push(0);\n  }\n  return a;\n};\n\nvar makeTable = function(metaTable) {\n  return Object.keys(metaTable).reduce(function(obj, key) {\n    obj[key] = new Uint8Array(metaTable[key].reduce(function(arr, part) {\n      return arr.concat(part);\n    }, []));\n    return obj;\n  }, {});\n};\n\n// Frames-of-silence to use for filling in missing AAC frames\nvar coneOfSilence = {\n  96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n  88200: [highPrefix, [231], zeroFill(170), [56]],\n  64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n  48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n  44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n  32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n  24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n  16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n  12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n  11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n  8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n};\n\nmodule.exports = makeTable(coneOfSilence);\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar toUnsigned = function(value) {\n  return value >>> 0;\n};\n\nmodule.exports = {\n  toUnsigned: toUnsigned\n};\n","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n","/*! @name mpd-parser @version 0.8.1 @license Apache-2.0 */\nimport window$1 from 'global/window';\n\nvar version = \"0.8.1\";\n\nvar isObject = function isObject(obj) {\n  return !!obj && typeof obj === 'object';\n};\n\nvar merge = function merge() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n\n  return objects.reduce(function (result, source) {\n    Object.keys(source).forEach(function (key) {\n      if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n        result[key] = result[key].concat(source[key]);\n      } else if (isObject(result[key]) && isObject(source[key])) {\n        result[key] = merge(result[key], source[key]);\n      } else {\n        result[key] = source[key];\n      }\n    });\n    return result;\n  }, {});\n};\nvar values = function values(o) {\n  return Object.keys(o).map(function (k) {\n    return o[k];\n  });\n};\n\nvar range = function range(start, end) {\n  var result = [];\n\n  for (var i = start; i < end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\nvar flatten = function flatten(lists) {\n  return lists.reduce(function (x, y) {\n    return x.concat(y);\n  }, []);\n};\nvar from = function from(list) {\n  if (!list.length) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = 0; i < list.length; i++) {\n    result.push(list[i]);\n  }\n\n  return result;\n};\nvar findIndexes = function findIndexes(l, key) {\n  return l.reduce(function (a, e, i) {\n    if (e[key]) {\n      a.push(i);\n    }\n\n    return a;\n  }, []);\n};\n\nvar errors = {\n  INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n  DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n  DASH_INVALID_XML: 'DASH_INVALID_XML',\n  NO_BASE_URL: 'NO_BASE_URL',\n  MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n  SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n  UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar urlToolkit = createCommonjsModule(function (module, exports) {\n// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  module.exports = URLToolkit;\n})(commonjsGlobal);\n/* jshint ignore:end */\n});\n\nvar resolveUrl = function resolveUrl(baseUrl, relativeUrl) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeUrl)) {\n    return relativeUrl;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseUrl)) {\n    baseUrl = urlToolkit.buildAbsoluteURL(window$1.location.href, baseUrl);\n  }\n\n  return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n};\n\n/**\n * @typedef {Object} SingleUri\n * @property {string} uri - relative location of segment\n * @property {string} resolvedUri - resolved location of segment\n * @property {Object} byterange - Object containing information on how to make byte range\n *   requests following byte-range-spec per RFC2616.\n * @property {String} byterange.length - length of range request\n * @property {String} byterange.offset - byte offset of range request\n *\n * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n */\n\n/**\n * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n * that conforms to how m3u8-parser is structured\n *\n * @see https://github.com/videojs/m3u8-parser\n *\n * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n * @param {string} source - source url for segment\n * @param {string} range - optional range used for range calls,\n *   follows  RFC 2616, Clause 14.35.1\n * @return {SingleUri} full segment information transformed into a format similar\n *   to m3u8-parser\n */\n\nvar urlTypeToSegment = function urlTypeToSegment(_ref) {\n  var _ref$baseUrl = _ref.baseUrl,\n      baseUrl = _ref$baseUrl === void 0 ? '' : _ref$baseUrl,\n      _ref$source = _ref.source,\n      source = _ref$source === void 0 ? '' : _ref$source,\n      _ref$range = _ref.range,\n      range = _ref$range === void 0 ? '' : _ref$range,\n      _ref$indexRange = _ref.indexRange,\n      indexRange = _ref$indexRange === void 0 ? '' : _ref$indexRange;\n  var segment = {\n    uri: source,\n    resolvedUri: resolveUrl(baseUrl || '', source)\n  };\n\n  if (range || indexRange) {\n    var rangeStr = range ? range : indexRange;\n    var ranges = rangeStr.split('-');\n    var startRange = parseInt(ranges[0], 10);\n    var endRange = parseInt(ranges[1], 10); // byterange should be inclusive according to\n    // RFC 2616, Clause 14.35.1\n\n    segment.byterange = {\n      length: endRange - startRange + 1,\n      offset: startRange\n    };\n  }\n\n  return segment;\n};\nvar byteRangeToString = function byteRangeToString(byterange) {\n  // `endRange` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var endRange = byterange.offset + byterange.length - 1;\n  return byterange.offset + \"-\" + endRange;\n};\n\n/**\n * Functions for calculating the range of available segments in static and dynamic\n * manifests.\n */\n\nvar segmentRange = {\n  /**\n   * Returns the entire range of available segments for a static MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  static: function _static(attributes) {\n    var duration = attributes.duration,\n        _attributes$timescale = attributes.timescale,\n        timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n        sourceDuration = attributes.sourceDuration;\n    return {\n      start: 0,\n      end: Math.ceil(sourceDuration / (duration / timescale))\n    };\n  },\n\n  /**\n   * Returns the current live window range of available segments for a dynamic MPD\n   *\n   * @param {Object} attributes\n   *        Inheritied MPD attributes\n   * @return {{ start: number, end: number }}\n   *         The start and end numbers for available segments\n   */\n  dynamic: function dynamic(attributes) {\n    var NOW = attributes.NOW,\n        clientOffset = attributes.clientOffset,\n        availabilityStartTime = attributes.availabilityStartTime,\n        _attributes$timescale2 = attributes.timescale,\n        timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n        duration = attributes.duration,\n        _attributes$start = attributes.start,\n        start = _attributes$start === void 0 ? 0 : _attributes$start,\n        _attributes$minimumUp = attributes.minimumUpdatePeriod,\n        minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp,\n        _attributes$timeShift = attributes.timeShiftBufferDepth,\n        timeShiftBufferDepth = _attributes$timeShift === void 0 ? Infinity : _attributes$timeShift;\n    var now = (NOW + clientOffset) / 1000;\n    var periodStartWC = availabilityStartTime + start;\n    var periodEndWC = now + minimumUpdatePeriod;\n    var periodDuration = periodEndWC - periodStartWC;\n    var segmentCount = Math.ceil(periodDuration * timescale / duration);\n    var availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n    var availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n    return {\n      start: Math.max(0, availableStart),\n      end: Math.min(segmentCount, availableEnd)\n    };\n  }\n};\n/**\n * Maps a range of numbers to objects with information needed to build the corresponding\n * segment list\n *\n * @name toSegmentsCallback\n * @function\n * @param {number} number\n *        Number of the segment\n * @param {number} index\n *        Index of the number in the range list\n * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n *         Object with segment timing and duration info\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping a range of numbers to\n * information needed to build the segment list.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {toSegmentsCallback}\n *         Callback map function\n */\n\nvar toSegments = function toSegments(attributes) {\n  return function (number, index) {\n    var duration = attributes.duration,\n        _attributes$timescale3 = attributes.timescale,\n        timescale = _attributes$timescale3 === void 0 ? 1 : _attributes$timescale3,\n        periodIndex = attributes.periodIndex,\n        _attributes$startNumb = attributes.startNumber,\n        startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodIndex,\n      time: index * duration\n    };\n  };\n};\n/**\n * Returns a list of objects containing segment timing and duration info used for\n * building the list of segments. This uses the @duration attribute specified\n * in the MPD manifest to derive the range of segments.\n *\n * @param {Object} attributes\n *        Inherited MPD attributes\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseByDuration = function parseByDuration(attributes) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      duration = attributes.duration,\n      _attributes$timescale4 = attributes.timescale,\n      timescale = _attributes$timescale4 === void 0 ? 1 : _attributes$timescale4,\n      sourceDuration = attributes.sourceDuration;\n\n  var _segmentRange$type = segmentRange[type](attributes),\n      start = _segmentRange$type.start,\n      end = _segmentRange$type.end;\n\n  var segments = range(start, end).map(toSegments(attributes));\n\n  if (type === 'static') {\n    var index = segments.length - 1; // final segment may be less than full segment duration\n\n    segments[index].duration = sourceDuration - duration / timescale * index;\n  }\n\n  return segments;\n};\n\n/**\n * Translates SegmentBase into a set of segments.\n * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @return {Object.<Array>} list of segments\n */\n\nvar segmentsFromBase = function segmentsFromBase(attributes) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$indexRang = attributes.indexRange,\n      indexRange = _attributes$indexRang === void 0 ? '' : _attributes$indexRang,\n      duration = attributes.duration; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n  if (!baseUrl) {\n    throw new Error(errors.NO_BASE_URL);\n  }\n\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: baseUrl,\n    indexRange: indexRange\n  });\n  segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n  // (since SegmentBase is only for one total segment)\n\n  if (duration) {\n    var segmentTimeInfo = parseByDuration(attributes);\n\n    if (segmentTimeInfo.length) {\n      segment.duration = segmentTimeInfo[0].duration;\n      segment.timeline = segmentTimeInfo[0].timeline;\n    }\n  } else if (sourceDuration) {\n    segment.duration = sourceDuration / timescale;\n    segment.timeline = 0;\n  } // This is used for mediaSequence\n\n\n  segment.number = 0;\n  return [segment];\n};\n/**\n * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n * according to the sidx information given.\n *\n * playlist.sidx has metadadata about the sidx where-as the sidx param\n * is the parsed sidx box itself.\n *\n * @param {Object} playlist the playlist to update the sidx information for\n * @param {Object} sidx the parsed sidx box\n * @return {Object} the playlist object with the updated sidx information\n */\n\nvar addSegmentsToPlaylist = function addSegmentsToPlaylist(playlist, sidx, baseUrl) {\n  // Retain init segment information\n  var initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial master manifest parsing\n\n  var sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n  var timeline = playlist.timeline || 0;\n  var sidxByteRange = playlist.sidx.byterange;\n  var sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n  var timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n  var mediaReferences = sidx.references.filter(function (r) {\n    return r.referenceType !== 1;\n  });\n  var segments = []; // firstOffset is the offset from the end of the sidx box\n\n  var startIndex = sidxEnd + sidx.firstOffset;\n\n  for (var i = 0; i < mediaReferences.length; i++) {\n    var reference = sidx.references[i]; // size of the referenced (sub)segment\n\n    var size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n    // this will be converted to seconds when generating segments\n\n    var duration = reference.subsegmentDuration; // should be an inclusive range\n\n    var endIndex = startIndex + size - 1;\n    var indexRange = startIndex + \"-\" + endIndex;\n    var attributes = {\n      baseUrl: baseUrl,\n      timescale: timescale,\n      timeline: timeline,\n      // this is used in parseByDuration\n      periodIndex: timeline,\n      duration: duration,\n      sourceDuration: sourceDuration,\n      indexRange: indexRange\n    };\n    var segment = segmentsFromBase(attributes)[0];\n\n    if (initSegment) {\n      segment.map = initSegment;\n    }\n\n    segments.push(segment);\n    startIndex += size;\n  }\n\n  playlist.segments = segments;\n  return playlist;\n};\n\nvar mergeDiscontiguousPlaylists = function mergeDiscontiguousPlaylists(playlists) {\n  var mergedPlaylists = values(playlists.reduce(function (acc, playlist) {\n    // assuming playlist IDs are the same across periods\n    // TODO: handle multiperiod where representation sets are not the same\n    // across periods\n    var name = playlist.attributes.id + (playlist.attributes.lang || ''); // Periods after first\n\n    if (acc[name]) {\n      var _acc$name$segments;\n\n      // first segment of subsequent periods signal a discontinuity\n      if (playlist.segments[0]) {\n        playlist.segments[0].discontinuity = true;\n      }\n\n      (_acc$name$segments = acc[name].segments).push.apply(_acc$name$segments, playlist.segments); // bubble up contentProtection, this assumes all DRM content\n      // has the same contentProtection\n\n\n      if (playlist.attributes.contentProtection) {\n        acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n      }\n    } else {\n      // first Period\n      acc[name] = playlist;\n    }\n\n    return acc;\n  }, {}));\n  return mergedPlaylists.map(function (playlist) {\n    playlist.discontinuityStarts = findIndexes(playlist.segments, 'discontinuity');\n    return playlist;\n  });\n};\n\nvar addSegmentInfoFromSidx = function addSegmentInfoFromSidx(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!Object.keys(sidxMapping).length) {\n    return playlists;\n  }\n\n  for (var i in playlists) {\n    var playlist = playlists[i];\n\n    if (!playlist.sidx) {\n      continue;\n    }\n\n    var sidxKey = playlist.sidx.uri + '-' + byteRangeToString(playlist.sidx.byterange);\n    var sidxMatch = sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n\n    if (playlist.sidx && sidxMatch) {\n      addSegmentsToPlaylist(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n  }\n\n  return playlists;\n};\n\nvar formatAudioPlaylist = function formatAudioPlaylist(_ref) {\n  var _attributes;\n\n  var attributes = _ref.attributes,\n      segments = _ref.segments,\n      sidx = _ref.sidx;\n  var playlist = {\n    attributes: (_attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      CODECS: attributes.codecs\n    }, _attributes['PROGRAM-ID'] = 1, _attributes),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar formatVttPlaylist = function formatVttPlaylist(_ref2) {\n  var _attributes2;\n\n  var attributes = _ref2.attributes,\n      segments = _ref2.segments;\n\n  if (typeof segments === 'undefined') {\n    // vtt tracks may use single file in BaseURL\n    segments = [{\n      uri: attributes.baseUrl,\n      timeline: attributes.periodIndex,\n      resolvedUri: attributes.baseUrl || '',\n      duration: attributes.sourceDuration,\n      number: 0\n    }]; // targetDuration should be the same duration as the only segment\n\n    attributes.duration = attributes.sourceDuration;\n  }\n\n  return {\n    attributes: (_attributes2 = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes2['PROGRAM-ID'] = 1, _attributes2),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: attributes.baseUrl || '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n};\nvar organizeAudioPlaylists = function organizeAudioPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  var mainPlaylist;\n  var formattedPlaylists = playlists.reduce(function (a, playlist) {\n    var role = playlist.attributes.role && playlist.attributes.role.value || '';\n    var language = playlist.attributes.lang || '';\n    var label = 'main';\n\n    if (language) {\n      var roleLabel = role ? \" (\" + role + \")\" : '';\n      label = \"\" + playlist.attributes.lang + roleLabel;\n    } // skip if we already have the highest quality audio for a language\n\n\n    if (a[label] && a[label].playlists[0].attributes.BANDWIDTH > playlist.attributes.bandwidth) {\n      return a;\n    }\n\n    a[label] = {\n      language: language,\n      autoselect: true,\n      default: role === 'main',\n      playlists: addSegmentInfoFromSidx([formatAudioPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n\n    if (typeof mainPlaylist === 'undefined' && role === 'main') {\n      mainPlaylist = playlist;\n      mainPlaylist.default = true;\n    }\n\n    return a;\n  }, {}); // if no playlists have role \"main\", mark the first as main\n\n  if (!mainPlaylist) {\n    var firstLabel = Object.keys(formattedPlaylists)[0];\n    formattedPlaylists[firstLabel].default = true;\n  }\n\n  return formattedPlaylists;\n};\nvar organizeVttPlaylists = function organizeVttPlaylists(playlists, sidxMapping) {\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  return playlists.reduce(function (a, playlist) {\n    var label = playlist.attributes.lang || 'text'; // skip if we already have subtitles\n\n    if (a[label]) {\n      return a;\n    }\n\n    a[label] = {\n      language: label,\n      default: false,\n      autoselect: false,\n      playlists: addSegmentInfoFromSidx([formatVttPlaylist(playlist)], sidxMapping),\n      uri: ''\n    };\n    return a;\n  }, {});\n};\nvar formatVideoPlaylist = function formatVideoPlaylist(_ref3) {\n  var _attributes3;\n\n  var attributes = _ref3.attributes,\n      segments = _ref3.segments,\n      sidx = _ref3.sidx;\n  var playlist = {\n    attributes: (_attributes3 = {\n      NAME: attributes.id,\n      AUDIO: 'audio',\n      SUBTITLES: 'subs',\n      RESOLUTION: {\n        width: attributes.width,\n        height: attributes.height\n      },\n      CODECS: attributes.codecs,\n      BANDWIDTH: attributes.bandwidth\n    }, _attributes3['PROGRAM-ID'] = 1, _attributes3),\n    uri: '',\n    endList: (attributes.type || 'static') === 'static',\n    timeline: attributes.periodIndex,\n    resolvedUri: '',\n    targetDuration: attributes.duration,\n    segments: segments,\n    mediaSequence: segments.length ? segments[0].number : 1\n  };\n\n  if (attributes.contentProtection) {\n    playlist.contentProtection = attributes.contentProtection;\n  }\n\n  if (sidx) {\n    playlist.sidx = sidx;\n  }\n\n  return playlist;\n};\nvar toM3u8 = function toM3u8(dashPlaylists, sidxMapping) {\n  var _mediaGroups;\n\n  if (sidxMapping === void 0) {\n    sidxMapping = {};\n  }\n\n  if (!dashPlaylists.length) {\n    return {};\n  } // grab all master attributes\n\n\n  var _dashPlaylists$0$attr = dashPlaylists[0].attributes,\n      duration = _dashPlaylists$0$attr.sourceDuration,\n      _dashPlaylists$0$attr2 = _dashPlaylists$0$attr.minimumUpdatePeriod,\n      minimumUpdatePeriod = _dashPlaylists$0$attr2 === void 0 ? 0 : _dashPlaylists$0$attr2;\n\n  var videoOnly = function videoOnly(_ref4) {\n    var attributes = _ref4.attributes;\n    return attributes.mimeType === 'video/mp4' || attributes.contentType === 'video';\n  };\n\n  var audioOnly = function audioOnly(_ref5) {\n    var attributes = _ref5.attributes;\n    return attributes.mimeType === 'audio/mp4' || attributes.contentType === 'audio';\n  };\n\n  var vttOnly = function vttOnly(_ref6) {\n    var attributes = _ref6.attributes;\n    return attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  };\n\n  var videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n  var audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n  var vttPlaylists = dashPlaylists.filter(vttOnly);\n  var master = {\n    allowCache: true,\n    discontinuityStarts: [],\n    segments: [],\n    endList: true,\n    mediaGroups: (_mediaGroups = {\n      AUDIO: {},\n      VIDEO: {}\n    }, _mediaGroups['CLOSED-CAPTIONS'] = {}, _mediaGroups.SUBTITLES = {}, _mediaGroups),\n    uri: '',\n    duration: duration,\n    playlists: addSegmentInfoFromSidx(videoPlaylists, sidxMapping),\n    minimumUpdatePeriod: minimumUpdatePeriod * 1000\n  };\n\n  if (audioPlaylists.length) {\n    master.mediaGroups.AUDIO.audio = organizeAudioPlaylists(audioPlaylists, sidxMapping);\n  }\n\n  if (vttPlaylists.length) {\n    master.mediaGroups.SUBTITLES.subs = organizeVttPlaylists(vttPlaylists, sidxMapping);\n  }\n\n  return master;\n};\n\n/**\n * Calculates the R (repetition) value for a live stream (for the final segment\n * in a manifest where the r value is negative 1)\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {number} time\n *        current time (typically the total time up until the final segment)\n * @param {number} duration\n *        duration property for the given <S />\n *\n * @return {number}\n *        R value to reach the end of the given period\n */\nvar getLiveRValue = function getLiveRValue(attributes, time, duration) {\n  var NOW = attributes.NOW,\n      clientOffset = attributes.clientOffset,\n      availabilityStartTime = attributes.availabilityStartTime,\n      _attributes$timescale = attributes.timescale,\n      timescale = _attributes$timescale === void 0 ? 1 : _attributes$timescale,\n      _attributes$start = attributes.start,\n      start = _attributes$start === void 0 ? 0 : _attributes$start,\n      _attributes$minimumUp = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp === void 0 ? 0 : _attributes$minimumUp;\n  var now = (NOW + clientOffset) / 1000;\n  var periodStartWC = availabilityStartTime + start;\n  var periodEndWC = now + minimumUpdatePeriod;\n  var periodDuration = periodEndWC - periodStartWC;\n  return Math.ceil((periodDuration * timescale - time) / duration);\n};\n/**\n * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n * timing and duration\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\n\nvar parseByTimeline = function parseByTimeline(attributes, segmentTimeline) {\n  var _attributes$type = attributes.type,\n      type = _attributes$type === void 0 ? 'static' : _attributes$type,\n      _attributes$minimumUp2 = attributes.minimumUpdatePeriod,\n      minimumUpdatePeriod = _attributes$minimumUp2 === void 0 ? 0 : _attributes$minimumUp2,\n      _attributes$media = attributes.media,\n      media = _attributes$media === void 0 ? '' : _attributes$media,\n      sourceDuration = attributes.sourceDuration,\n      _attributes$timescale2 = attributes.timescale,\n      timescale = _attributes$timescale2 === void 0 ? 1 : _attributes$timescale2,\n      _attributes$startNumb = attributes.startNumber,\n      startNumber = _attributes$startNumb === void 0 ? 1 : _attributes$startNumb,\n      timeline = attributes.periodIndex;\n  var segments = [];\n  var time = -1;\n\n  for (var sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n    var S = segmentTimeline[sIndex];\n    var duration = S.d;\n    var repeat = S.r || 0;\n    var segmentTime = S.t || 0;\n\n    if (time < 0) {\n      // first segment\n      time = segmentTime;\n    }\n\n    if (segmentTime && segmentTime > time) {\n      // discontinuity\n      // TODO: How to handle this type of discontinuity\n      // timeline++ here would treat it like HLS discontuity and content would\n      // get appended without gap\n      // E.G.\n      //  <S t=\"0\" d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S d=\"1\" />\n      //  <S t=\"5\" d=\"1\" />\n      // would have $Time$ values of [0, 1, 2, 5]\n      // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n      // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n      // does the value of sourceDuration consider this when calculating arbitrary\n      // negative @r repeat value?\n      // E.G. Same elements as above with this added at the end\n      //  <S d=\"1\" r=\"-1\" />\n      //  with a sourceDuration of 10\n      // Would the 2 gaps be included in the time duration calculations resulting in\n      // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n      // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n      time = segmentTime;\n    }\n\n    var count = void 0;\n\n    if (repeat < 0) {\n      var nextS = sIndex + 1;\n\n      if (nextS === segmentTimeline.length) {\n        // last segment\n        if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n          count = getLiveRValue(attributes, time, duration);\n        } else {\n          // TODO: This may be incorrect depending on conclusion of TODO above\n          count = (sourceDuration * timescale - time) / duration;\n        }\n      } else {\n        count = (segmentTimeline[nextS].t - time) / duration;\n      }\n    } else {\n      count = repeat + 1;\n    }\n\n    var end = startNumber + segments.length + count;\n    var number = startNumber + segments.length;\n\n    while (number < end) {\n      segments.push({\n        number: number,\n        duration: duration / timescale,\n        time: time,\n        timeline: timeline\n      });\n      time += duration;\n      number++;\n    }\n  }\n\n  return segments;\n};\n\nvar identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n/**\n * Replaces template identifiers with corresponding values. To be used as the callback\n * for String.prototype.replace\n *\n * @name replaceCallback\n * @function\n * @param {string} match\n *        Entire match of identifier\n * @param {string} identifier\n *        Name of matched identifier\n * @param {string} format\n *        Format tag string. Its presence indicates that padding is expected\n * @param {string} width\n *        Desired length of the replaced value. Values less than this width shall be left\n *        zero padded\n * @return {string}\n *         Replacement for the matched identifier\n */\n\n/**\n * Returns a function to be used as a callback for String.prototype.replace to replace\n * template identifiers\n *\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {replaceCallback}\n *         Callback to be used with String.prototype.replace to replace identifiers\n */\n\nvar identifierReplacement = function identifierReplacement(values) {\n  return function (match, identifier, format, width) {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n\n    var value = '' + values[identifier];\n\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n\n    if (value.length >= width) {\n      return value;\n    }\n\n    return \"\" + new Array(width - value.length + 1).join('0') + value;\n  };\n};\n/**\n * Constructs a segment url from a template string\n *\n * @param {string} url\n *        Template string to construct url from\n * @param {Obect} values\n *        Object containing values that shall be used to replace known identifiers\n * @param {number} values.RepresentationID\n *        Value of the Representation@id attribute\n * @param {number} values.Number\n *        Number of the corresponding segment\n * @param {number} values.Bandwidth\n *        Value of the Representation@bandwidth attribute.\n * @param {number} values.Time\n *        Timestamp value of the corresponding segment\n * @return {string}\n *         Segment url with identifiers replaced\n */\n\nvar constructTemplateUrl = function constructTemplateUrl(url, values) {\n  return url.replace(identifierPattern, identifierReplacement(values));\n};\n/**\n * Generates a list of objects containing timing and duration information about each\n * segment needed to generate segment uris and the complete segment object\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {{number: number, duration: number, time: number, timeline: number}[]}\n *         List of Objects with segment timing and duration info\n */\n\nvar parseTemplateInfo = function parseTemplateInfo(attributes, segmentTimeline) {\n  if (!attributes.duration && !segmentTimeline) {\n    // if neither @duration or SegmentTimeline are present, then there shall be exactly\n    // one media segment\n    return [{\n      number: attributes.startNumber || 1,\n      duration: attributes.sourceDuration,\n      time: 0,\n      timeline: attributes.periodIndex\n    }];\n  }\n\n  if (attributes.duration) {\n    return parseByDuration(attributes);\n  }\n\n  return parseByTimeline(attributes, segmentTimeline);\n};\n/**\n * Generates a list of segments using information provided by the SegmentTemplate element\n *\n * @param {Object} attributes\n *        Object containing all inherited attributes from parent elements with attribute\n *        names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object[]}\n *         List of segment objects\n */\n\nvar segmentsFromTemplate = function segmentsFromTemplate(attributes, segmentTimeline) {\n  var templateValues = {\n    RepresentationID: attributes.id,\n    Bandwidth: attributes.bandwidth || 0\n  };\n  var _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {\n    sourceURL: '',\n    range: ''\n  } : _attributes$initializ;\n  var mapSegment = urlTypeToSegment({\n    baseUrl: attributes.baseUrl,\n    source: constructTemplateUrl(initialization.sourceURL, templateValues),\n    range: initialization.range\n  });\n  var segments = parseTemplateInfo(attributes, segmentTimeline);\n  return segments.map(function (segment) {\n    templateValues.Number = segment.number;\n    templateValues.Time = segment.time;\n    var uri = constructTemplateUrl(attributes.media || '', templateValues);\n    return {\n      uri: uri,\n      timeline: segment.timeline,\n      duration: segment.duration,\n      resolvedUri: resolveUrl(attributes.baseUrl || '', uri),\n      map: mapSegment,\n      number: segment.number\n    };\n  });\n};\n\n/**\n * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n * to an object that matches the output of a segment in videojs/mpd-parser\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object} segmentUrl\n *   <SegmentURL> node to translate into a segment object\n * @return {Object} translated segment object\n */\n\nvar SegmentURLToSegmentObject = function SegmentURLToSegmentObject(attributes, segmentUrl) {\n  var baseUrl = attributes.baseUrl,\n      _attributes$initializ = attributes.initialization,\n      initialization = _attributes$initializ === void 0 ? {} : _attributes$initializ;\n  var initSegment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: initialization.sourceURL,\n    range: initialization.range\n  });\n  var segment = urlTypeToSegment({\n    baseUrl: baseUrl,\n    source: segmentUrl.media,\n    range: segmentUrl.mediaRange\n  });\n  segment.map = initSegment;\n  return segment;\n};\n/**\n * Generates a list of segments using information provided by the SegmentList element\n * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n * node should be translated into segment.\n *\n * @param {Object} attributes\n *   Object containing all inherited attributes from parent elements with attribute\n *   names as keys\n * @param {Object[]|undefined} segmentTimeline\n *        List of objects representing the attributes of each S element contained within\n *        the SegmentTimeline element\n * @return {Object.<Array>} list of segments\n */\n\n\nvar segmentsFromList = function segmentsFromList(attributes, segmentTimeline) {\n  var duration = attributes.duration,\n      _attributes$segmentUr = attributes.segmentUrls,\n      segmentUrls = _attributes$segmentUr === void 0 ? [] : _attributes$segmentUr; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n  // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n  if (!duration && !segmentTimeline || duration && segmentTimeline) {\n    throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n  }\n\n  var segmentUrlMap = segmentUrls.map(function (segmentUrlObject) {\n    return SegmentURLToSegmentObject(attributes, segmentUrlObject);\n  });\n  var segmentTimeInfo;\n\n  if (duration) {\n    segmentTimeInfo = parseByDuration(attributes);\n  }\n\n  if (segmentTimeline) {\n    segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n  }\n\n  var segments = segmentTimeInfo.map(function (segmentTime, index) {\n    if (segmentUrlMap[index]) {\n      var segment = segmentUrlMap[index];\n      segment.timeline = segmentTime.timeline;\n      segment.duration = segmentTime.duration;\n      segment.number = segmentTime.number;\n      return segment;\n    } // Since we're mapping we should get rid of any blank segments (in case\n    // the given SegmentTimeline is handling for more elements than we have\n    // SegmentURLs for).\n\n  }).filter(function (segment) {\n    return segment;\n  });\n  return segments;\n};\n\nvar generateSegments = function generateSegments(_ref) {\n  var attributes = _ref.attributes,\n      segmentInfo = _ref.segmentInfo;\n  var segmentAttributes;\n  var segmentsFn;\n\n  if (segmentInfo.template) {\n    segmentsFn = segmentsFromTemplate;\n    segmentAttributes = merge(attributes, segmentInfo.template);\n  } else if (segmentInfo.base) {\n    segmentsFn = segmentsFromBase;\n    segmentAttributes = merge(attributes, segmentInfo.base);\n  } else if (segmentInfo.list) {\n    segmentsFn = segmentsFromList;\n    segmentAttributes = merge(attributes, segmentInfo.list);\n  }\n\n  var segmentsInfo = {\n    attributes: attributes\n  };\n\n  if (!segmentsFn) {\n    return segmentsInfo;\n  }\n\n  var segments = segmentsFn(segmentAttributes, segmentInfo.timeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n  // must be in seconds. Since we've generated the segment list, we no longer need\n  // @duration to be in @timescale units, so we can convert it here.\n\n  if (segmentAttributes.duration) {\n    var _segmentAttributes = segmentAttributes,\n        duration = _segmentAttributes.duration,\n        _segmentAttributes$ti = _segmentAttributes.timescale,\n        timescale = _segmentAttributes$ti === void 0 ? 1 : _segmentAttributes$ti;\n    segmentAttributes.duration = duration / timescale;\n  } else if (segments.length) {\n    // if there is no @duration attribute, use the largest segment duration as\n    // as target duration\n    segmentAttributes.duration = segments.reduce(function (max, segment) {\n      return Math.max(max, Math.ceil(segment.duration));\n    }, 0);\n  } else {\n    segmentAttributes.duration = 0;\n  }\n\n  segmentsInfo.attributes = segmentAttributes;\n  segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n  if (segmentInfo.base && segmentAttributes.indexRange) {\n    segmentsInfo.sidx = segments[0];\n    segmentsInfo.segments = [];\n  }\n\n  return segmentsInfo;\n};\nvar toPlaylists = function toPlaylists(representations) {\n  return representations.map(generateSegments);\n};\n\nvar findChildren = function findChildren(element, name) {\n  return from(element.childNodes).filter(function (_ref) {\n    var tagName = _ref.tagName;\n    return tagName === name;\n  });\n};\nvar getContent = function getContent(element) {\n  return element.textContent.trim();\n};\n\nvar parseDuration = function parseDuration(str) {\n  var SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n  var SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n  var SECONDS_IN_DAY = 24 * 60 * 60;\n  var SECONDS_IN_HOUR = 60 * 60;\n  var SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n  var durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n  var match = durationRegex.exec(str);\n\n  if (!match) {\n    return 0;\n  }\n\n  var _match$slice = match.slice(1),\n      year = _match$slice[0],\n      month = _match$slice[1],\n      day = _match$slice[2],\n      hour = _match$slice[3],\n      minute = _match$slice[4],\n      second = _match$slice[5];\n\n  return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n};\nvar parseDate = function parseDate(str) {\n  // Date format without timezone according to ISO 8601\n  // YYY-MM-DDThh:mm:ss.ssssss\n  var dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n  // expressed by ending with 'Z'\n\n  if (dateRegex.test(str)) {\n    str += 'Z';\n  }\n\n  return Date.parse(str);\n};\n\nvar parsers = {\n  /**\n   * Specifies the duration of the entire Media Presentation. Format is a duration string\n   * as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  mediaPresentationDuration: function mediaPresentationDuration(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the Segment availability start time for all Segments referred to in this\n   * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n   * time. Format is a date string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The date as seconds from unix epoch\n   */\n  availabilityStartTime: function availabilityStartTime(value) {\n    return parseDate(value) / 1000;\n  },\n\n  /**\n   * Specifies the smallest period between potential changes to the MPD. Format is a\n   * duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  minimumUpdatePeriod: function minimumUpdatePeriod(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the duration of the smallest time shifting buffer for any Representation\n   * in the MPD. Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  timeShiftBufferDepth: function timeShiftBufferDepth(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n   * Format is a duration string as specified in ISO 8601\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The duration in seconds\n   */\n  start: function start(value) {\n    return parseDuration(value);\n  },\n\n  /**\n   * Specifies the width of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed width\n   */\n  width: function width(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the height of the visual presentation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed height\n   */\n  height: function height(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the bitrate of the representation\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed bandwidth\n   */\n  bandwidth: function bandwidth(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the number of the first Media Segment in this Representation in the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  startNumber: function startNumber(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the timescale in units per seconds\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The aprsed timescale\n   */\n  timescale: function timescale(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the constant approximate Segment duration\n   * NOTE: The <Period> element also contains an @duration attribute. This duration\n   *       specifies the duration of the Period. This attribute is currently not\n   *       supported by the rest of the parser, however we still check for it to prevent\n   *       errors.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  duration: function duration(value) {\n    var parsedValue = parseInt(value, 10);\n\n    if (isNaN(parsedValue)) {\n      return parseDuration(value);\n    }\n\n    return parsedValue;\n  },\n\n  /**\n   * Specifies the Segment duration, in units of the value of the @timescale.\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed duration\n   */\n  d: function d(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the MPD start time, in @timescale units, the first Segment in the series\n   * starts relative to the beginning of the Period\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed time\n   */\n  t: function t(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Specifies the repeat count of the number of following contiguous Segments with the\n   * same duration expressed by the value of @d\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {number}\n   *         The parsed number\n   */\n  r: function r(value) {\n    return parseInt(value, 10);\n  },\n\n  /**\n   * Default parser for all other attributes. Acts as a no-op and just returns the value\n   * as a string\n   *\n   * @param {string} value\n   *        value of attribute as a string\n   * @return {string}\n   *         Unparsed value\n   */\n  DEFAULT: function DEFAULT(value) {\n    return value;\n  }\n};\n/**\n * Gets all the attributes and values of the provided node, parses attributes with known\n * types, and returns an object with attribute names mapped to values.\n *\n * @param {Node} el\n *        The node to parse attributes from\n * @return {Object}\n *         Object with all attributes of el parsed\n */\n\nvar parseAttributes = function parseAttributes(el) {\n  if (!(el && el.attributes)) {\n    return {};\n  }\n\n  return from(el.attributes).reduce(function (a, e) {\n    var parseFn = parsers[e.name] || parsers.DEFAULT;\n    a[e.name] = parseFn(e.value);\n    return a;\n  }, {});\n};\n\nfunction decodeB64ToUint8Array(b64Text) {\n  var decodedString = window$1.atob(b64Text);\n  var array = new Uint8Array(decodedString.length);\n\n  for (var i = 0; i < decodedString.length; i++) {\n    array[i] = decodedString.charCodeAt(i);\n  }\n\n  return array;\n}\n\nvar keySystemsMap = {\n  'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n  'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n  'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n};\n/**\n * Builds a list of urls that is the product of the reference urls and BaseURL values\n *\n * @param {string[]} referenceUrls\n *        List of reference urls to resolve to\n * @param {Node[]} baseUrlElements\n *        List of BaseURL nodes from the mpd\n * @return {string[]}\n *         List of resolved urls\n */\n\nvar buildBaseUrls = function buildBaseUrls(referenceUrls, baseUrlElements) {\n  if (!baseUrlElements.length) {\n    return referenceUrls;\n  }\n\n  return flatten(referenceUrls.map(function (reference) {\n    return baseUrlElements.map(function (baseUrlElement) {\n      return resolveUrl(reference, getContent(baseUrlElement));\n    });\n  }));\n};\n/**\n * Contains all Segment information for its containing AdaptationSet\n *\n * @typedef {Object} SegmentInformation\n * @property {Object|undefined} template\n *           Contains the attributes for the SegmentTemplate node\n * @property {Object[]|undefined} timeline\n *           Contains a list of atrributes for each S node within the SegmentTimeline node\n * @property {Object|undefined} list\n *           Contains the attributes for the SegmentList node\n * @property {Object|undefined} base\n *           Contains the attributes for the SegmentBase node\n */\n\n/**\n * Returns all available Segment information contained within the AdaptationSet node\n *\n * @param {Node} adaptationSet\n *        The AdaptationSet node to get Segment information from\n * @return {SegmentInformation}\n *         The Segment information contained within the provided AdaptationSet\n */\n\nvar getSegmentInformation = function getSegmentInformation(adaptationSet) {\n  var segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n  var segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n  var segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(function (s) {\n    return merge({\n      tag: 'SegmentURL'\n    }, parseAttributes(s));\n  });\n  var segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n  var segmentTimelineParentNode = segmentList || segmentTemplate;\n  var segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n  var segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n  var segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n  // @initialization and an <Initialization> node.  @initialization can be templated,\n  // while the node can have a url and range specified.  If the <SegmentTemplate> has\n  // both @initialization and an <Initialization> subelement we opt to override with\n  // the node, as this interaction is not defined in the spec.\n\n  var template = segmentTemplate && parseAttributes(segmentTemplate);\n\n  if (template && segmentInitialization) {\n    template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n  } else if (template && template.initialization) {\n    // If it is @initialization we convert it to an object since this is the format that\n    // later functions will rely on for the initialization segment.  This is only valid\n    // for <SegmentTemplate>\n    template.initialization = {\n      sourceURL: template.initialization\n    };\n  }\n\n  var segmentInfo = {\n    template: template,\n    timeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(function (s) {\n      return parseAttributes(s);\n    }),\n    list: segmentList && merge(parseAttributes(segmentList), {\n      segmentUrls: segmentUrls,\n      initialization: parseAttributes(segmentInitialization)\n    }),\n    base: segmentBase && merge(parseAttributes(segmentBase), {\n      initialization: parseAttributes(segmentInitialization)\n    })\n  };\n  Object.keys(segmentInfo).forEach(function (key) {\n    if (!segmentInfo[key]) {\n      delete segmentInfo[key];\n    }\n  });\n  return segmentInfo;\n};\n/**\n * Contains Segment information and attributes needed to construct a Playlist object\n * from a Representation\n *\n * @typedef {Object} RepresentationInformation\n * @property {SegmentInformation} segmentInfo\n *           Segment information for this Representation\n * @property {Object} attributes\n *           Inherited attributes for this Representation\n */\n\n/**\n * Maps a Representation node to an object containing Segment information and attributes\n *\n * @name inheritBaseUrlsCallback\n * @function\n * @param {Node} representation\n *        Representation node from the mpd\n * @return {RepresentationInformation}\n *         Representation information needed to construct a Playlist object\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Representation nodes to\n * Segment information and attributes using inherited BaseURL nodes.\n *\n * @param {Object} adaptationSetAttributes\n *        Contains attributes inherited by the AdaptationSet\n * @param {string[]} adaptationSetBaseUrls\n *        Contains list of resolved base urls inherited by the AdaptationSet\n * @param {SegmentInformation} adaptationSetSegmentInfo\n *        Contains Segment information for the AdaptationSet\n * @return {inheritBaseUrlsCallback}\n *         Callback map function\n */\n\nvar inheritBaseUrls = function inheritBaseUrls(adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) {\n  return function (representation) {\n    var repBaseUrlElements = findChildren(representation, 'BaseURL');\n    var repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    var attributes = merge(adaptationSetAttributes, parseAttributes(representation));\n    var representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(function (baseUrl) {\n      return {\n        segmentInfo: merge(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge(attributes, {\n          baseUrl: baseUrl\n        })\n      };\n    });\n  };\n};\n/**\n * Tranforms a series of content protection nodes to\n * an object containing pssh data by key system\n *\n * @param {Node[]} contentProtectionNodes\n *        Content protection nodes\n * @return {Object}\n *        Object containing pssh data by key system\n */\n\nvar generateKeySystemInformation = function generateKeySystemInformation(contentProtectionNodes) {\n  return contentProtectionNodes.reduce(function (acc, node) {\n    var attributes = parseAttributes(node);\n    var keySystem = keySystemsMap[attributes.schemeIdUri];\n\n    if (keySystem) {\n      acc[keySystem] = {\n        attributes: attributes\n      };\n      var psshNode = findChildren(node, 'cenc:pssh')[0];\n\n      if (psshNode) {\n        var pssh = getContent(psshNode);\n        var psshBuffer = pssh && decodeB64ToUint8Array(pssh);\n        acc[keySystem].pssh = psshBuffer;\n      }\n    }\n\n    return acc;\n  }, {});\n};\n/**\n * Maps an AdaptationSet node to a list of Representation information objects\n *\n * @name toRepresentationsCallback\n * @function\n * @param {Node} adaptationSet\n *        AdaptationSet node from the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n * Representation information objects\n *\n * @param {Object} periodAttributes\n *        Contains attributes inherited by the Period\n * @param {string[]} periodBaseUrls\n *        Contains list of resolved base urls inherited by the Period\n * @param {string[]} periodSegmentInfo\n *        Contains Segment Information at the period level\n * @return {toRepresentationsCallback}\n *         Callback map function\n */\n\n\nvar toRepresentations = function toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo) {\n  return function (adaptationSet) {\n    var adaptationSetAttributes = parseAttributes(adaptationSet);\n    var adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    var role = findChildren(adaptationSet, 'Role')[0];\n    var roleAttributes = {\n      role: parseAttributes(role)\n    };\n    var attrs = merge(periodAttributes, adaptationSetAttributes, roleAttributes);\n    var contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n\n    if (Object.keys(contentProtection).length) {\n      attrs = merge(attrs, {\n        contentProtection: contentProtection\n      });\n    }\n\n    var segmentInfo = getSegmentInformation(adaptationSet);\n    var representations = findChildren(adaptationSet, 'Representation');\n    var adaptationSetSegmentInfo = merge(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n};\n/**\n * Maps an Period node to a list of Representation inforamtion objects for all\n * AdaptationSet nodes contained within the Period\n *\n * @name toAdaptationSetsCallback\n * @function\n * @param {Node} period\n *        Period node from the mpd\n * @param {number} periodIndex\n *        Index of the Period within the mpd\n * @return {RepresentationInformation[]}\n *         List of objects containing Representaion information\n */\n\n/**\n * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n * Representation information objects\n *\n * @param {Object} mpdAttributes\n *        Contains attributes inherited by the mpd\n * @param {string[]} mpdBaseUrls\n *        Contains list of resolved base urls inherited by the mpd\n * @return {toAdaptationSetsCallback}\n *         Callback map function\n */\n\nvar toAdaptationSets = function toAdaptationSets(mpdAttributes, mpdBaseUrls) {\n  return function (period, index) {\n    var periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period, 'BaseURL'));\n    var periodAtt = parseAttributes(period);\n    var parsedPeriodId = parseInt(periodAtt.id, 10); // fallback to mapping index if Period@id is not a number\n\n    var periodIndex = window$1.isNaN(parsedPeriodId) ? index : parsedPeriodId;\n    var periodAttributes = merge(mpdAttributes, {\n      periodIndex: periodIndex\n    });\n    var adaptationSets = findChildren(period, 'AdaptationSet');\n    var periodSegmentInfo = getSegmentInformation(period);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n};\n/**\n * Traverses the mpd xml tree to generate a list of Representation information objects\n * that have inherited attributes from parent nodes\n *\n * @param {Node} mpd\n *        The root node of the mpd\n * @param {Object} options\n *        Available options for inheritAttributes\n * @param {string} options.manifestUri\n *        The uri source of the mpd\n * @param {number} options.NOW\n *        Current time per DASH IOP.  Default is current time in ms since epoch\n * @param {number} options.clientOffset\n *        Client time difference from NOW (in milliseconds)\n * @return {RepresentationInformation[]}\n *         List of objects containing Representation information\n */\n\nvar inheritAttributes = function inheritAttributes(mpd, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$manifestUri = _options.manifestUri,\n      manifestUri = _options$manifestUri === void 0 ? '' : _options$manifestUri,\n      _options$NOW = _options.NOW,\n      NOW = _options$NOW === void 0 ? Date.now() : _options$NOW,\n      _options$clientOffset = _options.clientOffset,\n      clientOffset = _options$clientOffset === void 0 ? 0 : _options$clientOffset;\n  var periods = findChildren(mpd, 'Period');\n\n  if (!periods.length) {\n    throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n  }\n\n  var mpdAttributes = parseAttributes(mpd);\n  var mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL'));\n  mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n  mpdAttributes.NOW = NOW;\n  mpdAttributes.clientOffset = clientOffset;\n  return flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)));\n};\n\nvar stringToMpdXml = function stringToMpdXml(manifestString) {\n  if (manifestString === '') {\n    throw new Error(errors.DASH_EMPTY_MANIFEST);\n  }\n\n  var parser = new window$1.DOMParser();\n  var xml = parser.parseFromString(manifestString, 'application/xml');\n  var mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n\n  if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n    throw new Error(errors.DASH_INVALID_XML);\n  }\n\n  return mpd;\n};\n\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} mpd\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTimingScheme = function parseUTCTimingScheme(mpd) {\n  var UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n\n  if (!UTCTimingNode) {\n    return null;\n  }\n\n  var attributes = parseAttributes(UTCTimingNode);\n\n  switch (attributes.schemeIdUri) {\n    case 'urn:mpeg:dash:utc:http-head:2014':\n    case 'urn:mpeg:dash:utc:http-head:2012':\n      attributes.method = 'HEAD';\n      break;\n\n    case 'urn:mpeg:dash:utc:http-xsdate:2014':\n    case 'urn:mpeg:dash:utc:http-iso:2014':\n    case 'urn:mpeg:dash:utc:http-xsdate:2012':\n    case 'urn:mpeg:dash:utc:http-iso:2012':\n      attributes.method = 'GET';\n      break;\n\n    case 'urn:mpeg:dash:utc:direct:2014':\n    case 'urn:mpeg:dash:utc:direct:2012':\n      attributes.method = 'DIRECT';\n      attributes.value = Date.parse(attributes.value);\n      break;\n\n    case 'urn:mpeg:dash:utc:http-ntp:2014':\n    case 'urn:mpeg:dash:utc:ntp:2014':\n    case 'urn:mpeg:dash:utc:sntp:2014':\n    default:\n      throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n  }\n\n  return attributes;\n};\n\nvar VERSION = version;\nvar parse = function parse(manifestString, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return toM3u8(toPlaylists(inheritAttributes(stringToMpdXml(manifestString), options)), options.sidxMapping);\n};\n/**\n * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n *\n * @param {string} manifestString\n *        XML string of the MPD manifest\n * @return {Object|null}\n *         Attributes of UTCTiming node specified in the manifest. Null if none found\n */\n\nvar parseUTCTiming = function parseUTCTiming(manifestString) {\n  return parseUTCTimingScheme(stringToMpdXml(manifestString));\n};\n\nexport { VERSION, parse, parseUTCTiming };\n","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse the internal MP4 structure into an equivalent javascript\n * object.\n */\n'use strict';\n\nvar\n  inspectMp4,\n  textifyMp4,\n\n  parseType = require('../mp4/probe').parseType,\n  parseMp4Date = function(seconds) {\n    return new Date(seconds * 1000 - 2082844800000);\n  },\n  parseSampleFlags = function(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    };\n  },\n  nalParse = function(avcStream) {\n    var\n      avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n      result = [],\n      i,\n      length;\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4;\n\n      // bail if this doesn't appear to be an H264 stream\n      if (length <= 0) {\n        result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n      case 0x01:\n        result.push('slice_layer_without_partitioning_rbsp');\n        break;\n      case 0x05:\n        result.push('slice_layer_without_partitioning_rbsp_idr');\n        break;\n      case 0x06:\n        result.push('sei_rbsp');\n        break;\n      case 0x07:\n        result.push('seq_parameter_set_rbsp');\n        break;\n      case 0x08:\n        result.push('pic_parameter_set_rbsp');\n        break;\n      case 0x09:\n        result.push('access_unit_delimiter_rbsp');\n        break;\n      default:\n        result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n        break;\n      }\n    }\n    return result;\n  },\n\n  // registry of handlers for individual mp4 box types\n  parse = {\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    avc1: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        dataReferenceIndex: view.getUint16(6),\n        width: view.getUint16(24),\n        height: view.getUint16(26),\n        horizresolution: view.getUint16(28) + (view.getUint16(30) / 16),\n        vertresolution: view.getUint16(32) + (view.getUint16(34) / 16),\n        frameCount: view.getUint16(40),\n        depth: view.getUint16(74),\n        config: inspectMp4(data.subarray(78, data.byteLength))\n      };\n    },\n    avcC: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n        numOfSequenceParameterSets = data[5] & 0x1f,\n        numOfPictureParameterSets,\n        nalSize,\n        offset,\n        i;\n\n      // iterate past any SPSs\n      offset = 6;\n      for (i = 0; i < numOfSequenceParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      // iterate past any PPSs\n      numOfPictureParameterSets = data[offset];\n      offset++;\n      for (i = 0; i < numOfPictureParameterSets; i++) {\n        nalSize = view.getUint16(offset);\n        offset += 2;\n        result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n        offset += nalSize;\n      }\n      return result;\n    },\n    btrt: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        bufferSizeDB: view.getUint32(0),\n        maxBitrate: view.getUint32(4),\n        avgBitrate: view.getUint32(8)\n      };\n    },\n    esds: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        esId: (data[6] << 8) | data[7],\n        streamPriority: data[8] & 0x1f,\n        decoderConfig: {\n          objectProfileIndication: data[11],\n          streamType: (data[12] >>> 2) & 0x3f,\n          bufferSize: (data[13] << 16) | (data[14] << 8) | data[15],\n          maxBitrate: (data[16] << 24) |\n            (data[17] << 16) |\n            (data[18] <<  8) |\n            data[19],\n          avgBitrate: (data[20] << 24) |\n            (data[21] << 16) |\n            (data[22] <<  8) |\n            data[23],\n          decoderConfigDescriptor: {\n            tag: data[24],\n            length: data[25],\n            audioObjectType: (data[26] >>> 3) & 0x1f,\n            samplingFrequencyIndex: ((data[26] & 0x07) << 1) |\n              ((data[27] >>> 7) & 0x01),\n            channelConfiguration: (data[27] >>> 3) & 0x0f\n          }\n        }\n      };\n    },\n    ftyp: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          majorBrand: parseType(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n        i = 8;\n      while (i < data.byteLength) {\n        result.compatibleBrands.push(parseType(data.subarray(i, i + 4)));\n        i += 4;\n      }\n      return result;\n    },\n    dinf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    dref: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        dataReferences: inspectMp4(data.subarray(8))\n      };\n    },\n    hdlr: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType(data.subarray(8, 12)),\n          name: ''\n        },\n        i = 8;\n\n      // parse out the name field\n      for (i = 24; i < data.byteLength; i++) {\n        if (data[i] === 0x00) {\n          // the name field is null-terminated\n          i++;\n          break;\n        }\n        result.name += String.fromCharCode(data[i]);\n      }\n      // decode UTF-8 to javascript's internal representation\n      // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n      result.name = decodeURIComponent(escape(result.name));\n\n      return result;\n    },\n    mdat: function(data) {\n      return {\n        byteLength: data.byteLength,\n        nals: nalParse(data)\n      };\n    },\n    mdhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        language,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n      // each field is the packed difference between its ASCII value and 0x60\n      language = view.getUint16(i);\n      result.language += String.fromCharCode((language >> 10) + 0x60);\n      result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n      result.language += String.fromCharCode((language & 0x1f) + 0x60);\n\n      return result;\n    },\n    mdia: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mfhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sequenceNumber: (data[4] << 24) |\n          (data[5] << 16) |\n          (data[6] << 8) |\n          (data[7])\n      };\n    },\n    minf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    // codingname, not a first-class box type. stsd entries share the\n    // same format as real boxes so the parsing infrastructure can be\n    // shared\n    mp4a: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + (view.getUint16(26) / 65536)\n        };\n\n      // if there are more bytes to process, assume this is an ISO/IEC\n      // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n      if (data.byteLength > 28) {\n        result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n      }\n      return result;\n    },\n    moof: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    moov: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvex: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    mvhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.timescale = view.getUint32(i);\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n\n      // convert fixed-point, base 16 back to a number\n      result.rate = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      i += 2 * 4;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      i += 6 * 4;\n      result.nextTrackId = view.getUint32(i);\n      return result;\n    },\n    pdin: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: view.getUint8(0),\n        flags: new Uint8Array(data.subarray(1, 4)),\n        rate: view.getUint32(4),\n        initialDelay: view.getUint32(8)\n      };\n    },\n    sdtp: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        }, i;\n\n      for (i = 4; i < data.byteLength; i++) {\n        result.samples.push({\n          dependsOn: (data[i] & 0x30) >> 4,\n          isDependedOn: (data[i] & 0x0c) >> 2,\n          hasRedundancy: data[i] & 0x03\n        });\n      }\n      return result;\n    },\n    sidx: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n          result = {\n            version: data[0],\n            flags: new Uint8Array(data.subarray(1, 4)),\n            references: [],\n            referenceId: view.getUint32(4),\n            timescale: view.getUint32(8),\n            earliestPresentationTime: view.getUint32(12),\n            firstOffset: view.getUint32(16)\n          },\n          referenceCount = view.getUint16(22),\n          i;\n\n      for (i = 24; referenceCount; i += 12, referenceCount--) {\n        result.references.push({\n          referenceType: (data[i] & 0x80) >>> 7,\n          referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n          subsegmentDuration: view.getUint32(i + 4),\n          startsWithSap: !!(data[i + 8] & 0x80),\n          sapType: (data[i + 8] & 0x70) >>> 4,\n          sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n        });\n      }\n\n      return result;\n    },\n    smhd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        balance: data[4] + (data[5] / 256)\n      };\n    },\n    stbl: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    stco: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n      for (i = 8; entryCount; i += 4, entryCount--) {\n        result.chunkOffsets.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stsc: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        entryCount = view.getUint32(4),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n        i;\n      for (i = 8; entryCount; i += 12, entryCount--) {\n        result.sampleToChunks.push({\n          firstChunk: view.getUint32(i),\n          samplesPerChunk: view.getUint32(i + 4),\n          sampleDescriptionIndex: view.getUint32(i + 8)\n        });\n      }\n      return result;\n    },\n    stsd: function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        sampleDescriptions: inspectMp4(data.subarray(8))\n      };\n    },\n    stsz: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n        i;\n      for (i = 12; i < data.byteLength; i += 4) {\n        result.entries.push(view.getUint32(i));\n      }\n      return result;\n    },\n    stts: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n        entryCount = view.getUint32(4),\n        i;\n\n      for (i = 8; entryCount; i += 8, entryCount--) {\n        result.timeToSamples.push({\n          sampleCount: view.getUint32(i),\n          sampleDelta: view.getUint32(i + 4)\n        });\n      }\n      return result;\n    },\n    styp: function(data) {\n      return parse.ftyp(data);\n    },\n    tfdt: function(data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime *= Math.pow(2, 32);\n        result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n      }\n      return result;\n    },\n    tfhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof =  result.flags[0] & 0x020000,\n        i;\n\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    },\n    tkhd: function(data) {\n      var\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        i = 4,\n        result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      if (result.version === 1) {\n        i += 4;\n        result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 8;\n        result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 8;\n        result.duration = view.getUint32(i); // truncating top 4 bytes\n      } else {\n        result.creationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.modificationTime = parseMp4Date(view.getUint32(i));\n        i += 4;\n        result.trackId = view.getUint32(i);\n        i += 4;\n        i += 4;\n        result.duration = view.getUint32(i);\n      }\n      i += 4;\n      i += 2 * 4;\n      result.layer = view.getUint16(i);\n      i += 2;\n      result.alternateGroup = view.getUint16(i);\n      i += 2;\n      // convert fixed-point, base 16 back to a number\n      result.volume = view.getUint8(i) + (view.getUint8(i + 1) / 8);\n      i += 2;\n      i += 2;\n      result.matrix = new Uint32Array(data.subarray(i, i + (9 * 4)));\n      i += 9 * 4;\n      result.width = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      i += 4;\n      result.height = view.getUint16(i) + (view.getUint16(i + 2) / 16);\n      return result;\n    },\n    traf: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trak: function(data) {\n      return {\n        boxes: inspectMp4(data)\n      };\n    },\n    trex: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        trackId: view.getUint32(4),\n        defaultSampleDescriptionIndex: view.getUint32(8),\n        defaultSampleDuration: view.getUint32(12),\n        defaultSampleSize: view.getUint32(16),\n        sampleDependsOn: data[20] & 0x03,\n        sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n        sampleHasRedundancy: (data[21] & 0x30) >> 4,\n        samplePaddingValue: (data[21] & 0x0e) >> 1,\n        sampleIsDifferenceSample: !!(data[21] & 0x01),\n        sampleDegradationPriority: view.getUint16(22)\n      };\n    },\n    trun: function(data) {\n      var\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01, // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04, // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01, // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02, // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04, // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08, // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      }\n\n      // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          // Note: this should be a signed int if version is 1\n          sample.compositionTimeOffset = view.getUint32(offset);\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    },\n    'url ': function(data) {\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n    },\n    vmhd: function(data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n      return {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        graphicsmode: view.getUint16(4),\n        opcolor: new Uint16Array([view.getUint16(6),\n                                  view.getUint16(8),\n                                  view.getUint16(10)])\n      };\n    }\n  };\n\n\n/**\n * Return a javascript array of box objects parsed from an ISO base\n * media file.\n * @param data {Uint8Array} the binary data of the media to be inspected\n * @return {array} a javascript array of potentially nested box objects\n */\ninspectMp4 = function(data) {\n  var\n    i = 0,\n    result = [],\n    view,\n    size,\n    type,\n    end,\n    box;\n\n  // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n  var ab = new ArrayBuffer(data.length);\n  var v = new Uint8Array(ab);\n  for (var z = 0; z < data.length; ++z) {\n      v[z] = data[z];\n  }\n  view = new DataView(ab);\n\n  while (i < data.byteLength) {\n    // parse box data\n    size = view.getUint32(i);\n    type =  parseType(data.subarray(i + 4, i + 8));\n    end = size > 1 ? i + size : data.byteLength;\n\n    // parse type-specific data\n    box = (parse[type] || function(data) {\n      return {\n        data: data\n      };\n    })(data.subarray(i + 8, end));\n    box.size = size;\n    box.type = type;\n\n    // store this box and move to the next\n    result.push(box);\n    i = end;\n  }\n  return result;\n};\n\n/**\n * Returns a textual representation of the javascript represtentation\n * of an MP4 file. You can use it as an alternative to\n * JSON.stringify() to compare inspected MP4s.\n * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n * file\n * @param depth {number} (optional) the number of ancestor boxes of\n * the elements of inspectedMp4. Assumed to be zero if unspecified.\n * @return {string} a text representation of the parsed MP4\n */\ntextifyMp4 = function(inspectedMp4, depth) {\n  var indent;\n  depth = depth || 0;\n  indent = new Array(depth * 2 + 1).join(' ');\n\n  // iterate over all the boxes\n  return inspectedMp4.map(function(box, index) {\n\n    // list the box type first at the current indentation level\n    return indent + box.type + '\\n' +\n\n      // the type is already included and handle child boxes separately\n      Object.keys(box).filter(function(key) {\n        return key !== 'type' && key !== 'boxes';\n\n      // output all the box properties\n      }).map(function(key) {\n        var prefix = indent + '  ' + key + ': ',\n            value = box[key];\n\n        // print out raw bytes as hexademical\n        if (value instanceof Uint8Array || value instanceof Uint32Array) {\n          var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength))\n              .map(function(byte) {\n                return ' ' + ('00' + byte.toString(16)).slice(-2);\n              }).join('').match(/.{1,24}/g);\n          if (!bytes) {\n            return prefix + '<>';\n          }\n          if (bytes.length === 1) {\n            return prefix + '<' + bytes.join('').slice(1) + '>';\n          }\n          return prefix + '<\\n' + bytes.map(function(line) {\n            return indent + '  ' + line;\n          }).join('\\n') + '\\n' + indent + '  >';\n        }\n\n        // stringify generic objects\n        return prefix +\n            JSON.stringify(value, null, 2)\n              .split('\\n').map(function(line, index) {\n                if (index === 0) {\n                  return line;\n                }\n                return indent + '  ' + line;\n              }).join('\\n');\n      }).join('\\n') +\n\n    // recursively textify the child boxes\n    (box.boxes ? '\\n' + textifyMp4(box.boxes, depth + 1) : '');\n  }).join('\\n');\n};\n\nmodule.exports = {\n  inspect: inspectMp4,\n  textify: textifyMp4,\n  parseTfdt: parse.tfdt,\n  parseHdlr: parse.hdlr,\n  parseTfhd: parse.tfhd,\n  parseTrun: parse.trun,\n  parseSidx: parse.sidx\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * A stream-based aac to mp4 converter. This utility can be used to\n * deliver mp4s to a SourceBuffer on platforms that support native\n * Media Source Extensions.\n */\n'use strict';\nvar Stream = require('../utils/stream.js');\nvar aacUtils = require('./utils');\n\n// Constants\nvar AacStream;\n\n/**\n * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n */\n\nAacStream = function() {\n  var\n    everything = new Uint8Array(),\n    timeStamp = 0;\n\n  AacStream.prototype.init.call(this);\n\n  this.setTimestamp = function(timestamp) {\n    timeStamp = timestamp;\n  };\n\n  this.push = function(bytes) {\n    var\n      frameSize = 0,\n      byteIndex = 0,\n      bytesLeft,\n      chunk,\n      packet,\n      tempLength;\n\n    // If there are bytes remaining from the last segment, prepend them to the\n    // bytes that were pushed in\n    if (everything.length) {\n      tempLength = everything.length;\n      everything = new Uint8Array(bytes.byteLength + tempLength);\n      everything.set(everything.subarray(0, tempLength));\n      everything.set(bytes, tempLength);\n    } else {\n      everything = bytes;\n    }\n\n    while (everything.length - byteIndex >= 3) {\n      if ((everything[byteIndex] === 'I'.charCodeAt(0)) &&\n          (everything[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n          (everything[byteIndex + 2] === '3'.charCodeAt(0))) {\n\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (everything.length - byteIndex < 10) {\n          break;\n        }\n\n        // check framesize\n        frameSize = aacUtils.parseId3TagSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        // Add to byteIndex to support multiple ID3 tags in sequence\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n        chunk = {\n          type: 'timed-metadata',\n          data: everything.subarray(byteIndex, byteIndex + frameSize)\n        };\n        this.trigger('data', chunk);\n        byteIndex += frameSize;\n        continue;\n      } else if (((everything[byteIndex] & 0xff) === 0xff) &&\n                 ((everything[byteIndex + 1] & 0xf0) === 0xf0)) {\n\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (everything.length - byteIndex < 7) {\n          break;\n        }\n\n        frameSize = aacUtils.parseAdtsSize(everything, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (byteIndex + frameSize > everything.length) {\n          break;\n        }\n\n        packet = {\n          type: 'audio',\n          data: everything.subarray(byteIndex, byteIndex + frameSize),\n          pts: timeStamp,\n          dts: timeStamp\n        };\n        this.trigger('data', packet);\n        byteIndex += frameSize;\n        continue;\n      }\n      byteIndex++;\n    }\n    bytesLeft = everything.length - byteIndex;\n\n    if (bytesLeft > 0) {\n      everything = everything.subarray(byteIndex);\n    } else {\n      everything = new Uint8Array();\n    }\n  };\n};\n\nAacStream.prototype = new Stream();\n\nmodule.exports = AacStream;\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band CEA-708 captions out of FMP4 segments.\n * @see https://en.wikipedia.org/wiki/CEA-708\n */\n'use strict';\n\nvar discardEmulationPreventionBytes = require('../tools/caption-packet-parser').discardEmulationPreventionBytes;\nvar CaptionStream = require('../m2ts/caption-stream').CaptionStream;\nvar probe = require('./probe');\nvar inspect = require('../tools/mp4-inspector');\n\n/**\n  * Maps an offset in the mdat to a sample based on the the size of the samples.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Number} offset - The offset into the mdat\n  * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n  * @return {?Object} The matching sample, or null if no match was found.\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar mapToSample = function(offset, samples) {\n  var approximateOffset = offset;\n\n  for (var i = 0; i < samples.length; i++) {\n    var sample = samples[i];\n\n    if (approximateOffset < sample.size) {\n      return sample;\n    }\n\n    approximateOffset -= sample.size;\n  }\n\n  return null;\n};\n\n/**\n  * Finds SEI nal units contained in a Media Data Box.\n  * Assumes that `parseSamples` has been called first.\n  *\n  * @param {Uint8Array} avcStream - The bytes of the mdat\n  * @param {Object[]} samples - The samples parsed out by `parseSamples`\n  * @param {Number} trackId - The trackId of this video track\n  * @return {Object[]} seiNals - the parsed SEI NALUs found.\n  *   The contents of the seiNal should match what is expected by\n  *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n  *\n  * @see ISO-BMFF-12/2015, Section 8.1.1\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n **/\nvar findSeiNals = function(avcStream, samples, trackId) {\n  var\n    avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n    result = [],\n    seiNal,\n    i,\n    length,\n    lastMatchedSample;\n\n  for (i = 0; i + 4 < avcStream.length; i += length) {\n    length = avcView.getUint32(i);\n    i += 4;\n\n    // Bail if this doesn't appear to be an H264 stream\n    if (length <= 0) {\n      continue;\n    }\n\n    switch (avcStream[i] & 0x1F) {\n    case 0x06:\n      var data = avcStream.subarray(i + 1, i + 1 + length);\n      var matchingSample = mapToSample(i, samples);\n\n      seiNal = {\n        nalUnitType: 'sei_rbsp',\n        size: length,\n        data: data,\n        escapedRBSP: discardEmulationPreventionBytes(data),\n        trackId: trackId\n      };\n\n      if (matchingSample) {\n        seiNal.pts = matchingSample.pts;\n        seiNal.dts = matchingSample.dts;\n        lastMatchedSample = matchingSample;\n      } else {\n        // If a matching sample cannot be found, use the last\n        // sample's values as they should be as close as possible\n        seiNal.pts = lastMatchedSample.pts;\n        seiNal.dts = lastMatchedSample.dts;\n      }\n\n      result.push(seiNal);\n      break;\n    default:\n      break;\n    }\n  }\n\n  return result;\n};\n\n/**\n  * Parses sample information out of Track Run Boxes and calculates\n  * the absolute presentation and decode timestamps of each sample.\n  *\n  * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n  * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n      @see ISO-BMFF-12/2015, Section 8.8.12\n  * @param {Object} tfhd - The parsed Track Fragment Header\n  *   @see inspect.parseTfhd\n  * @return {Object[]} the parsed samples\n  *\n  * @see ISO-BMFF-12/2015, Section 8.8.8\n **/\nvar parseSamples = function(truns, baseMediaDecodeTime, tfhd) {\n  var currentDts = baseMediaDecodeTime;\n  var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n  var defaultSampleSize = tfhd.defaultSampleSize || 0;\n  var trackId = tfhd.trackId;\n  var allSamples = [];\n\n  truns.forEach(function(trun) {\n    // Note: We currently do not parse the sample table as well\n    // as the trun. It's possible some sources will require this.\n    // moov > trak > mdia > minf > stbl\n    var trackRun = inspect.parseTrun(trun);\n    var samples = trackRun.samples;\n\n    samples.forEach(function(sample) {\n      if (sample.duration === undefined) {\n        sample.duration = defaultSampleDuration;\n      }\n      if (sample.size === undefined) {\n        sample.size = defaultSampleSize;\n      }\n      sample.trackId = trackId;\n      sample.dts = currentDts;\n      if (sample.compositionTimeOffset === undefined) {\n        sample.compositionTimeOffset = 0;\n      }\n      sample.pts = currentDts + sample.compositionTimeOffset;\n\n      currentDts += sample.duration;\n    });\n\n    allSamples = allSamples.concat(samples);\n  });\n\n  return allSamples;\n};\n\n/**\n  * Parses out caption nals from an FMP4 segment's video tracks.\n  *\n  * @param {Uint8Array} segment - The bytes of a single segment\n  * @param {Number} videoTrackId - The trackId of a video track in the segment\n  * @return {Object.<Number, Object[]>} A mapping of video trackId to\n  *   a list of seiNals found in that track\n **/\nvar parseCaptionNals = function(segment, videoTrackId) {\n  // To get the samples\n  var trafs = probe.findBox(segment, ['moof', 'traf']);\n  // To get SEI NAL units\n  var mdats = probe.findBox(segment, ['mdat']);\n  var captionNals = {};\n  var mdatTrafPairs = [];\n\n  // Pair up each traf with a mdat as moofs and mdats are in pairs\n  mdats.forEach(function(mdat, index) {\n    var matchingTraf = trafs[index];\n    mdatTrafPairs.push({\n      mdat: mdat,\n      traf: matchingTraf\n    });\n  });\n\n  mdatTrafPairs.forEach(function(pair) {\n    var mdat = pair.mdat;\n    var traf = pair.traf;\n    var tfhd = probe.findBox(traf, ['tfhd']);\n    // Exactly 1 tfhd per traf\n    var headerInfo = inspect.parseTfhd(tfhd[0]);\n    var trackId = headerInfo.trackId;\n    var tfdt = probe.findBox(traf, ['tfdt']);\n    // Either 0 or 1 tfdt per traf\n    var baseMediaDecodeTime = (tfdt.length > 0) ? inspect.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n    var truns = probe.findBox(traf, ['trun']);\n    var samples;\n    var seiNals;\n\n    // Only parse video data for the chosen video track\n    if (videoTrackId === trackId && truns.length > 0) {\n      samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n\n      seiNals = findSeiNals(mdat, samples, trackId);\n\n      if (!captionNals[trackId]) {\n        captionNals[trackId] = [];\n      }\n\n      captionNals[trackId] = captionNals[trackId].concat(seiNals);\n    }\n  });\n\n  return captionNals;\n};\n\n/**\n  * Parses out inband captions from an MP4 container and returns\n  * caption objects that can be used by WebVTT and the TextTrack API.\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n  * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n  *\n  * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n  * @param {Number} trackId - The id of the video track to parse\n  * @param {Number} timescale - The timescale for the video track from the init segment\n  *\n  * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n  * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n  * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n  * @return {String} parsedCaptions[].text - The visible content of the caption\n **/\nvar parseEmbeddedCaptions = function(segment, trackId, timescale) {\n  var seiNals;\n\n  if (!trackId) {\n    return null;\n  }\n\n  seiNals = parseCaptionNals(segment, trackId);\n\n  return {\n    seiNals: seiNals[trackId],\n    timescale: timescale\n  };\n};\n\n/**\n  * Converts SEI NALUs into captions that can be used by video.js\n **/\nvar CaptionParser = function() {\n  var isInitialized = false;\n  var captionStream;\n\n  // Stores segments seen before trackId and timescale are set\n  var segmentCache;\n  // Stores video track ID of the track being parsed\n  var trackId;\n  // Stores the timescale of the track being parsed\n  var timescale;\n  // Stores captions parsed so far\n  var parsedCaptions;\n\n  /**\n    * A method to indicate whether a CaptionParser has been initalized\n    * @returns {Boolean}\n   **/\n  this.isInitialized = function() {\n    return isInitialized;\n  };\n\n  /**\n    * Initializes the underlying CaptionStream, SEI NAL parsing\n    * and management, and caption collection\n   **/\n  this.init = function() {\n    captionStream = new CaptionStream();\n    isInitialized = true;\n\n    // Collect dispatched captions\n    captionStream.on('data', function(event) {\n      // Convert to seconds in the source's timescale\n      event.startTime = event.startPts / timescale;\n      event.endTime = event.endPts / timescale;\n\n      parsedCaptions.captions.push(event);\n      parsedCaptions.captionStreams[event.stream] = true;\n    });\n  };\n\n  /**\n    * Determines if a new video track will be selected\n    * or if the timescale changed\n    * @return {Boolean}\n   **/\n  this.isNewInit = function(videoTrackIds, timescales) {\n    if ((videoTrackIds && videoTrackIds.length === 0) ||\n        (timescales && typeof timescales === 'object' &&\n          Object.keys(timescales).length === 0)) {\n      return false;\n    }\n\n    return trackId !== videoTrackIds[0] ||\n      timescale !== timescales[trackId];\n  };\n\n  /**\n    * Parses out SEI captions and interacts with underlying\n    * CaptionStream to return dispatched captions\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n    * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n    * @see parseEmbeddedCaptions\n    * @see m2ts/caption-stream.js\n   **/\n  this.parse = function(segment, videoTrackIds, timescales) {\n    var parsedData;\n\n    if (!this.isInitialized()) {\n      return null;\n\n    // This is not likely to be a video segment\n    } else if (!videoTrackIds || !timescales) {\n      return null;\n\n    } else if (this.isNewInit(videoTrackIds, timescales)) {\n      // Use the first video track only as there is no\n      // mechanism to switch to other video tracks\n      trackId = videoTrackIds[0];\n      timescale = timescales[trackId];\n\n    // If an init segment has not been seen yet, hold onto segment\n    // data until we have one\n    } else if (!trackId || !timescale) {\n      segmentCache.push(segment);\n      return null;\n    }\n\n    // Now that a timescale and trackId is set, parse cached segments\n    while (segmentCache.length > 0) {\n      var cachedSegment = segmentCache.shift();\n\n      this.parse(cachedSegment, videoTrackIds, timescales);\n    }\n\n    parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n    if (parsedData === null || !parsedData.seiNals) {\n      return null;\n    }\n\n    this.pushNals(parsedData.seiNals);\n    // Force the parsed captions to be dispatched\n    this.flushStream();\n\n    return parsedCaptions;\n  };\n\n  /**\n    * Pushes SEI NALUs onto CaptionStream\n    * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n    * Assumes that `parseCaptionNals` has been called first\n    * @see m2ts/caption-stream.js\n    **/\n  this.pushNals = function(nals) {\n    if (!this.isInitialized() || !nals || nals.length === 0) {\n      return null;\n    }\n\n    nals.forEach(function(nal) {\n      captionStream.push(nal);\n    });\n  };\n\n  /**\n    * Flushes underlying CaptionStream to dispatch processed, displayable captions\n    * @see m2ts/caption-stream.js\n   **/\n  this.flushStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.flush();\n  };\n\n  /**\n    * Reset caption buckets for new data\n   **/\n  this.clearParsedCaptions = function() {\n    parsedCaptions.captions = [];\n    parsedCaptions.captionStreams = {};\n  };\n\n  /**\n    * Resets underlying CaptionStream\n    * @see m2ts/caption-stream.js\n   **/\n  this.resetCaptionStream = function() {\n    if (!this.isInitialized()) {\n      return null;\n    }\n\n    captionStream.reset();\n  };\n\n  /**\n    * Convenience method to clear all captions flushed from the\n    * CaptionStream and still being parsed\n    * @see m2ts/caption-stream.js\n   **/\n  this.clearAllCaptions = function() {\n    this.clearParsedCaptions();\n    this.resetCaptionStream();\n  };\n\n  /**\n    * Reset caption parser\n   **/\n  this.reset = function() {\n    segmentCache = [];\n    trackId = null;\n    timescale = null;\n\n    if (!parsedCaptions) {\n      parsedCaptions = {\n        captions: [],\n        // CC1, CC2, CC3, CC4\n        captionStreams: {}\n      };\n    } else {\n      this.clearParsedCaptions();\n    }\n\n    this.resetCaptionStream();\n  };\n\n  this.reset();\n};\n\nmodule.exports = CaptionParser;\n","'use strict';\r\n\r\n// Last time updated: 2019-06-21 4:32:42 AM UTC\r\n\r\n// ________________\r\n// RecordRTC v5.5.8\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n// ____________\r\n// RecordRTC.js\r\n\r\n/**\r\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \r\n * @summary Record audio, video or screen inside the browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTC\r\n * @class\r\n * @example\r\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\r\n *     type: 'video', // audio or video or gif or canvas\r\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\r\n * });\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction RecordRTC(mediaStream, config) {\r\n    if (!mediaStream) {\r\n        throw 'First parameter is required.';\r\n    }\r\n\r\n    config = config || {\r\n        type: 'video'\r\n    };\r\n\r\n    config = new RecordRTCConfiguration(mediaStream, config);\r\n\r\n    // a reference to user's recordRTC object\r\n    var self = this;\r\n\r\n    function startRecording(config2) {\r\n        if (!config.disableLogs) {\r\n            console.log('RecordRTC version: ', self.version);\r\n        }\r\n\r\n        if (!!config2) {\r\n            // allow users to set options using startRecording method\r\n            // config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\r\n            config = new RecordRTCConfiguration(mediaStream, config2);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('started recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder.record();\r\n\r\n            setState('recording');\r\n\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n            return self;\r\n        }\r\n\r\n        initRecorder(function() {\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    function initRecorder(initCallback) {\r\n        if (initCallback) {\r\n            config.initCallback = function() {\r\n                initCallback();\r\n                initCallback = config.initCallback = null; // recorder.initRecorder should be call-backed once.\r\n            };\r\n        }\r\n\r\n        var Recorder = new GetRecorderType(mediaStream, config);\r\n\r\n        mediaRecorder = new Recorder(mediaStream, config);\r\n        mediaRecorder.record();\r\n\r\n        setState('recording');\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\r\n        }\r\n    }\r\n\r\n    function stopRecording(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'paused') {\r\n            self.resumeRecording();\r\n\r\n            setTimeout(function() {\r\n                stopRecording(callback);\r\n            }, 1);\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording' && !config.disableLogs) {\r\n            console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Stopped recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (config.type !== 'gif') {\r\n            mediaRecorder.stop(_callback);\r\n        } else {\r\n            mediaRecorder.stop();\r\n            _callback();\r\n        }\r\n\r\n        setState('stopped');\r\n\r\n        function _callback(__blob) {\r\n            if (!mediaRecorder) {\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, '');\r\n                } else {\r\n                    callback('');\r\n                }\r\n                return;\r\n            }\r\n\r\n            Object.keys(mediaRecorder).forEach(function(key) {\r\n                if (typeof mediaRecorder[key] === 'function') {\r\n                    return;\r\n                }\r\n\r\n                self[key] = mediaRecorder[key];\r\n            });\r\n\r\n            var blob = mediaRecorder.blob;\r\n\r\n            if (!blob) {\r\n                if (__blob) {\r\n                    mediaRecorder.blob = blob = __blob;\r\n                } else {\r\n                    throw 'Recording failed.';\r\n                }\r\n            }\r\n\r\n            if (blob && !config.disableLogs) {\r\n                console.log(blob.type, '->', bytesToSize(blob.size));\r\n            }\r\n\r\n            if (callback) {\r\n                var url;\r\n\r\n                try {\r\n                    url = URL.createObjectURL(blob);\r\n                } catch (e) {}\r\n\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, url);\r\n                } else {\r\n                    callback(url);\r\n                }\r\n            }\r\n\r\n            if (!config.autoWriteToDisk) {\r\n                return;\r\n            }\r\n\r\n            getDataURL(function(dataURL) {\r\n                var parameter = {};\r\n                parameter[config.type + 'Blob'] = dataURL;\r\n                DiskStorage.Store(parameter);\r\n            });\r\n        }\r\n    }\r\n\r\n    function pauseRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to pause the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('paused');\r\n\r\n        mediaRecorder.pause();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Paused recording.');\r\n        }\r\n    }\r\n\r\n    function resumeRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'paused') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to resume the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('recording');\r\n\r\n        // not all libs have this method yet\r\n        mediaRecorder.resume();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Resumed recording.');\r\n        }\r\n    }\r\n\r\n    function readFile(_blob) {\r\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n    }\r\n\r\n    function getDataURL(callback, _mediaRecorder) {\r\n        if (!callback) {\r\n            throw 'Pass a callback function over getDataURL.';\r\n        }\r\n\r\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\r\n\r\n        if (!blob) {\r\n            if (!config.disableLogs) {\r\n                console.warn('Blob encoder did not finish its job yet.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                getDataURL(callback, _mediaRecorder);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\r\n            var webWorker = processInWebWorker(readFile);\r\n\r\n            webWorker.onmessage = function(event) {\r\n                callback(event.data);\r\n            };\r\n\r\n            webWorker.postMessage(blob);\r\n        } else {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onload = function(event) {\r\n                callback(event.target.result);\r\n            };\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            try {\r\n                var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                    'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n                ], {\r\n                    type: 'application/javascript'\r\n                }));\r\n\r\n                var worker = new Worker(blob);\r\n                URL.revokeObjectURL(blob);\r\n                return worker;\r\n            } catch (e) {}\r\n        }\r\n    }\r\n\r\n    function handleRecordingDuration(counter) {\r\n        counter = counter || 0;\r\n\r\n        if (self.state === 'paused') {\r\n            setTimeout(function() {\r\n                handleRecordingDuration(counter);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'stopped') {\r\n            return;\r\n        }\r\n\r\n        if (counter >= self.recordingDuration) {\r\n            stopRecording(self.onRecordingStopped);\r\n            return;\r\n        }\r\n\r\n        counter += 1000; // 1-second\r\n\r\n        setTimeout(function() {\r\n            handleRecordingDuration(counter);\r\n        }, 1000);\r\n    }\r\n\r\n    function setState(state) {\r\n        if (!self) {\r\n            return;\r\n        }\r\n\r\n        self.state = state;\r\n\r\n        if (typeof self.onStateChanged.call === 'function') {\r\n            self.onStateChanged.call(self, state);\r\n        } else {\r\n            self.onStateChanged(state);\r\n        }\r\n    }\r\n\r\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + ' recorder.';\r\n\r\n    function warningLog() {\r\n        if (config.disableLogs === true) {\r\n            return;\r\n        }\r\n\r\n        console.warn(WARNING);\r\n    }\r\n\r\n    var mediaRecorder;\r\n\r\n    var returnObject = {\r\n        /**\r\n         * This method starts the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var recorder = RecordRTC(mediaStream, {\r\n         *     type: 'video'\r\n         * });\r\n         * recorder.startRecording();\r\n         */\r\n        startRecording: startRecording,\r\n\r\n        /**\r\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     // use either \"this\" or \"recorder\" object; both are identical\r\n         *     video.src = this.toURL();\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        stopRecording: stopRecording,\r\n\r\n        /**\r\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Firefox is unable to pause the recording. Fix it.\r\n         * @example\r\n         * recorder.pauseRecording();  // pause the recording\r\n         * recorder.resumeRecording(); // resume again\r\n         */\r\n        pauseRecording: pauseRecording,\r\n\r\n        /**\r\n         * This method resumes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.pauseRecording();  // first of all, pause the recording\r\n         * recorder.resumeRecording(); // now resume it\r\n         */\r\n        resumeRecording: resumeRecording,\r\n\r\n        /**\r\n         * This method initializes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * recorder.initRecorder();\r\n         */\r\n        initRecorder: initRecorder,\r\n\r\n        /**\r\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var fiveMinutes = 5 * 1000 * 60;\r\n         * recorder.setRecordingDuration(fiveMinutes, function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         * \r\n         * // or otherwise\r\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         */\r\n        setRecordingDuration: function(recordingDuration, callback) {\r\n            if (typeof recordingDuration === 'undefined') {\r\n                throw 'recordingDuration is required.';\r\n            }\r\n\r\n            if (typeof recordingDuration !== 'number') {\r\n                throw 'recordingDuration must be a number.';\r\n            }\r\n\r\n            self.recordingDuration = recordingDuration;\r\n            self.onRecordingStopped = callback || function() {};\r\n\r\n            return {\r\n                onRecordingStopped: function(callback) {\r\n                    self.onRecordingStopped = callback;\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * This method can be used to clear/reset all the recorded data.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\r\n         * @example\r\n         * recorder.clearRecordedData();\r\n         */\r\n        clearRecordedData: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            mediaRecorder.clearRecordedData();\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('Cleared old recorded data.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.getBlob();\r\n         *\r\n         *     var file = new File([blob], 'filename.webm', {\r\n         *         type: 'video/webm'\r\n         *     });\r\n         *\r\n         *     var formData = new FormData();\r\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\r\n         *     uploadToServer(formData);\r\n         * });\r\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\r\n         */\r\n        getBlob: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return mediaRecorder.blob;\r\n        },\r\n\r\n        /**\r\n         * Get data-URI instead of Blob.\r\n         * @param {function} callback - Callback to get the Data-URI.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     recorder.getDataURL(function(dataURI) {\r\n         *         video.src = dataURI;\r\n         *     });\r\n         * });\r\n         */\r\n        getDataURL: getDataURL,\r\n\r\n        /**\r\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     video.src = this.toURL();\r\n         * });\r\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\r\n         */\r\n        toURL: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return URL.createObjectURL(mediaRecorder.blob);\r\n        },\r\n\r\n        /**\r\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var internalRecorder = recorder.getInternalRecorder();\r\n         * if(internalRecorder instanceof MultiStreamRecorder) {\r\n         *     internalRecorder.addStreams([newAudioStream]);\r\n         *     internalRecorder.resetVideoStreams([screenStream]);\r\n         * }\r\n         * @returns {Object} Returns internal recording object.\r\n         */\r\n        getInternalRecorder: function() {\r\n            return mediaRecorder;\r\n        },\r\n\r\n        /**\r\n         * Invoke save-as dialog to save the recorded blob into your disk.\r\n         * @param {string} fileName - Set your own file name.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     this.save('file-name');\r\n         *\r\n         *     // or manually:\r\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\r\n         * });\r\n         */\r\n        save: function(fileName) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\r\n        },\r\n\r\n        /**\r\n         * This method gets a blob from indexed-DB storage.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.getFromDisk(function(dataURL) {\r\n         *     video.src = dataURL;\r\n         * });\r\n         */\r\n        getFromDisk: function(callback) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            RecordRTC.getFromDisk(config.type, callback);\r\n        },\r\n\r\n        /**\r\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\r\n         * @type {Array.<Array>}\r\n         * @param {Array} arrayOfWebPImages - Array of webp images.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * var arrayOfWebPImages = [];\r\n         * arrayOfWebPImages.push({\r\n         *     duration: index,\r\n         *     image: 'data:image/webp;base64,...'\r\n         * });\r\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\r\n         */\r\n        setAdvertisementArray: function(arrayOfWebPImages) {\r\n            config.advertisement = [];\r\n\r\n            var length = arrayOfWebPImages.length;\r\n            for (var i = 0; i < length; i++) {\r\n                config.advertisement.push({\r\n                    duration: i,\r\n                    image: arrayOfWebPImages[i]\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\r\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.blob;\r\n         *\r\n         *     // below one is recommended\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        blob: null,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\r\n         * });\r\n         */\r\n        bufferSize: 0,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\r\n         * });\r\n         */\r\n        sampleRate: 0,\r\n\r\n        /**\r\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\r\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var arrayBuffer = this.buffer;\r\n         *     alert(arrayBuffer.byteLength);\r\n         * });\r\n         */\r\n        buffer: null,\r\n\r\n        /**\r\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.reset();\r\n         * recorder.startRecording();\r\n         */\r\n        reset: function() {\r\n            if (self.state === 'recording' && !config.disableLogs) {\r\n                console.warn('Stop an active recorder.');\r\n            }\r\n\r\n            if (mediaRecorder && typeof mediaRecorder.clearRecordedData === 'function') {\r\n                mediaRecorder.clearRecordedData();\r\n            }\r\n            mediaRecorder = null;\r\n            setState('inactive');\r\n            self.blob = null;\r\n        },\r\n\r\n        /**\r\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.onStateChanged = function(state) {\r\n         *     console.log('Recorder state: ', state);\r\n         * };\r\n         */\r\n        onStateChanged: function(state) {\r\n            if (!config.disableLogs) {\r\n                console.log('Recorder state changed:', state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * A recorder can have inactive, recording, paused or stopped states.\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * // this looper function will keep you updated about the recorder's states.\r\n         * (function looper() {\r\n         *     document.querySelector('h1').innerHTML = 'Recorder\\'s state is: ' + recorder.state;\r\n         *     if(recorder.state === 'stopped') return; // ignore+stop\r\n         *     setTimeout(looper, 1000); // update after every 3-seconds\r\n         * })();\r\n         * recorder.startRecording();\r\n         */\r\n        state: 'inactive',\r\n\r\n        /**\r\n         * Get recorder's readonly state.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * var state = recorder.getState();\r\n         * @returns {String} Returns recording state.\r\n         */\r\n        getState: function() {\r\n            return self.state;\r\n        },\r\n\r\n        /**\r\n         * Destroy RecordRTC instance. Clear all recorders and objects.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * recorder.destroy();\r\n         */\r\n        destroy: function() {\r\n            var disableLogsCache = config.disableLogs;\r\n\r\n            config = {\r\n                disableLogs: true\r\n            };\r\n            self.reset();\r\n            setState('destroyed');\r\n            returnObject = self = null;\r\n\r\n            if (Storage.AudioContextConstructor) {\r\n                Storage.AudioContextConstructor.close();\r\n                Storage.AudioContextConstructor = null;\r\n            }\r\n\r\n            config.disableLogs = disableLogsCache;\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('RecordRTC is destroyed.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * RecordRTC version number\r\n         * @property {String} version - Release version number.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * alert(recorder.version);\r\n         */\r\n        version: '5.5.8'\r\n    };\r\n\r\n    if (!this) {\r\n        self = returnObject;\r\n        return returnObject;\r\n    }\r\n\r\n    // if someone wants to use RecordRTC with the \"new\" keyword.\r\n    for (var prop in returnObject) {\r\n        this[prop] = returnObject[prop];\r\n    }\r\n\r\n    self = this;\r\n\r\n    return returnObject;\r\n}\r\n\r\nRecordRTC.version = '5.5.8';\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = RecordRTC;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RecordRTC', [], function() {\r\n        return RecordRTC;\r\n    });\r\n}\n\r\nRecordRTC.getFromDisk = function(type, callback) {\r\n    if (!callback) {\r\n        throw 'callback is mandatory.';\r\n    }\r\n\r\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\r\n    DiskStorage.Fetch(function(dataURL, _type) {\r\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\r\n            callback(dataURL);\r\n        }\r\n\r\n        if (type === 'all' && callback) {\r\n            callback(dataURL, _type.replace('Blob', ''));\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof RecordRTC\r\n * @example\r\n * RecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nRecordRTC.writeToDisk = function(options) {\r\n    console.log('Writing recorded blob(s) to disk!');\r\n    options = options || {};\r\n    if (options.audio && options.video && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                options.gif.getDataURL(function(gifDataURL) {\r\n                    DiskStorage.Store({\r\n                        audioBlob: audioDataURL,\r\n                        videoBlob: videoDataURL,\r\n                        gifBlob: gifDataURL\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.video) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    videoBlob: videoDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.video && options.gif) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    videoBlob: videoDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            DiskStorage.Store({\r\n                audioBlob: audioDataURL\r\n            });\r\n        });\r\n    } else if (options.video) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            DiskStorage.Store({\r\n                videoBlob: videoDataURL\r\n            });\r\n        });\r\n    } else if (options.gif) {\r\n        options.gif.getDataURL(function(gifDataURL) {\r\n            DiskStorage.Store({\r\n                gifBlob: gifDataURL\r\n            });\r\n        });\r\n    }\r\n};\n\r\n// __________________________\r\n// RecordRTC-Configuration.js\r\n\r\n/**\r\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCConfiguration\r\n * @class\r\n * @example\r\n * var options = RecordRTCConfiguration(mediaStream, options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\r\n */\r\n\r\nfunction RecordRTCConfiguration(mediaStream, config) {\r\n    if (!config.recorderType && !config.type) {\r\n        if (!!config.audio && !!config.video) {\r\n            config.type = 'video';\r\n        } else if (!!config.audio && !config.video) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    if (config.recorderType && !config.type) {\r\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder || (typeof WebAssemblyRecorder !== 'undefined' && config.recorderType === WebAssemblyRecorder)) {\r\n            config.type = 'video';\r\n        } else if (config.recorderType === GifRecorder) {\r\n            config.type = 'gif';\r\n        } else if (config.recorderType === StereoAudioRecorder) {\r\n            config.type = 'audio';\r\n        } else if (config.recorderType === MediaStreamRecorder) {\r\n            if (getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (!getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (getTracks(mediaStream, 'audio').length && !getTracks(mediaStream, 'video').length) {\r\n                config.type = 'audio';\r\n            } else {\r\n                // config.type = 'UnKnown';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (!config.mimeType) {\r\n            config.mimeType = 'video/webm';\r\n        }\r\n\r\n        if (!config.type) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n\r\n        if (!config.bitsPerSecond) {\r\n            // config.bitsPerSecond = 128000;\r\n        }\r\n    }\r\n\r\n    // consider default type=audio\r\n    if (!config.type) {\r\n        if (config.mimeType) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n        if (!config.type) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    return config;\r\n}\n\r\n// __________________\r\n// GetRecorderType.js\r\n\r\n/**\r\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It returns best recorder-type available for your browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GetRecorderType\r\n * @class\r\n * @example\r\n * var RecorderType = GetRecorderType(options);\r\n * var recorder = new RecorderType(options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction GetRecorderType(mediaStream, config) {\r\n    var recorder;\r\n\r\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\r\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\r\n    if (isChrome || isEdge || isOpera) {\r\n        // Media Stream Recording API has not been implemented in chrome yet;\r\n        // That's why using WebAudio API to record stereo audio in WAV format\r\n        recorder = StereoAudioRecorder;\r\n    }\r\n\r\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    // video recorder (in WebM format)\r\n    if (config.type === 'video' && (isChrome || isOpera)) {\r\n        recorder = WhammyRecorder;\r\n\r\n        if (typeof WebAssemblyRecorder !== 'undefined' && typeof ReadableStream !== 'undefined') {\r\n            recorder = WebAssemblyRecorder;\r\n        }\r\n    }\r\n\r\n    // video recorder (in Gif format)\r\n    if (config.type === 'gif') {\r\n        recorder = GifRecorder;\r\n    }\r\n\r\n    // html2canvas recording!\r\n    if (config.type === 'canvas') {\r\n        recorder = CanvasRecorder;\r\n    }\r\n\r\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (getTracks(mediaStream, 'video').length || getTracks(mediaStream, 'audio').length) {\r\n            // audio-only recording\r\n            if (config.type === 'audio') {\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n                // else recorder = StereoAudioRecorder;\r\n            } else {\r\n                // video or screen tracks\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (mediaStream instanceof Array && mediaStream.length) {\r\n        recorder = MultiStreamRecorder;\r\n    }\r\n\r\n    if (config.recorderType) {\r\n        recorder = config.recorderType;\r\n    }\r\n\r\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\r\n        console.log('Using recorderType:', recorder.name || recorder.constructor.name);\r\n    }\r\n\r\n    if (!recorder && isSafari) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    return recorder;\r\n}\n\r\n// _____________\r\n// MRecordRTC.js\r\n\r\n/**\r\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\r\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MRecordRTC\r\n * @class\r\n * @example\r\n * var recorder = new MRecordRTC();\r\n * recorder.addStream(MediaStream);\r\n * recorder.mediaType = {\r\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\r\n *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n *     gif: true    // or GifRecorder\r\n * };\r\n * // mimeType is optional and should be set only in advance cases.\r\n * recorder.mimeType = {\r\n *     audio: 'audio/wav',\r\n *     video: 'video/webm',\r\n *     gif:   'image/gif'\r\n * };\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction MRecordRTC(mediaStream) {\r\n\r\n    /**\r\n     * This method attaches MediaStream object to {@link MRecordRTC}.\r\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.addStream(MediaStream);\r\n     */\r\n    this.addStream = function(_mediaStream) {\r\n        if (_mediaStream) {\r\n            mediaStream = _mediaStream;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\r\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * var recorder = new MRecordRTC();\r\n     * recorder.mediaType = {\r\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\r\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n     *     gif  : true  // TRUE or GifRecorder\r\n     * };\r\n     */\r\n    this.mediaType = {\r\n        audio: true,\r\n        video: true\r\n    };\r\n\r\n    /**\r\n     * This method starts recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.startRecording();\r\n     */\r\n    this.startRecording = function() {\r\n        var mediaType = this.mediaType;\r\n        var recorderType;\r\n        var mimeType = this.mimeType || {\r\n            audio: null,\r\n            video: null,\r\n            gif: null\r\n        };\r\n\r\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'audio').length) {\r\n            mediaType.audio = false;\r\n        }\r\n\r\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.video = false;\r\n        }\r\n\r\n        if (typeof mediaType.gif !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.gif = false;\r\n        }\r\n\r\n        if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\r\n            throw 'MediaStream must have either audio or video tracks.';\r\n        }\r\n\r\n        if (!!mediaType.audio) {\r\n            recorderType = null;\r\n            if (typeof mediaType.audio === 'function') {\r\n                recorderType = mediaType.audio;\r\n            }\r\n\r\n            this.audioRecorder = new RecordRTC(mediaStream, {\r\n                type: 'audio',\r\n                bufferSize: this.bufferSize,\r\n                sampleRate: this.sampleRate,\r\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.audio,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp\r\n            });\r\n\r\n            if (!mediaType.video) {\r\n                this.audioRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.video) {\r\n            recorderType = null;\r\n            if (typeof mediaType.video === 'function') {\r\n                recorderType = mediaType.video;\r\n            }\r\n\r\n            var newStream = mediaStream;\r\n\r\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\r\n                var videoTrack = getTracks(mediaStream, 'video')[0];\r\n\r\n                if (isFirefox) {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n\r\n                    if (recorderType && recorderType === WhammyRecorder) {\r\n                        // Firefox does NOT supports webp-encoding yet\r\n                        // But Firefox do supports WebAssemblyRecorder\r\n                        recorderType = MediaStreamRecorder;\r\n                    }\r\n                } else {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n                }\r\n            }\r\n\r\n            this.videoRecorder = new RecordRTC(newStream, {\r\n                type: 'video',\r\n                video: this.video,\r\n                canvas: this.canvas,\r\n                frameInterval: this.frameInterval || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.video,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp,\r\n                workerPath: this.workerPath,\r\n                webAssemblyPath: this.webAssemblyPath,\r\n                frameRate: this.frameRate, // used by WebAssemblyRecorder; values: usually 30; accepts any.\r\n                bitrate: this.bitrate // used by WebAssemblyRecorder; values: 0 to 1000+\r\n            });\r\n\r\n            if (!mediaType.audio) {\r\n                this.videoRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.audio && !!mediaType.video) {\r\n            var self = this;\r\n\r\n            var isSingleRecorder = isMediaRecorderCompatible() === true;\r\n\r\n            if (mediaType.audio instanceof StereoAudioRecorder && !!mediaType.video) {\r\n                isSingleRecorder = false;\r\n            } else if (mediaType.audio !== true && mediaType.video !== true && mediaType.audio !== mediaType.video) {\r\n                isSingleRecorder = false;\r\n            }\r\n\r\n            if (isSingleRecorder === true) {\r\n                self.audioRecorder = null;\r\n                self.videoRecorder.startRecording();\r\n            } else {\r\n                self.videoRecorder.initRecorder(function() {\r\n                    self.audioRecorder.initRecorder(function() {\r\n                        // Both recorders are ready to record things accurately\r\n                        self.videoRecorder.startRecording();\r\n                        self.audioRecorder.startRecording();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.gif) {\r\n            recorderType = null;\r\n            if (typeof mediaType.gif === 'function') {\r\n                recorderType = mediaType.gif;\r\n            }\r\n            this.gifRecorder = new RecordRTC(mediaStream, {\r\n                type: 'gif',\r\n                frameRate: this.frameRate || 200,\r\n                quality: this.quality || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.gif\r\n            });\r\n            this.gifRecorder.startRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording.\r\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.stopRecording(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     */\r\n    this.stopRecording = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'audio');\r\n            });\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'video');\r\n            });\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'gif');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.pauseRecording();\r\n     */\r\n    this.pauseRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.pauseRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.resumeRecording();\r\n     */\r\n    this.resumeRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.resumeRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs.\r\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getBlob(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     * // or\r\n     * var audioBlob = recorder.getBlob().audio;\r\n     * var videoBlob = recorder.getBlob().video;\r\n     */\r\n    this.getBlob = function(callback) {\r\n        var output = {};\r\n\r\n        if (this.audioRecorder) {\r\n            output.audio = this.audioRecorder.getBlob();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            output.video = this.videoRecorder.getBlob();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            output.gif = this.gifRecorder.getBlob();\r\n        }\r\n\r\n        if (callback) {\r\n            callback(output);\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Destroy all recorder instances.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.destroy();\r\n     */\r\n    this.destroy = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.destroy();\r\n            this.audioRecorder = null;\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.destroy();\r\n            this.videoRecorder = null;\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.destroy();\r\n            this.gifRecorder = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs' DataURLs.\r\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getDataURL(function(recording){\r\n     *     var audioDataURL = recording.audio;\r\n     *     var videoDataURL = recording.video;\r\n     *     var gifDataURL   = recording.gif;\r\n     * });\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        this.getBlob(function(blob) {\r\n            if (blob.audio && blob.video) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    getDataURL(blob.video, function(_videoDataURL) {\r\n                        callback({\r\n                            audio: _audioDataURL,\r\n                            video: _videoDataURL\r\n                        });\r\n                    });\r\n                });\r\n            } else if (blob.audio) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    callback({\r\n                        audio: _audioDataURL\r\n                    });\r\n                });\r\n            } else if (blob.video) {\r\n                getDataURL(blob.video, function(_videoDataURL) {\r\n                    callback({\r\n                        video: _videoDataURL\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n        function getDataURL(blob, callback00) {\r\n            if (typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(function readFile(_blob) {\r\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n                });\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    callback00(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(blob);\r\n            } else {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onload = function(event) {\r\n                    callback00(event.target.result);\r\n                };\r\n            }\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            var url;\r\n            if (typeof URL !== 'undefined') {\r\n                url = URL;\r\n            } else if (typeof webkitURL !== 'undefined') {\r\n                url = webkitURL;\r\n            } else {\r\n                throw 'Neither URL nor webkitURL detected.';\r\n            }\r\n            url.revokeObjectURL(blob);\r\n            return worker;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.writeToDisk();\r\n     */\r\n    this.writeToDisk = function() {\r\n        RecordRTC.writeToDisk({\r\n            audio: this.audioRecorder,\r\n            video: this.videoRecorder,\r\n            gif: this.gifRecorder\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\r\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.save({\r\n     *     audio: 'audio-file-name',\r\n     *     video: 'video-file-name',\r\n     *     gif  : 'gif-file-name'\r\n     * });\r\n     */\r\n    this.save = function(args) {\r\n        args = args || {\r\n            audio: true,\r\n            video: true,\r\n            gif: true\r\n        };\r\n\r\n        if (!!args.audio && this.audioRecorder) {\r\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\r\n        }\r\n\r\n        if (!!args.video && this.videoRecorder) {\r\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\r\n        }\r\n        if (!!args.gif && this.gifRecorder) {\r\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * This method can be used to get all recorded blobs from IndexedDB storage.\r\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\r\n * @param {function} callback - Callback function to get all stored blobs.\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\r\n *     if(type === 'audio') { }\r\n *     if(type === 'video') { }\r\n *     if(type === 'gif')   { }\r\n * });\r\n */\r\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MRecordRTC = MRecordRTC;\r\n}\n\r\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n(function(that) {\r\n    if (!that) {\r\n        return;\r\n    }\r\n\r\n    if (typeof window !== 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof global === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    global.navigator = {\r\n        userAgent: browserFakeUserAgent,\r\n        getUserMedia: function() {}\r\n    };\r\n\r\n    if (!global.console) {\r\n        global.console = {};\r\n    }\r\n\r\n    if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n        global.console.error = global.console.log = global.console.log || function() {\r\n            console.log(arguments);\r\n        };\r\n    }\r\n\r\n    if (typeof document === 'undefined') {\r\n        /*global document:true */\r\n        that.document = {\r\n            documentElement: {\r\n                appendChild: function() {\r\n                    return '';\r\n                }\r\n            }\r\n        };\r\n\r\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n            var obj = {\r\n                getContext: function() {\r\n                    return obj;\r\n                },\r\n                play: function() {},\r\n                pause: function() {},\r\n                drawImage: function() {},\r\n                toDataURL: function() {\r\n                    return '';\r\n                },\r\n                style: {}\r\n            };\r\n            return obj;\r\n        };\r\n\r\n        that.HTMLVideoElement = function() {};\r\n    }\r\n\r\n    if (typeof location === 'undefined') {\r\n        /*global location:true */\r\n        that.location = {\r\n            protocol: 'file:',\r\n            href: '',\r\n            hash: ''\r\n        };\r\n    }\r\n\r\n    if (typeof screen === 'undefined') {\r\n        /*global screen:true */\r\n        that.screen = {\r\n            width: 0,\r\n            height: 0\r\n        };\r\n    }\r\n\r\n    if (typeof URL === 'undefined') {\r\n        /*global screen:true */\r\n        that.URL = {\r\n            createObjectURL: function() {\r\n                return '';\r\n            },\r\n            revokeObjectURL: function() {\r\n                return '';\r\n            }\r\n        };\r\n    }\r\n\r\n    /*global window:true */\r\n    that.window = global;\r\n})(typeof global !== 'undefined' ? global : null);\n\r\n// _____________________________\r\n// Cross-Browser-Declarations.js\r\n\r\n// animation-frame used in WebM recording\r\n\r\n/*jshint -W079 */\r\nvar requestAnimationFrame = window.requestAnimationFrame;\r\nif (typeof requestAnimationFrame === 'undefined') {\r\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = webkitRequestAnimationFrame;\r\n    } else if (typeof mozRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = mozRequestAnimationFrame;\r\n    } else if (typeof msRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = msRequestAnimationFrame;\r\n    } else if (typeof requestAnimationFrame === 'undefined') {\r\n        // via: https://gist.github.com/paulirish/1579671\r\n        var lastTime = 0;\r\n\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = function(callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function() {\r\n                callback(currTime + timeToCall);\r\n            }, timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar cancelAnimationFrame = window.cancelAnimationFrame;\r\nif (typeof cancelAnimationFrame === 'undefined') {\r\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = webkitCancelAnimationFrame;\r\n    } else if (typeof mozCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = mozCancelAnimationFrame;\r\n    } else if (typeof msCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = msCancelAnimationFrame;\r\n    } else if (typeof cancelAnimationFrame === 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n}\r\n\r\n// WebAudio API representer\r\nvar AudioContext = window.AudioContext;\r\n\r\nif (typeof AudioContext === 'undefined') {\r\n    if (typeof webkitAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    if (typeof mozAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = mozAudioContext;\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar URL = window.URL;\r\n\r\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n    /*global URL:true */\r\n    URL = webkitURL;\r\n}\r\n\r\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n    }\r\n\r\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.mozGetUserMedia;\r\n    }\r\n}\r\n\r\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\r\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\r\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && ('netscape' in window) && / rv:/.test(navigator.userAgent);\r\nvar isChrome = (!isOpera && !isEdge && !!navigator.webkitGetUserMedia) || isElectron() || navigator.userAgent.toLowerCase().indexOf('chrome/') !== -1;\r\n\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\nif (isSafari && !isChrome && navigator.userAgent.indexOf('CriOS') !== -1) {\r\n    isSafari = false;\r\n    isChrome = true;\r\n}\r\n\r\nvar MediaStream = window.MediaStream;\r\n\r\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n    MediaStream = webkitMediaStream;\r\n}\r\n\r\n/*global MediaStream:true */\r\nif (typeof MediaStream !== 'undefined') {\r\n    // override \"stop\" method for all browsers\r\n    if (typeof MediaStream.prototype.stop === 'undefined') {\r\n        MediaStream.prototype.stop = function() {\r\n            this.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\n// below function via: http://goo.gl/B3ae8c\r\n/**\r\n * Return human-readable file size.\r\n * @param {number} bytes - Pass bytes and get formatted string.\r\n * @returns {string} - formatted string\r\n * @example\r\n * bytesToSize(1024*1024*5) === '5 GB'\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction bytesToSize(bytes) {\r\n    var k = 1000;\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) {\r\n        return '0 Bytes';\r\n    }\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\r\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object. This parameter is required.\r\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\r\n * @example\r\n * invokeSaveAsDialog(blob or file, [optional] fileName);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction invokeSaveAsDialog(file, fileName) {\r\n    if (!file) {\r\n        throw 'Blob object is required.';\r\n    }\r\n\r\n    if (!file.type) {\r\n        try {\r\n            file.type = 'video/webm';\r\n        } catch (e) {}\r\n    }\r\n\r\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\r\n\r\n    if (fileName && fileName.indexOf('.') !== -1) {\r\n        var splitted = fileName.split('.');\r\n        fileName = splitted[0];\r\n        fileExtension = splitted[1];\r\n    }\r\n\r\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\r\n\r\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\r\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\r\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\r\n        return navigator.msSaveBlob(file, fileFullName);\r\n    }\r\n\r\n    var hyperlink = document.createElement('a');\r\n    hyperlink.href = URL.createObjectURL(file);\r\n    hyperlink.download = fileFullName;\r\n\r\n    hyperlink.style = 'display:none;opacity:0;color:transparent;';\r\n    (document.body || document.documentElement).appendChild(hyperlink);\r\n\r\n    if (typeof hyperlink.click === 'function') {\r\n        hyperlink.click();\r\n    } else {\r\n        hyperlink.target = '_blank';\r\n        hyperlink.dispatchEvent(new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true\r\n        }));\r\n    }\r\n\r\n    URL.revokeObjectURL(hyperlink.href);\r\n}\r\n\r\n/**\r\n * from: https://github.com/cheton/is-electron/blob/master/index.js\r\n **/\r\nfunction isElectron() {\r\n    // Renderer process\r\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\r\n        return true;\r\n    }\r\n\r\n    // Main process\r\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\r\n        return true;\r\n    }\r\n\r\n    // Detect the user agent when the `nodeIntegration` option is set to true\r\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getTracks(stream, kind) {\r\n    if (!stream || !stream.getTracks) {\r\n        return [];\r\n    }\r\n\r\n    return stream.getTracks().filter(function(t) {\r\n        return t.kind === (kind || 'audio');\r\n    });\r\n}\r\n\r\nfunction setSrcObject(stream, element) {\r\n    if ('srcObject' in element) {\r\n        element.srcObject = stream;\r\n    } else if ('mozSrcObject' in element) {\r\n        element.mozSrcObject = stream;\r\n    } else {\r\n        element.srcObject = stream;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object.\r\n * @param {function} callback - Callback function.\r\n * @example\r\n * getSeekableBlob(blob or file, callback);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction getSeekableBlob(inputBlob, callback) {\r\n    // EBML.js copyrights goes to: https://github.com/legokichi/ts-ebml\r\n    if (typeof EBML === 'undefined') {\r\n        throw new Error('Please link: https://cdn.webrtc-experiment.com/EBML.js');\r\n    }\r\n\r\n    var reader = new EBML.Reader();\r\n    var decoder = new EBML.Decoder();\r\n    var tools = EBML.tools;\r\n\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function(e) {\r\n        var ebmlElms = decoder.decode(this.result);\r\n        ebmlElms.forEach(function(element) {\r\n            reader.read(element);\r\n        });\r\n        reader.stop();\r\n        var refinedMetadataBuf = tools.makeMetadataSeekable(reader.metadatas, reader.duration, reader.cues);\r\n        var body = this.result.slice(reader.metadataSize);\r\n        var newBlob = new Blob([refinedMetadataBuf, body], {\r\n            type: 'video/webm'\r\n        });\r\n\r\n        callback(newBlob);\r\n    };\r\n    fileReader.readAsArrayBuffer(inputBlob);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.invokeSaveAsDialog = invokeSaveAsDialog;\r\n    RecordRTC.getTracks = getTracks;\r\n    RecordRTC.getSeekableBlob = getSeekableBlob;\r\n    RecordRTC.bytesToSize = bytesToSize;\r\n    RecordRTC.isElectron = isElectron;\r\n}\n\r\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\r\n// Storage.js\r\n\r\n/**\r\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * Storage.AudioContext === webkitAudioContext\r\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Storage = {};\r\n\r\nif (typeof AudioContext !== 'undefined') {\r\n    Storage.AudioContext = AudioContext;\r\n} else if (typeof webkitAudioContext !== 'undefined') {\r\n    Storage.AudioContext = webkitAudioContext;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Storage = Storage;\r\n}\n\r\nfunction isMediaRecorderCompatible() {\r\n    if (isFirefox || isSafari || isEdge) {\r\n        return true;\r\n    }\r\n\r\n    var nVer = navigator.appVersion;\r\n    var nAgt = navigator.userAgent;\r\n    var fullVersion = '' + parseFloat(navigator.appVersion);\r\n    var majorVersion = parseInt(navigator.appVersion, 10);\r\n    var nameOffset, verOffset, ix;\r\n\r\n    if (isChrome || isOpera) {\r\n        verOffset = nAgt.indexOf('Chrome');\r\n        fullVersion = nAgt.substring(verOffset + 7);\r\n    }\r\n\r\n    // trim the fullVersion string at semicolon/space if present\r\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n    if (isNaN(majorVersion)) {\r\n        fullVersion = '' + parseFloat(navigator.appVersion);\r\n        majorVersion = parseInt(navigator.appVersion, 10);\r\n    }\r\n\r\n    return majorVersion >= 49;\r\n}\n\r\n// ______________________\r\n// MediaStreamRecorder.js\r\n\r\n/**\r\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\r\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\r\n * @typedef MediaStreamRecorder\r\n * @class\r\n * @example\r\n * var config = {\r\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\r\n *     audioBitsPerSecond : 256 * 8 * 1024,\r\n *     videoBitsPerSecond : 256 * 8 * 1024,\r\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\r\n *     checkForInactiveTracks: true,\r\n *     timeSlice: 1000, // concatenate intervals based blobs\r\n *     ondataavailable: function() {} // get intervals based blobs\r\n * }\r\n * var recorder = new MediaStreamRecorder(mediaStream, config);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\r\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\r\n */\r\n\r\nfunction MediaStreamRecorder(mediaStream, config) {\r\n    var self = this;\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    if (typeof MediaRecorder === 'undefined') {\r\n        throw 'Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';\r\n    }\r\n\r\n    config = config || {\r\n        // bitsPerSecond: 256 * 8 * 1024,\r\n        mimeType: 'video/webm'\r\n    };\r\n\r\n    if (config.type === 'audio') {\r\n        if (getTracks(mediaStream, 'video').length && getTracks(mediaStream, 'audio').length) {\r\n            var stream;\r\n            if (!!navigator.mozGetUserMedia) {\r\n                stream = new MediaStream();\r\n                stream.addTrack(getTracks(mediaStream, 'audio')[0]);\r\n            } else {\r\n                // webkitMediaStream\r\n                stream = new MediaStream(getTracks(mediaStream, 'audio'));\r\n            }\r\n            mediaStream = stream;\r\n        }\r\n\r\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\r\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\r\n        }\r\n\r\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\r\n            // forcing better codecs on Firefox (via #166)\r\n            config.mimeType = 'audio/ogg';\r\n        }\r\n    }\r\n\r\n    var arrayOfBlobs = [];\r\n\r\n    /**\r\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\r\n     * @returns {Array} Returns array of recorded blobs.\r\n     */\r\n    this.getArrayOfBlobs = function() {\r\n        return arrayOfBlobs;\r\n    };\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // set defaults\r\n        self.blob = null;\r\n        self.clearRecordedData();\r\n        self.timestamps = [];\r\n        allStates = [];\r\n        arrayOfBlobs = [];\r\n\r\n        var recorderHints = config;\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (isChrome && !isMediaRecorderCompatible()) {\r\n            // to support video-only recording on stable\r\n            recorderHints = 'video/vp8';\r\n        }\r\n\r\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\r\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\r\n                if (!config.disableLogs) {\r\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n                }\r\n\r\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\r\n            }\r\n        }\r\n\r\n        // using MediaRecorder API here\r\n        try {\r\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\r\n\r\n            // reset\r\n            config.mimeType = recorderHints.mimeType;\r\n        } catch (e) {\r\n            // chrome-based fallback\r\n            mediaRecorder = new MediaRecorder(mediaStream);\r\n        }\r\n\r\n        // old hack?\r\n        if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\r\n            if (!config.disableLogs) {\r\n                console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n            }\r\n        }\r\n\r\n        // Dispatching OnDataAvailable Handler\r\n        mediaRecorder.ondataavailable = function(e) {\r\n            if (e.data) {\r\n                allStates.push('ondataavailable: ' + bytesToSize(e.data.size));\r\n            }\r\n\r\n            if (typeof config.timeSlice === 'number') {\r\n                if (e.data && e.data.size && e.data.size > 100) {\r\n                    arrayOfBlobs.push(e.data);\r\n                    updateTimeStamp();\r\n\r\n                    if (typeof config.ondataavailable === 'function') {\r\n                        // intervals based blobs\r\n                        var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                            type: getMimeType(recorderHints)\r\n                        });\r\n                        config.ondataavailable(blob);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\r\n                // make sure that stopRecording always getting fired\r\n                // even if there is invalid data\r\n                if (self.recordingCallback) {\r\n                    self.recordingCallback(new Blob([], {\r\n                        type: getMimeType(recorderHints)\r\n                    }));\r\n                    self.recordingCallback = null;\r\n                }\r\n                return;\r\n            }\r\n\r\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                type: getMimeType(recorderHints)\r\n            });\r\n\r\n            if (self.recordingCallback) {\r\n                self.recordingCallback(self.blob);\r\n                self.recordingCallback = null;\r\n            }\r\n        };\r\n\r\n        mediaRecorder.onstart = function() {\r\n            allStates.push('started');\r\n        };\r\n\r\n        mediaRecorder.onpause = function() {\r\n            allStates.push('paused');\r\n        };\r\n\r\n        mediaRecorder.onresume = function() {\r\n            allStates.push('resumed');\r\n        };\r\n\r\n        mediaRecorder.onstop = function() {\r\n            allStates.push('stopped');\r\n        };\r\n\r\n        mediaRecorder.onerror = function(error) {\r\n            if (!error) {\r\n                return;\r\n            }\r\n\r\n            if (!error.name) {\r\n                error.name = 'UnknownError';\r\n            }\r\n\r\n            allStates.push('error: ' + error);\r\n\r\n            if (!config.disableLogs) {\r\n                // via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\r\n                if (error.name.toString().toLowerCase().indexOf('invalidstate') !== -1) {\r\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('notsupported') !== -1) {\r\n                    console.error('MIME type (', recorderHints.mimeType, ') is not supported.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('security') !== -1) {\r\n                    console.error('MediaRecorder security error', error);\r\n                }\r\n\r\n                // older code below\r\n                else if (error.name === 'OutOfMemory') {\r\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'IllegalStreamModification') {\r\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'OtherRecordingError') {\r\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'GenericError') {\r\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\r\n                } else {\r\n                    console.error('MediaRecorder Error', error);\r\n                }\r\n            }\r\n\r\n            (function(looper) {\r\n                if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === 'inactive') {\r\n                    delete config.timeslice;\r\n\r\n                    // 10 minutes, enough?\r\n                    mediaRecorder.start(10 * 60 * 1000);\r\n                    return;\r\n                }\r\n\r\n                setTimeout(looper, 1000);\r\n            })();\r\n\r\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\r\n                mediaRecorder.stop();\r\n            }\r\n        };\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            updateTimeStamp();\r\n            mediaRecorder.start(config.timeSlice);\r\n        } else {\r\n            // default is 60 minutes; enough?\r\n            // use config => {timeSlice: 1000} otherwise\r\n\r\n            mediaRecorder.start(3.6e+6);\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback(); // old code\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @property {Array} timestamps - Array of time stamps\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * console.log(recorder.timestamps);\r\n     */\r\n    this.timestamps = [];\r\n\r\n    function updateTimeStamp() {\r\n        self.timestamps.push(new Date().getTime());\r\n\r\n        if (typeof config.onTimeStamp === 'function') {\r\n            config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\r\n        }\r\n    }\r\n\r\n    function getMimeType(secondObject) {\r\n        if (mediaRecorder && mediaRecorder.mimeType) {\r\n            return mediaRecorder.mimeType;\r\n        }\r\n\r\n        return secondObject.mimeType || 'video/webm';\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        self.manuallyStopped = true; // used inside the mediaRecorder.onerror\r\n\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        this.recordingCallback = callback;\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.stop();\r\n        }\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            setTimeout(function() {\r\n                self.blob = new Blob(arrayOfBlobs, {\r\n                    type: getMimeType(config)\r\n                });\r\n\r\n                self.recordingCallback(self.blob);\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'paused') {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n            self.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        arrayOfBlobs = [];\r\n        mediaRecorder = null;\r\n        self.timestamps = [];\r\n    }\r\n\r\n    // Reference to \"MediaRecorder\" object\r\n    var mediaRecorder;\r\n\r\n    /**\r\n     * Access to native MediaRecorder API\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @instance\r\n     * @example\r\n     * var internal = recorder.getInternalRecorder();\r\n     * internal.ondataavailable = function() {}; // override\r\n     * internal.stream, internal.onpause, internal.onstop, etc.\r\n     * @returns {Object} Returns internal recording object.\r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return mediaRecorder;\r\n    };\r\n\r\n    function isMediaStreamActive() {\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function() {\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n\r\n\r\n    /**\r\n     * Get MediaRecorder readonly state.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getState();\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        if (!mediaRecorder) {\r\n            return 'inactive';\r\n        }\r\n\r\n        return mediaRecorder.state || 'inactive';\r\n    };\r\n\r\n    // list of all recording states\r\n    var allStates = [];\r\n\r\n    /**\r\n     * Get MediaRecorder all recording states.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getAllStates();\r\n     * @returns {Array} Returns all recording states\r\n     */\r\n    this.getAllStates = function() {\r\n        return allStates;\r\n    };\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = false; // disable to minimize CPU usage\r\n    }\r\n\r\n    var self = this;\r\n\r\n    // this method checks if media stream is stopped\r\n    // or if any track is ended.\r\n    (function looper() {\r\n        if (!mediaRecorder || config.checkForInactiveTracks === false) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            self.stop();\r\n            return;\r\n        }\r\n\r\n        setTimeout(looper, 1000); // check every second\r\n    })();\r\n\r\n    // for debugging\r\n    this.name = 'MediaStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\r\n}\n\r\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\r\n// https://github.com/mattdiamond/Recorderjs#license-mit\r\n// ______________________\r\n// StereoAudioRecorder.js\r\n\r\n/**\r\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\r\n * @summary JavaScript standalone object for stereo audio recording.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef StereoAudioRecorder\r\n * @class\r\n * @example\r\n * var recorder = new StereoAudioRecorder(MediaStream, {\r\n *     sampleRate: 44100,\r\n *     bufferSize: 4096\r\n * });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\r\n */\r\n\r\nfunction StereoAudioRecorder(mediaStream, config) {\r\n    if (!getTracks(mediaStream, 'audio').length) {\r\n        throw 'Your stream has no audio tracks.';\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var self = this;\r\n\r\n    // variables\r\n    var leftchannel = [];\r\n    var rightchannel = [];\r\n    var recording = false;\r\n    var recordingLength = 0;\r\n    var jsAudioNode;\r\n\r\n    var numberOfAudioChannels = 2;\r\n\r\n    /**\r\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\r\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\r\n     * @memberof StereoAudioRecorder\r\n     * @instance\r\n     * @example\r\n     * var recorder = StereoAudioRecorder(mediaStream, {\r\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\r\n     * });\r\n     */\r\n    var desiredSampRate = config.desiredSampRate;\r\n\r\n    // backward compatibility\r\n    if (config.leftChannel === true) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (config.numberOfAudioChannels === 1) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\r\n        numberOfAudioChannels = 2;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('StereoAudioRecorder is set to record number of channels: ' + numberOfAudioChannels);\r\n    }\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = true;\r\n    }\r\n\r\n    function isMediaStreamActive() {\r\n        if (config.checkForInactiveTracks === false) {\r\n            // always return \"true\"\r\n            return true;\r\n        }\r\n\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        resetVariables();\r\n\r\n        isAudioProcessStarted = isPaused = false;\r\n        recording = true;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            looper();\r\n        }\r\n    };\r\n\r\n    function mergeLeftRightBuffers(config, callback) {\r\n        function mergeAudioBuffers(config, cb) {\r\n            var numberOfAudioChannels = config.numberOfAudioChannels;\r\n\r\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\r\n            var leftBuffers = config.leftBuffers.slice(0);\r\n            var rightBuffers = config.rightBuffers.slice(0);\r\n            var sampleRate = config.sampleRate;\r\n            var internalInterleavedLength = config.internalInterleavedLength;\r\n            var desiredSampRate = config.desiredSampRate;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                    rightBuffers = interpolateArray(rightBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            // set sample rate as desired sample rate\r\n            if (desiredSampRate) {\r\n                sampleRate = desiredSampRate;\r\n            }\r\n\r\n            // for changing the sampling rate, reference:\r\n            // http://stackoverflow.com/a/28977136/552182\r\n            function interpolateArray(data, newSampleRate, oldSampleRate) {\r\n                var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\r\n                var newData = [];\r\n                var springFactor = Number((data.length - 1) / (fitCount - 1));\r\n                newData[0] = data[0];\r\n                for (var i = 1; i < fitCount - 1; i++) {\r\n                    var tmp = i * springFactor;\r\n                    var before = Number(Math.floor(tmp)).toFixed();\r\n                    var after = Number(Math.ceil(tmp)).toFixed();\r\n                    var atPoint = tmp - before;\r\n                    newData[i] = linearInterpolate(data[before], data[after], atPoint);\r\n                }\r\n                newData[fitCount - 1] = data[data.length - 1];\r\n                return newData;\r\n            }\r\n\r\n            function linearInterpolate(before, after, atPoint) {\r\n                return before + (after - before) * atPoint;\r\n            }\r\n\r\n            function mergeBuffers(channelBuffer, rLength) {\r\n                var result = new Float64Array(rLength);\r\n                var offset = 0;\r\n                var lng = channelBuffer.length;\r\n\r\n                for (var i = 0; i < lng; i++) {\r\n                    var buffer = channelBuffer[i];\r\n                    result.set(buffer, offset);\r\n                    offset += buffer.length;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function interleave(leftChannel, rightChannel) {\r\n                var length = leftChannel.length + rightChannel.length;\r\n\r\n                var result = new Float64Array(length);\r\n\r\n                var inputIndex = 0;\r\n\r\n                for (var index = 0; index < length;) {\r\n                    result[index++] = leftChannel[inputIndex];\r\n                    result[index++] = rightChannel[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function writeUTFBytes(view, offset, string) {\r\n                var lng = string.length;\r\n                for (var i = 0; i < lng; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            // interleave both channels together\r\n            var interleaved;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                interleaved = interleave(leftBuffers, rightBuffers);\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                interleaved = leftBuffers;\r\n            }\r\n\r\n            var interleavedLength = interleaved.length;\r\n\r\n            // create wav file\r\n            var resultingBufferLength = 44 + interleavedLength * 2;\r\n\r\n            var buffer = new ArrayBuffer(resultingBufferLength);\r\n\r\n            var view = new DataView(buffer);\r\n\r\n            // RIFF chunk descriptor/identifier \r\n            writeUTFBytes(view, 0, 'RIFF');\r\n\r\n            // RIFF chunk length\r\n            // changed \"44\" to \"36\" via #401\r\n            view.setUint32(4, 36 + interleavedLength * 2, true);\r\n\r\n            // RIFF type \r\n            writeUTFBytes(view, 8, 'WAVE');\r\n\r\n            // format chunk identifier \r\n            // FMT sub-chunk\r\n            writeUTFBytes(view, 12, 'fmt ');\r\n\r\n            // format chunk length \r\n            view.setUint32(16, 16, true);\r\n\r\n            // sample format (raw)\r\n            view.setUint16(20, 1, true);\r\n\r\n            // stereo (2 channels)\r\n            view.setUint16(22, numberOfAudioChannels, true);\r\n\r\n            // sample rate \r\n            view.setUint32(24, sampleRate, true);\r\n\r\n            // byte rate (sample rate * block align)\r\n            view.setUint32(28, sampleRate * 2, true);\r\n\r\n            // block align (channel count * bytes per sample) \r\n            view.setUint16(32, numberOfAudioChannels * 2, true);\r\n\r\n            // bits per sample \r\n            view.setUint16(34, 16, true);\r\n\r\n            // data sub-chunk\r\n            // data chunk identifier \r\n            writeUTFBytes(view, 36, 'data');\r\n\r\n            // data chunk length \r\n            view.setUint32(40, interleavedLength * 2, true);\r\n\r\n            // write the PCM samples\r\n            var lng = interleavedLength;\r\n            var index = 44;\r\n            var volume = 1;\r\n            for (var i = 0; i < lng; i++) {\r\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\r\n                index += 2;\r\n            }\r\n\r\n            if (cb) {\r\n                return cb({\r\n                    buffer: buffer,\r\n                    view: view\r\n                });\r\n            }\r\n\r\n            postMessage({\r\n                buffer: buffer,\r\n                view: view\r\n            });\r\n        }\r\n\r\n        if (config.noWorker) {\r\n            mergeAudioBuffers(config, function(data) {\r\n                callback(data.buffer, data.view);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        var webWorker = processInWebWorker(mergeAudioBuffers);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            callback(event.data.buffer, event.data.view);\r\n\r\n            // release memory\r\n            URL.revokeObjectURL(webWorker.workerURL);\r\n\r\n            // kill webworker (or Chrome will kill your page after ~25 calls)\r\n            webWorker.terminate();\r\n        };\r\n\r\n        webWorker.postMessage(config);\r\n    }\r\n\r\n    function processInWebWorker(_function) {\r\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\r\n            ';this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(workerURL);\r\n        worker.workerURL = workerURL;\r\n        return worker;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        // stop recording\r\n        recording = false;\r\n\r\n        mergeLeftRightBuffers({\r\n            desiredSampRate: desiredSampRate,\r\n            sampleRate: sampleRate,\r\n            numberOfAudioChannels: numberOfAudioChannels,\r\n            internalInterleavedLength: recordingLength,\r\n            leftBuffers: leftchannel,\r\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel,\r\n            noWorker: config.noWorker\r\n        }, function(buffer, view) {\r\n            /**\r\n             * @property {Blob} blob - The recorded blob object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            self.blob = new Blob([view], {\r\n                type: 'audio/wav'\r\n            });\r\n\r\n            /**\r\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var buffer = recorder.buffer;\r\n             * });\r\n             */\r\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\r\n\r\n            /**\r\n             * @property {DataView} view - The recorded data-view object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var view = recorder.view;\r\n             * });\r\n             */\r\n            self.view = view;\r\n\r\n            self.sampleRate = desiredSampRate || sampleRate;\r\n            self.bufferSize = bufferSize;\r\n\r\n            // recorded audio length\r\n            self.length = recordingLength;\r\n\r\n            isAudioProcessStarted = false;\r\n\r\n            if (callback) {\r\n                callback(self.blob);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof Storage === 'undefined') {\r\n        var Storage = {\r\n            AudioContextConstructor: null,\r\n            AudioContext: window.AudioContext || window.webkitAudioContext\r\n        };\r\n    }\r\n\r\n    if (!Storage.AudioContextConstructor) {\r\n        Storage.AudioContextConstructor = new Storage.AudioContext();\r\n    }\r\n\r\n    var context = Storage.AudioContextConstructor;\r\n\r\n    // creates an audio node from the microphone incoming stream\r\n    var audioInput = context.createMediaStreamSource(mediaStream);\r\n\r\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\r\n\r\n    /**\r\n     * From the spec: This value controls how frequently the audioprocess event is\r\n     * dispatched and how many sample-frames need to be processed each call.\r\n     * Lower values for buffer size will result in a lower (better) latency.\r\n     * Higher values will be necessary to avoid audio breakup and glitches\r\n     * The size of the buffer (in sample-frames) which needs to\r\n     * be processed each time onprocessaudio is called.\r\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\r\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     bufferSize: 4096\r\n     * });\r\n     */\r\n\r\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\r\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\r\n\r\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\r\n        if (!config.disableLogs) {\r\n            console.log('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\r\n        }\r\n    }\r\n\r\n    if (context.createJavaScriptNode) {\r\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else if (context.createScriptProcessor) {\r\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else {\r\n        throw 'WebAudio API has no support on this browser.';\r\n    }\r\n\r\n    // connect the stream to the script processor\r\n    audioInput.connect(jsAudioNode);\r\n\r\n    if (!config.bufferSize) {\r\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\r\n    }\r\n\r\n    /**\r\n     * The sample rate (in sample-frames per second) at which the\r\n     * AudioContext handles audio. It is assumed that all AudioNodes\r\n     * in the context run at this rate. In making this assumption,\r\n     * sample-rate converters or \"varispeed\" processors are not supported\r\n     * in real-time processing.\r\n     * The sampleRate parameter describes the sample-rate of the\r\n     * linear PCM audio data in the buffer in sample-frames per second.\r\n     * An implementation must support sample-rates in at least\r\n     * the range 22050 to 96000.\r\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     sampleRate: 44100\r\n     * });\r\n     */\r\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\r\n\r\n    if (sampleRate < 22050 || sampleRate > 96000) {\r\n        // Ref: http://stackoverflow.com/a/26303918/552182\r\n        if (!config.disableLogs) {\r\n            console.log('sample-rate must be under range 22050 and 96000.');\r\n        }\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        if (config.desiredSampRate) {\r\n            console.log('Desired sample-rate: ' + config.desiredSampRate);\r\n        }\r\n    }\r\n\r\n    var isPaused = false;\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        if (!recording) {\r\n            if (!config.disableLogs) {\r\n                console.log('Seems recording has been restarted.');\r\n            }\r\n            this.record();\r\n            return;\r\n        }\r\n\r\n        isPaused = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        config.checkForInactiveTracks = false;\r\n\r\n        if (recording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function resetVariables() {\r\n        leftchannel = [];\r\n        rightchannel = [];\r\n        recordingLength = 0;\r\n        isAudioProcessStarted = false;\r\n        recording = false;\r\n        isPaused = false;\r\n        context = null;\r\n\r\n        self.leftchannel = leftchannel;\r\n        self.rightchannel = rightchannel;\r\n        self.numberOfAudioChannels = numberOfAudioChannels;\r\n        self.desiredSampRate = desiredSampRate;\r\n        self.sampleRate = sampleRate;\r\n        self.recordingLength = recordingLength;\r\n\r\n        intervalsBasedBuffers = {\r\n            left: [],\r\n            right: [],\r\n            recordingLength: 0\r\n        };\r\n    }\r\n\r\n    function clearRecordedDataCB() {\r\n        if (jsAudioNode) {\r\n            jsAudioNode.onaudioprocess = null;\r\n            jsAudioNode.disconnect();\r\n            jsAudioNode = null;\r\n        }\r\n\r\n        if (audioInput) {\r\n            audioInput.disconnect();\r\n            audioInput = null;\r\n        }\r\n\r\n        resetVariables();\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'StereoAudioRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var isAudioProcessStarted = false;\r\n\r\n    function onAudioProcessDataAvailable(e) {\r\n        if (isPaused) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            jsAudioNode.disconnect();\r\n            recording = false;\r\n        }\r\n\r\n        if (!recording) {\r\n            if (audioInput) {\r\n                audioInput.disconnect();\r\n                audioInput = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * This method is called on \"onaudioprocess\" event's first invocation.\r\n         * @method {function} onAudioProcessStarted\r\n         * @memberof StereoAudioRecorder\r\n         * @example\r\n         * recorder.onAudioProcessStarted: function() { };\r\n         */\r\n        if (!isAudioProcessStarted) {\r\n            isAudioProcessStarted = true;\r\n            if (config.onAudioProcessStarted) {\r\n                config.onAudioProcessStarted();\r\n            }\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        }\r\n\r\n        var left = e.inputBuffer.getChannelData(0);\r\n\r\n        // we clone the samples\r\n        var chLeft = new Float32Array(left);\r\n        leftchannel.push(chLeft);\r\n\r\n        if (numberOfAudioChannels === 2) {\r\n            var right = e.inputBuffer.getChannelData(1);\r\n            var chRight = new Float32Array(right);\r\n            rightchannel.push(chRight);\r\n        }\r\n\r\n        recordingLength += bufferSize;\r\n\r\n        // export raw PCM\r\n        self.recordingLength = recordingLength;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            intervalsBasedBuffers.recordingLength += bufferSize;\r\n            intervalsBasedBuffers.left.push(chLeft);\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                intervalsBasedBuffers.right.push(chRight);\r\n            }\r\n        }\r\n    }\r\n\r\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\r\n\r\n    // to prevent self audio to be connected with speakers\r\n    if (context.createMediaStreamDestination) {\r\n        jsAudioNode.connect(context.createMediaStreamDestination());\r\n    } else {\r\n        jsAudioNode.connect(context.destination);\r\n    }\r\n\r\n    // export raw PCM\r\n    this.leftchannel = leftchannel;\r\n    this.rightchannel = rightchannel;\r\n    this.numberOfAudioChannels = numberOfAudioChannels;\r\n    this.desiredSampRate = desiredSampRate;\r\n    this.sampleRate = sampleRate;\r\n    self.recordingLength = recordingLength;\r\n\r\n    // helper for intervals based blobs\r\n    var intervalsBasedBuffers = {\r\n        left: [],\r\n        right: [],\r\n        recordingLength: 0\r\n    };\r\n\r\n    // this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\r\n    function looper() {\r\n        if (!recording || typeof config.ondataavailable !== 'function' || typeof config.timeSlice === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (intervalsBasedBuffers.left.length) {\r\n            mergeLeftRightBuffers({\r\n                desiredSampRate: desiredSampRate,\r\n                sampleRate: sampleRate,\r\n                numberOfAudioChannels: numberOfAudioChannels,\r\n                internalInterleavedLength: intervalsBasedBuffers.recordingLength,\r\n                leftBuffers: intervalsBasedBuffers.left,\r\n                rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\r\n            }, function(buffer, view) {\r\n                var blob = new Blob([view], {\r\n                    type: 'audio/wav'\r\n                });\r\n                config.ondataavailable(blob);\r\n\r\n                setTimeout(looper, config.timeSlice);\r\n            });\r\n\r\n            intervalsBasedBuffers = {\r\n                left: [],\r\n                right: [],\r\n                recordingLength: 0\r\n            };\r\n        } else {\r\n            setTimeout(looper, config.timeSlice);\r\n        }\r\n    }\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\r\n}\n\r\n// _________________\r\n// CanvasRecorder.js\r\n\r\n/**\r\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\r\n * @summary HTML2Canvas recording into video WebM.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef CanvasRecorder\r\n * @class\r\n * @example\r\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\r\n * @param {object} config - {disableLogs:true, initCallback: function}\r\n */\r\n\r\nfunction CanvasRecorder(htmlElement, config) {\r\n    if (typeof html2canvas === 'undefined') {\r\n        throw 'Please link: https://cdn.webrtc-experiment.com/screenshot.js';\r\n    }\r\n\r\n    config = config || {};\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    // via DetectRTC.js\r\n    var isCanvasSupportsStreamCapturing = false;\r\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n        if (item in document.createElement('canvas')) {\r\n            isCanvasSupportsStreamCapturing = true;\r\n        }\r\n    });\r\n\r\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\r\n\r\n    var chromeVersion = 50;\r\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n    if (_isChrome && matchArray && matchArray[2]) {\r\n        chromeVersion = parseInt(matchArray[2], 10);\r\n    }\r\n\r\n    if (_isChrome && chromeVersion < 52) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    if (config.useWhammyRecorder) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    var globalCanvas, mediaStreamRecorder;\r\n\r\n    if (isCanvasSupportsStreamCapturing) {\r\n        if (!config.disableLogs) {\r\n            console.log('Your browser supports both MediRecorder API and canvas.captureStream!');\r\n        }\r\n\r\n        if (htmlElement instanceof HTMLCanvasElement) {\r\n            globalCanvas = htmlElement;\r\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\r\n            globalCanvas = htmlElement.canvas;\r\n        } else {\r\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\r\n        }\r\n    } else if (!!navigator.mozGetUserMedia) {\r\n        if (!config.disableLogs) {\r\n            console.error('Canvas recording is NOT supported in Firefox.');\r\n        }\r\n    }\r\n\r\n    var isRecording;\r\n\r\n    /**\r\n     * This method records Canvas.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        isRecording = true;\r\n\r\n        if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\r\n            // CanvasCaptureMediaStream\r\n            var canvasMediaStream;\r\n            if ('captureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\r\n            } else if ('mozCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\r\n            } else if ('webkitCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\r\n            }\r\n\r\n            try {\r\n                var mdStream = new MediaStream();\r\n                mdStream.addTrack(getTracks(canvasMediaStream, 'video')[0]);\r\n                canvasMediaStream = mdStream;\r\n            } catch (e) {}\r\n\r\n            if (!canvasMediaStream) {\r\n                throw 'captureStream API are NOT available.';\r\n            }\r\n\r\n            // Note: Jan 18, 2016 status is that, \r\n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\r\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\r\n                mimeType: config.mimeType || 'video/webm'\r\n            });\r\n            mediaStreamRecorder.record();\r\n        } else {\r\n            whammy.frames = [];\r\n            lastTime = new Date().getTime();\r\n            drawCanvasFrame();\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    this.getWebPImages = function(callback) {\r\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        var framesLength = whammy.frames.length;\r\n        whammy.frames.forEach(function(frame, idx) {\r\n            var framesRemaining = framesLength - idx;\r\n            if (!config.disableLogs) {\r\n                console.log(framesRemaining + '/' + framesLength + ' frames remaining');\r\n            }\r\n\r\n            if (config.onEncodingCallback) {\r\n                config.onEncodingCallback(framesRemaining, framesLength);\r\n            }\r\n\r\n            var webp = frame.image.toDataURL('image/webp', 1);\r\n            whammy.frames[idx].image = webp;\r\n        });\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Generating WebM');\r\n        }\r\n\r\n        callback();\r\n    };\r\n\r\n    /**\r\n     * This method stops recording Canvas.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        isRecording = false;\r\n\r\n        var that = this;\r\n\r\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\r\n            mediaStreamRecorder.stop(callback);\r\n            return;\r\n        }\r\n\r\n        this.getWebPImages(function() {\r\n            /**\r\n             * @property {Blob} blob - Recorded frames in video/webm blob.\r\n             * @memberof CanvasRecorder\r\n             * @example\r\n             * recorder.stop(function() {\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            whammy.compile(function(blob) {\r\n                if (!config.disableLogs) {\r\n                    console.log('Recording finished!');\r\n                }\r\n\r\n                that.blob = blob;\r\n\r\n                if (that.blob.forEach) {\r\n                    that.blob = new Blob([], {\r\n                        type: 'video/webm'\r\n                    });\r\n                }\r\n\r\n                if (callback) {\r\n                    callback(that.blob);\r\n                }\r\n\r\n                whammy.frames = [];\r\n            });\r\n        });\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.pause();\r\n            return;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.resume();\r\n            return;\r\n        }\r\n\r\n        if (!isRecording) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (isRecording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isRecording = false;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'CanvasRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    function cloneCanvas() {\r\n        //create a new canvas\r\n        var newCanvas = document.createElement('canvas');\r\n        var context = newCanvas.getContext('2d');\r\n\r\n        //set dimensions\r\n        newCanvas.width = htmlElement.width;\r\n        newCanvas.height = htmlElement.height;\r\n\r\n        //apply the old canvas to the new one\r\n        context.drawImage(htmlElement, 0, 0);\r\n\r\n        //return the new canvas\r\n        return newCanvas;\r\n    }\r\n\r\n    function drawCanvasFrame() {\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawCanvasFrame, 500);\r\n        }\r\n\r\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\r\n            var duration = new Date().getTime() - lastTime;\r\n            // via #206, by Jack i.e. @Seymourr\r\n            lastTime = new Date().getTime();\r\n\r\n            whammy.frames.push({\r\n                image: cloneCanvas(),\r\n                duration: duration\r\n            });\r\n\r\n            if (isRecording) {\r\n                setTimeout(drawCanvasFrame, config.frameInterval);\r\n            }\r\n            return;\r\n        }\r\n\r\n        html2canvas(htmlElement, {\r\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\r\n            onrendered: function(canvas) {\r\n                var duration = new Date().getTime() - lastTime;\r\n                if (!duration) {\r\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n\r\n                // via #206, by Jack i.e. @Seymourr\r\n                lastTime = new Date().getTime();\r\n\r\n                whammy.frames.push({\r\n                    image: canvas.toDataURL('image/webp', 1),\r\n                    duration: duration\r\n                });\r\n\r\n                if (isRecording) {\r\n                    setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    var lastTime = new Date().getTime();\r\n\r\n    var whammy = new Whammy.Video(100);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.CanvasRecorder = CanvasRecorder;\r\n}\n\r\n// _________________\r\n// WhammyRecorder.js\r\n\r\n/**\r\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\r\n * @summary Video recording feature in Chrome.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WhammyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WhammyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction WhammyRecorder(mediaStream, config) {\r\n\r\n    config = config || {};\r\n\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('Using frames-interval:', config.frameInterval);\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (!config.width) {\r\n            config.width = 320;\r\n        }\r\n\r\n        if (!config.height) {\r\n            config.height = 240;\r\n        }\r\n\r\n        if (!config.video) {\r\n            config.video = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        if (!config.canvas) {\r\n            config.canvas = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        canvas.width = config.canvas.width || 320;\r\n        canvas.height = config.canvas.height || 240;\r\n\r\n        context = canvas.getContext('2d');\r\n\r\n        // setting defaults\r\n        if (config.video && config.video instanceof HTMLVideoElement) {\r\n            video = config.video.cloneNode();\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        } else {\r\n            video = document.createElement('video');\r\n\r\n            setSrcObject(mediaStream, video);\r\n\r\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\r\n                if (config.initCallback) {\r\n                    config.initCallback();\r\n                }\r\n            };\r\n\r\n            video.width = config.video.width;\r\n            video.height = config.video.height;\r\n        }\r\n\r\n        video.muted = true;\r\n        video.play();\r\n\r\n        lastTime = new Date().getTime();\r\n        whammy = new Whammy.Video();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\r\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\r\n        }\r\n\r\n        drawFrames(config.frameInterval);\r\n    };\r\n\r\n    /**\r\n     * Draw and push frames to Whammy\r\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\r\n     */\r\n    function drawFrames(frameInterval) {\r\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\r\n\r\n        var duration = new Date().getTime() - lastTime;\r\n        if (!duration) {\r\n            return setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawFrames, 100);\r\n        }\r\n\r\n        // via #206, by Jack i.e. @Seymourr\r\n        lastTime = new Date().getTime();\r\n\r\n        if (video.paused) {\r\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n            // Tweak for Android Chrome\r\n            video.play();\r\n        }\r\n\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        whammy.frames.push({\r\n            duration: duration,\r\n            image: canvas.toDataURL('image/webp')\r\n        });\r\n\r\n        if (!isStopDrawing) {\r\n            setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n    }\r\n\r\n    function asyncLoop(o) {\r\n        var i = -1,\r\n            length = o.length;\r\n\r\n        (function loop() {\r\n            i++;\r\n            if (i === length) {\r\n                o.callback();\r\n                return;\r\n            }\r\n\r\n            // \"setTimeout\" added by Jim McLeod\r\n            setTimeout(function() {\r\n                o.functionToLoop(loop, i);\r\n            }, 1);\r\n        })();\r\n    }\r\n\r\n\r\n    /**\r\n     * remove black frames from the beginning to the specified frame\r\n     * @param {Array} _frames - array of frames to be checked\r\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\r\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\r\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\r\n     * @returns {Array} - array of frames\r\n     */\r\n    // pull#293 by @volodalexey\r\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\r\n        var localCanvas = document.createElement('canvas');\r\n        localCanvas.width = canvas.width;\r\n        localCanvas.height = canvas.height;\r\n        var context2d = localCanvas.getContext('2d');\r\n        var resultFrames = [];\r\n\r\n        var checkUntilNotBlack = _framesToCheck === -1;\r\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\r\n            _framesToCheck : _frames.length;\r\n        var sampleColor = {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0\r\n        };\r\n        var maxColorDifference = Math.sqrt(\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2)\r\n        );\r\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\r\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\r\n        var doNotCheckNext = false;\r\n\r\n        asyncLoop({\r\n            length: endCheckFrame,\r\n            functionToLoop: function(loop, f) {\r\n                var matchPixCount, endPixCheck, maxPixCount;\r\n\r\n                var finishImage = function() {\r\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\r\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\r\n                    } else {\r\n                        // console.log('frame is passed : ' + f);\r\n                        if (checkUntilNotBlack) {\r\n                            doNotCheckNext = true;\r\n                        }\r\n                        resultFrames.push(_frames[f]);\r\n                    }\r\n                    loop();\r\n                };\r\n\r\n                if (!doNotCheckNext) {\r\n                    var image = new Image();\r\n                    image.onload = function() {\r\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\r\n                        matchPixCount = 0;\r\n                        endPixCheck = imageData.data.length;\r\n                        maxPixCount = imageData.data.length / 4;\r\n\r\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\r\n                            var currentColor = {\r\n                                r: imageData.data[pix],\r\n                                g: imageData.data[pix + 1],\r\n                                b: imageData.data[pix + 2]\r\n                            };\r\n                            var colorDifference = Math.sqrt(\r\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\r\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\r\n                                Math.pow(currentColor.b - sampleColor.b, 2)\r\n                            );\r\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\r\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\r\n                                matchPixCount++;\r\n                            }\r\n                        }\r\n                        finishImage();\r\n                    };\r\n                    image.src = _frames[f].image;\r\n                } else {\r\n                    finishImage();\r\n                }\r\n            },\r\n            callback: function() {\r\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\r\n\r\n                if (resultFrames.length <= 0) {\r\n                    // at least one last frame should be available for next manipulation\r\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\r\n                    resultFrames.push(_frames[_frames.length - 1]);\r\n                }\r\n                callback(resultFrames);\r\n            }\r\n        });\r\n    }\r\n\r\n    var isStopDrawing = false;\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        isStopDrawing = true;\r\n\r\n        var _this = this;\r\n        // analyse of all frames takes some time!\r\n        setTimeout(function() {\r\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\r\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\r\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\r\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\r\n                whammy.frames = frames;\r\n\r\n                // to display advertisement images!\r\n                if (config.advertisement && config.advertisement.length) {\r\n                    whammy.frames = config.advertisement.concat(whammy.frames);\r\n                }\r\n\r\n                /**\r\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\r\n                 * @memberof WhammyRecorder\r\n                 * @example\r\n                 * recorder.stop(function() {\r\n                 *     var blob = recorder.blob;\r\n                 * });\r\n                 */\r\n                whammy.compile(function(blob) {\r\n                    _this.blob = blob;\r\n\r\n                    if (_this.blob.forEach) {\r\n                        _this.blob = new Blob([], {\r\n                            type: 'video/webm'\r\n                        });\r\n                    }\r\n\r\n                    if (callback) {\r\n                        callback(_this.blob);\r\n                    }\r\n                });\r\n            });\r\n        }, 10);\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (isStopDrawing) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (!isStopDrawing) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isStopDrawing = true;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'WhammyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    var video;\r\n    var lastTime;\r\n    var whammy;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WhammyRecorder = WhammyRecorder;\r\n}\n\r\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\r\n// _________\r\n// Whammy.js\r\n\r\n// todo: Firefox now supports webp for webm containers!\r\n// their MediaRecorder implementation works well!\r\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\r\n\r\n/**\r\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\r\n * @summary A real time javascript webm encoder based on a canvas hack.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef Whammy\r\n * @class\r\n * @example\r\n * var recorder = new Whammy().Video(15);\r\n * recorder.add(context || canvas || dataURL);\r\n * var output = recorder.compile();\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Whammy = (function() {\r\n    // a more abstract-ish API\r\n\r\n    function WhammyVideo(duration) {\r\n        this.frames = [];\r\n        this.duration = duration || 1;\r\n        this.quality = 0.8;\r\n    }\r\n\r\n    /**\r\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.add(canvas || context || 'image/webp');\r\n     * @param {string} frame - Canvas || Context || image/webp\r\n     * @param {number} duration - Stick a duration (in milliseconds)\r\n     */\r\n    WhammyVideo.prototype.add = function(frame, duration) {\r\n        if ('canvas' in frame) { //CanvasRenderingContext2D\r\n            frame = frame.canvas;\r\n        }\r\n\r\n        if ('toDataURL' in frame) {\r\n            frame = frame.toDataURL('image/webp', this.quality);\r\n        }\r\n\r\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\r\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\r\n        }\r\n        this.frames.push({\r\n            image: frame,\r\n            duration: duration || this.duration\r\n        });\r\n    };\r\n\r\n    function processInWebWorker(_function) {\r\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n            'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(blob);\r\n        URL.revokeObjectURL(blob);\r\n        return worker;\r\n    }\r\n\r\n    function whammyInWebWorker(frames) {\r\n        function ArrayToWebM(frames) {\r\n            var info = checkFrames(frames);\r\n            if (!info) {\r\n                return [];\r\n            }\r\n\r\n            var clusterMaxDuration = 30000;\r\n\r\n            var EBML = [{\r\n                'id': 0x1a45dfa3, // EBML\r\n                'data': [{\r\n                    'data': 1,\r\n                    'id': 0x4286 // EBMLVersion\r\n                }, {\r\n                    'data': 1,\r\n                    'id': 0x42f7 // EBMLReadVersion\r\n                }, {\r\n                    'data': 4,\r\n                    'id': 0x42f2 // EBMLMaxIDLength\r\n                }, {\r\n                    'data': 8,\r\n                    'id': 0x42f3 // EBMLMaxSizeLength\r\n                }, {\r\n                    'data': 'webm',\r\n                    'id': 0x4282 // DocType\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4287 // DocTypeVersion\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4285 // DocTypeReadVersion\r\n                }]\r\n            }, {\r\n                'id': 0x18538067, // Segment\r\n                'data': [{\r\n                    'id': 0x1549a966, // Info\r\n                    'data': [{\r\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\r\n                        'id': 0x2ad7b1 // TimecodeScale\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x4d80 // MuxingApp\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x5741 // WritingApp\r\n                    }, {\r\n                        'data': doubleToString(info.duration),\r\n                        'id': 0x4489 // Duration\r\n                    }]\r\n                }, {\r\n                    'id': 0x1654ae6b, // Tracks\r\n                    'data': [{\r\n                        'id': 0xae, // TrackEntry\r\n                        'data': [{\r\n                            'data': 1,\r\n                            'id': 0xd7 // TrackNumber\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x73c5 // TrackUID\r\n                        }, {\r\n                            'data': 0,\r\n                            'id': 0x9c // FlagLacing\r\n                        }, {\r\n                            'data': 'und',\r\n                            'id': 0x22b59c // Language\r\n                        }, {\r\n                            'data': 'V_VP8',\r\n                            'id': 0x86 // CodecID\r\n                        }, {\r\n                            'data': 'VP8',\r\n                            'id': 0x258688 // CodecName\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x83 // TrackType\r\n                        }, {\r\n                            'id': 0xe0, // Video\r\n                            'data': [{\r\n                                'data': info.width,\r\n                                'id': 0xb0 // PixelWidth\r\n                            }, {\r\n                                'data': info.height,\r\n                                'id': 0xba // PixelHeight\r\n                            }]\r\n                        }]\r\n                    }]\r\n                }]\r\n            }];\r\n\r\n            //Generate clusters (max duration)\r\n            var frameNumber = 0;\r\n            var clusterTimecode = 0;\r\n            while (frameNumber < frames.length) {\r\n\r\n                var clusterFrames = [];\r\n                var clusterDuration = 0;\r\n                do {\r\n                    clusterFrames.push(frames[frameNumber]);\r\n                    clusterDuration += frames[frameNumber].duration;\r\n                    frameNumber++;\r\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\r\n\r\n                var clusterCounter = 0;\r\n                var cluster = {\r\n                    'id': 0x1f43b675, // Cluster\r\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\r\n                }; //Add cluster to segment\r\n                EBML[1].data.push(cluster);\r\n                clusterTimecode += clusterDuration;\r\n            }\r\n\r\n            return generateEBML(EBML);\r\n        }\r\n\r\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\r\n            return [{\r\n                'data': clusterTimecode,\r\n                'id': 0xe7 // Timecode\r\n            }].concat(clusterFrames.map(function(webp) {\r\n                var block = makeSimpleBlock({\r\n                    discardable: 0,\r\n                    frame: webp.data.slice(4),\r\n                    invisible: 0,\r\n                    keyframe: 1,\r\n                    lacing: 0,\r\n                    trackNum: 1,\r\n                    timecode: Math.round(clusterCounter)\r\n                });\r\n                clusterCounter += webp.duration;\r\n                return {\r\n                    data: block,\r\n                    id: 0xa3\r\n                };\r\n            }));\r\n        }\r\n\r\n        // sums the lengths of all the frames and gets the duration\r\n\r\n        function checkFrames(frames) {\r\n            if (!frames[0]) {\r\n                postMessage({\r\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\r\n                });\r\n                return;\r\n            }\r\n\r\n            var width = frames[0].width,\r\n                height = frames[0].height,\r\n                duration = frames[0].duration;\r\n\r\n            for (var i = 1; i < frames.length; i++) {\r\n                duration += frames[i].duration;\r\n            }\r\n            return {\r\n                duration: duration,\r\n                width: width,\r\n                height: height\r\n            };\r\n        }\r\n\r\n        function numToBuffer(num) {\r\n            var parts = [];\r\n            while (num > 0) {\r\n                parts.push(num & 0xff);\r\n                num = num >> 8;\r\n            }\r\n            return new Uint8Array(parts.reverse());\r\n        }\r\n\r\n        function strToBuffer(str) {\r\n            return new Uint8Array(str.split('').map(function(e) {\r\n                return e.charCodeAt(0);\r\n            }));\r\n        }\r\n\r\n        function bitsToBuffer(bits) {\r\n            var data = [];\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data.push(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return new Uint8Array(data);\r\n        }\r\n\r\n        function generateEBML(json) {\r\n            var ebml = [];\r\n            for (var i = 0; i < json.length; i++) {\r\n                var data = json[i].data;\r\n\r\n                if (typeof data === 'object') {\r\n                    data = generateEBML(data);\r\n                }\r\n\r\n                if (typeof data === 'number') {\r\n                    data = bitsToBuffer(data.toString(2));\r\n                }\r\n\r\n                if (typeof data === 'string') {\r\n                    data = strToBuffer(data);\r\n                }\r\n\r\n                var len = data.size || data.byteLength || data.length;\r\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\r\n                var sizeToString = len.toString(2);\r\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\r\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\r\n\r\n                ebml.push(numToBuffer(json[i].id));\r\n                ebml.push(bitsToBuffer(size));\r\n                ebml.push(data);\r\n            }\r\n\r\n            return new Blob(ebml, {\r\n                type: 'video/webm'\r\n            });\r\n        }\r\n\r\n        function toBinStrOld(bits) {\r\n            var data = '';\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return data;\r\n        }\r\n\r\n        function makeSimpleBlock(data) {\r\n            var flags = 0;\r\n\r\n            if (data.keyframe) {\r\n                flags |= 128;\r\n            }\r\n\r\n            if (data.invisible) {\r\n                flags |= 8;\r\n            }\r\n\r\n            if (data.lacing) {\r\n                flags |= (data.lacing << 1);\r\n            }\r\n\r\n            if (data.discardable) {\r\n                flags |= 1;\r\n            }\r\n\r\n            if (data.trackNum > 127) {\r\n                throw 'TrackNumber > 127 not supported';\r\n            }\r\n\r\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).join('') + data.frame;\r\n\r\n            return out;\r\n        }\r\n\r\n        function parseWebP(riff) {\r\n            var VP8 = riff.RIFF[0].WEBP[0];\r\n\r\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\r\n            for (var i = 0, c = []; i < 4; i++) {\r\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\r\n            }\r\n\r\n            var width, height, tmp;\r\n\r\n            //the code below is literally copied verbatim from the bitstream spec\r\n            tmp = (c[1] << 8) | c[0];\r\n            width = tmp & 0x3FFF;\r\n            tmp = (c[3] << 8) | c[2];\r\n            height = tmp & 0x3FFF;\r\n            return {\r\n                width: width,\r\n                height: height,\r\n                data: VP8,\r\n                riff: riff\r\n            };\r\n        }\r\n\r\n        function getStrLength(string, offset) {\r\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\r\n                var unpadded = i.charCodeAt(0).toString(2);\r\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\r\n            }).join(''), 2);\r\n        }\r\n\r\n        function parseRIFF(string) {\r\n            var offset = 0;\r\n            var chunks = {};\r\n\r\n            while (offset < string.length) {\r\n                var id = string.substr(offset, 4);\r\n                var len = getStrLength(string, offset);\r\n                var data = string.substr(offset + 4 + 4, len);\r\n                offset += 4 + 4 + len;\r\n                chunks[id] = chunks[id] || [];\r\n\r\n                if (id === 'RIFF' || id === 'LIST') {\r\n                    chunks[id].push(parseRIFF(data));\r\n                } else {\r\n                    chunks[id].push(data);\r\n                }\r\n            }\r\n            return chunks;\r\n        }\r\n\r\n        function doubleToString(num) {\r\n            return [].slice.call(\r\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).reverse().join('');\r\n        }\r\n\r\n        var webm = new ArrayToWebM(frames.map(function(frame) {\r\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\r\n            webp.duration = frame.duration;\r\n            return webp;\r\n        }));\r\n\r\n        postMessage(webm);\r\n    }\r\n\r\n    /**\r\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.compile(function(blob) {\r\n     *    // blob.size - blob.type\r\n     * });\r\n     */\r\n    WhammyVideo.prototype.compile = function(callback) {\r\n        var webWorker = processInWebWorker(whammyInWebWorker);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            if (event.data.error) {\r\n                console.error(event.data.error);\r\n                return;\r\n            }\r\n            callback(event.data);\r\n        };\r\n\r\n        webWorker.postMessage(this.frames);\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * A more abstract-ish API.\r\n         * @method\r\n         * @memberof Whammy\r\n         * @example\r\n         * recorder = new Whammy().Video(0.8, 100);\r\n         * @param {?number} speed - 0.8\r\n         * @param {?number} quality - 100\r\n         */\r\n        Video: WhammyVideo\r\n    };\r\n})();\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Whammy = Whammy;\r\n}\n\r\n// ______________ (indexed-db)\r\n// DiskStorage.js\r\n\r\n/**\r\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\r\n * @summary Writing blobs into IndexedDB.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * DiskStorage.Store({\r\n *     audioBlob: yourAudioBlob,\r\n *     videoBlob: yourVideoBlob,\r\n *     gifBlob  : yourGifBlob\r\n * });\r\n * DiskStorage.Fetch(function(dataURL, type) {\r\n *     if(type === 'audioBlob') { }\r\n *     if(type === 'videoBlob') { }\r\n *     if(type === 'gifBlob')   { }\r\n * });\r\n * // DiskStorage.dataStoreName = 'recordRTC';\r\n * // DiskStorage.onError = function(error) { };\r\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\r\n * @property {function} Store - This method stores blobs in IndexedDB.\r\n * @property {function} onError - This function is invoked for any known/unknown error.\r\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\n\r\nvar DiskStorage = {\r\n    /**\r\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.init();\r\n     */\r\n    init: function() {\r\n        var self = this;\r\n\r\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\r\n            console.error('IndexedDB API are not available in this browser.');\r\n            return;\r\n        }\r\n\r\n        var dbVersion = 1;\r\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\r\n            db;\r\n        var request = indexedDB.open(dbName, dbVersion);\r\n\r\n        function createObjectStore(dataBase) {\r\n            dataBase.createObjectStore(self.dataStoreName);\r\n        }\r\n\r\n        function putInDB() {\r\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\r\n\r\n            if (self.videoBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\r\n            }\r\n\r\n            if (self.gifBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\r\n            }\r\n\r\n            if (self.audioBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\r\n            }\r\n\r\n            function getFromStore(portionName) {\r\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\r\n                    if (self.callback) {\r\n                        self.callback(event.target.result, portionName);\r\n                    }\r\n                };\r\n            }\r\n\r\n            getFromStore('audioBlob');\r\n            getFromStore('videoBlob');\r\n            getFromStore('gifBlob');\r\n        }\r\n\r\n        request.onerror = self.onError;\r\n\r\n        request.onsuccess = function() {\r\n            db = request.result;\r\n            db.onerror = self.onError;\r\n\r\n            if (db.setVersion) {\r\n                if (db.version !== dbVersion) {\r\n                    var setVersion = db.setVersion(dbVersion);\r\n                    setVersion.onsuccess = function() {\r\n                        createObjectStore(db);\r\n                        putInDB();\r\n                    };\r\n                } else {\r\n                    putInDB();\r\n                }\r\n            } else {\r\n                putInDB();\r\n            }\r\n        };\r\n        request.onupgradeneeded = function(event) {\r\n            createObjectStore(event.target.result);\r\n        };\r\n    },\r\n    /**\r\n     * This method fetches stored blobs from IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Fetch(function(dataURL, type) {\r\n     *     if(type === 'audioBlob') { }\r\n     *     if(type === 'videoBlob') { }\r\n     *     if(type === 'gifBlob')   { }\r\n     * });\r\n     */\r\n    Fetch: function(callback) {\r\n        this.callback = callback;\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This method stores blobs in IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Store({\r\n     *     audioBlob: yourAudioBlob,\r\n     *     videoBlob: yourVideoBlob,\r\n     *     gifBlob  : yourGifBlob\r\n     * });\r\n     */\r\n    Store: function(config) {\r\n        this.audioBlob = config.audioBlob;\r\n        this.videoBlob = config.videoBlob;\r\n        this.gifBlob = config.gifBlob;\r\n\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This function is invoked for any known/unknown error.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.onError = function(error){\r\n     *     alerot( JSON.stringify(error) );\r\n     * };\r\n     */\r\n    onError: function(error) {\r\n        console.error(JSON.stringify(error, null, '\\t'));\r\n    },\r\n\r\n    /**\r\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.dataStoreName = 'recordRTC';\r\n     */\r\n    dataStoreName: 'recordRTC',\r\n    dbName: null\r\n};\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.DiskStorage = DiskStorage;\r\n}\n\r\n// ______________\r\n// GifRecorder.js\r\n\r\n/**\r\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GifRecorder\r\n * @class\r\n * @example\r\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     img.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\r\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\r\n */\r\n\r\nfunction GifRecorder(mediaStream, config) {\r\n    if (typeof GIFEncoder === 'undefined') {\r\n        var script = document.createElement('script');\r\n        script.src = 'https://cdn.webrtc-experiment.com/gif-recorder.js';\r\n        (document.body || document.documentElement).appendChild(script);\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (typeof GIFEncoder === 'undefined') {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isLoadedMetaData) {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isHTMLObject) {\r\n            if (!config.width) {\r\n                config.width = video.offsetWidth || 320;\r\n            }\r\n\r\n            if (!config.height) {\r\n                config.height = video.offsetHeight || 240;\r\n            }\r\n\r\n            if (!config.video) {\r\n                config.video = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            if (!config.canvas) {\r\n                config.canvas = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            canvas.width = config.canvas.width || 320;\r\n            canvas.height = config.canvas.height || 240;\r\n\r\n            video.width = config.video.width || 320;\r\n            video.height = config.video.height || 240;\r\n        }\r\n\r\n        // external library to record as GIF images\r\n        gifEncoder = new GIFEncoder();\r\n\r\n        // void setRepeat(int iter) \r\n        // Sets the number of times the set of GIF frames should be played. \r\n        // Default is 1; 0 means play indefinitely.\r\n        gifEncoder.setRepeat(0);\r\n\r\n        // void setFrameRate(Number fps) \r\n        // Sets frame rate in frames per second. \r\n        // Equivalent to setDelay(1000/fps).\r\n        // Using \"setDelay\" instead of \"setFrameRate\"\r\n        gifEncoder.setDelay(config.frameRate || 200);\r\n\r\n        // void setQuality(int quality) \r\n        // Sets quality of color quantization (conversion of images to the \r\n        // maximum 256 colors allowed by the GIF specification). \r\n        // Lower values (minimum = 1) produce better colors, \r\n        // but slow processing significantly. 10 is the default, \r\n        // and produces good color mapping at reasonable speeds. \r\n        // Values greater than 20 do not yield significant improvements in speed.\r\n        gifEncoder.setQuality(config.quality || 10);\r\n\r\n        // Boolean start() \r\n        // This writes the GIF Header and returns false if it fails.\r\n        gifEncoder.start();\r\n\r\n        if (typeof config.onGifRecordingStarted === 'function') {\r\n            config.onGifRecordingStarted();\r\n        }\r\n\r\n        startTime = Date.now();\r\n\r\n        function drawVideoFrame(time) {\r\n            if (self.clearedRecordedData === true) {\r\n                return;\r\n            }\r\n\r\n            if (isPausedRecording) {\r\n                return setTimeout(function() {\r\n                    drawVideoFrame(time);\r\n                }, 100);\r\n            }\r\n\r\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n            if (typeof lastFrameTime === undefined) {\r\n                lastFrameTime = time;\r\n            }\r\n\r\n            // ~10 fps\r\n            if (time - lastFrameTime < 90) {\r\n                return;\r\n            }\r\n\r\n            if (!isHTMLObject && video.paused) {\r\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n                // Tweak for Android Chrome\r\n                video.play();\r\n            }\r\n\r\n            if (!isHTMLObject) {\r\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            if (config.onGifPreview) {\r\n                config.onGifPreview(canvas.toDataURL('image/png'));\r\n            }\r\n\r\n            gifEncoder.addFrame(context);\r\n            lastFrameTime = time;\r\n        }\r\n\r\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     img.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (lastAnimationFrame) {\r\n            cancelAnimationFrame(lastAnimationFrame);\r\n        }\r\n\r\n        endTime = Date.now();\r\n\r\n        /**\r\n         * @property {Blob} blob - The recorded blob object.\r\n         * @memberof GifRecorder\r\n         * @example\r\n         * recorder.stop(function(){\r\n         *     var blob = recorder.blob;\r\n         * });\r\n         */\r\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\r\n            type: 'image/gif'\r\n        });\r\n\r\n        callback(this.blob);\r\n\r\n        // bug: find a way to clear old recorded blobs\r\n        gifEncoder.stream().bin = [];\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        self.clearedRecordedData = true;\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        if (gifEncoder) {\r\n            gifEncoder.stream().bin = [];\r\n        }\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'GifRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    if (isHTMLObject) {\r\n        if (mediaStream instanceof CanvasRenderingContext2D) {\r\n            context = mediaStream;\r\n            canvas = context.canvas;\r\n        } else if (mediaStream instanceof HTMLCanvasElement) {\r\n            context = mediaStream.getContext('2d');\r\n            canvas = mediaStream;\r\n        }\r\n    }\r\n\r\n    var isLoadedMetaData = true;\r\n\r\n    if (!isHTMLObject) {\r\n        var video = document.createElement('video');\r\n        video.muted = true;\r\n        video.autoplay = true;\r\n\r\n        isLoadedMetaData = false;\r\n        video.onloadedmetadata = function() {\r\n            isLoadedMetaData = true;\r\n        };\r\n\r\n        setSrcObject(mediaStream, video);\r\n\r\n        video.play();\r\n    }\r\n\r\n    var lastAnimationFrame = null;\r\n    var startTime, endTime, lastFrameTime;\r\n\r\n    var gifEncoder;\r\n\r\n    var self = this;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.GifRecorder = GifRecorder;\r\n}\n\r\n// Last time updated: 2019-06-21 4:09:42 AM UTC\r\n\r\n// ________________________\r\n// MultiStreamsMixer v1.2.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nfunction MultiStreamsMixer(arrayOfMediaStreams, elementClass) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (typeof RecordRTC !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n            global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {\r\n                documentElement: {\r\n                    appendChild: function() {\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    },\r\n                    style: {}\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            that.HTMLVideoElement = function() {};\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: ''\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    // requires: chrome://flags/#enable-experimental-web-platform-features\r\n\r\n    elementClass = elementClass || 'multi-streams-mixer';\r\n\r\n    var videos = [];\r\n    var isStopDrawingFrames = false;\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n    canvas.style.opacity = 0;\r\n    canvas.style.position = 'absolute';\r\n    canvas.style.zIndex = -1;\r\n    canvas.style.top = '-1000em';\r\n    canvas.style.left = '-1000em';\r\n    canvas.className = elementClass;\r\n    (document.body || document.documentElement).appendChild(canvas);\r\n\r\n    this.disableLogs = false;\r\n    this.frameInterval = 10;\r\n\r\n    this.width = 360;\r\n    this.height = 240;\r\n\r\n    // use gain node to prevent echo\r\n    this.useGainNode = true;\r\n\r\n    var self = this;\r\n\r\n    // _____________________________\r\n    // Cross-Browser-Declarations.js\r\n\r\n    // WebAudio API representer\r\n    var AudioContext = window.AudioContext;\r\n\r\n    if (typeof AudioContext === 'undefined') {\r\n        if (typeof webkitAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = webkitAudioContext;\r\n        }\r\n\r\n        if (typeof mozAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = mozAudioContext;\r\n        }\r\n    }\r\n\r\n    /*jshint -W079 */\r\n    var URL = window.URL;\r\n\r\n    if (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n        /*global URL:true */\r\n        URL = webkitURL;\r\n    }\r\n\r\n    if (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n        if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n        }\r\n\r\n        if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.mozGetUserMedia;\r\n        }\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        // override \"stop\" method for all browsers\r\n        if (typeof MediaStream.prototype.stop === 'undefined') {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    var Storage = {};\r\n\r\n    if (typeof AudioContext !== 'undefined') {\r\n        Storage.AudioContext = AudioContext;\r\n    } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Storage.AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    function setSrcObject(stream, element) {\r\n        if ('srcObject' in element) {\r\n            element.srcObject = stream;\r\n        } else if ('mozSrcObject' in element) {\r\n            element.mozSrcObject = stream;\r\n        } else {\r\n            element.srcObject = stream;\r\n        }\r\n    }\r\n\r\n    this.startDrawingFrames = function() {\r\n        drawVideosToCanvas();\r\n    };\r\n\r\n    function drawVideosToCanvas() {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var videosLength = videos.length;\r\n\r\n        var fullcanvas = false;\r\n        var remaining = [];\r\n        videos.forEach(function(video) {\r\n            if (!video.stream) {\r\n                video.stream = {};\r\n            }\r\n\r\n            if (video.stream.fullcanvas) {\r\n                fullcanvas = video;\r\n            } else {\r\n                // todo: video.stream.active or video.stream.live to fix blank frames issues?\r\n                remaining.push(video);\r\n            }\r\n        });\r\n\r\n        if (fullcanvas) {\r\n            canvas.width = fullcanvas.stream.width;\r\n            canvas.height = fullcanvas.stream.height;\r\n        } else if (remaining.length) {\r\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\r\n\r\n            var height = 1;\r\n            if (videosLength === 3 || videosLength === 4) {\r\n                height = 2;\r\n            }\r\n            if (videosLength === 5 || videosLength === 6) {\r\n                height = 3;\r\n            }\r\n            if (videosLength === 7 || videosLength === 8) {\r\n                height = 4;\r\n            }\r\n            if (videosLength === 9 || videosLength === 10) {\r\n                height = 5;\r\n            }\r\n            canvas.height = remaining[0].height * height;\r\n        } else {\r\n            canvas.width = self.width || 360;\r\n            canvas.height = self.height || 240;\r\n        }\r\n\r\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\r\n            drawImage(fullcanvas);\r\n        }\r\n\r\n        remaining.forEach(function(video, idx) {\r\n            drawImage(video, idx);\r\n        });\r\n\r\n        setTimeout(drawVideosToCanvas, self.frameInterval);\r\n    }\r\n\r\n    function drawImage(video, idx) {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n        var width = video.width;\r\n        var height = video.height;\r\n\r\n        if (idx === 1) {\r\n            x = video.width;\r\n        }\r\n\r\n        if (idx === 2) {\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 3) {\r\n            x = video.width;\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 4) {\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 5) {\r\n            x = video.width;\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 6) {\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (idx === 7) {\r\n            x = video.width;\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (typeof video.stream.left !== 'undefined') {\r\n            x = video.stream.left;\r\n        }\r\n\r\n        if (typeof video.stream.top !== 'undefined') {\r\n            y = video.stream.top;\r\n        }\r\n\r\n        if (typeof video.stream.width !== 'undefined') {\r\n            width = video.stream.width;\r\n        }\r\n\r\n        if (typeof video.stream.height !== 'undefined') {\r\n            height = video.stream.height;\r\n        }\r\n\r\n        context.drawImage(video, x, y, width, height);\r\n\r\n        if (typeof video.stream.onRender === 'function') {\r\n            video.stream.onRender(context, x, y, width, height, idx);\r\n        }\r\n    }\r\n\r\n    function getMixedStream() {\r\n        isStopDrawingFrames = false;\r\n        var mixedVideoStream = getMixedVideoStream();\r\n\r\n        var mixedAudioStream = getMixedAudioStream();\r\n        if (mixedAudioStream) {\r\n            mixedAudioStream.getTracks().filter(function(t) {\r\n                return t.kind === 'audio';\r\n            }).forEach(function(track) {\r\n                mixedVideoStream.addTrack(track);\r\n            });\r\n        }\r\n\r\n        var fullcanvas;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (stream.fullcanvas) {\r\n                fullcanvas = true;\r\n            }\r\n        });\r\n\r\n        // mixedVideoStream.prototype.appendStreams = appendStreams;\r\n        // mixedVideoStream.prototype.resetVideoStreams = resetVideoStreams;\r\n        // mixedVideoStream.prototype.clearRecordedData = clearRecordedData;\r\n\r\n        return mixedVideoStream;\r\n    }\r\n\r\n    function getMixedVideoStream() {\r\n        resetVideoStreams();\r\n\r\n        var capturedStream;\r\n\r\n        if ('captureStream' in canvas) {\r\n            capturedStream = canvas.captureStream();\r\n        } else if ('mozCaptureStream' in canvas) {\r\n            capturedStream = canvas.mozCaptureStream();\r\n        } else if (!self.disableLogs) {\r\n            console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');\r\n        }\r\n\r\n        var videoStream = new MediaStream();\r\n\r\n        capturedStream.getTracks().filter(function(t) {\r\n            return t.kind === 'video';\r\n        }).forEach(function(track) {\r\n            videoStream.addTrack(track);\r\n        });\r\n\r\n        canvas.stream = videoStream;\r\n\r\n        return videoStream;\r\n    }\r\n\r\n    function getMixedAudioStream() {\r\n        // via: @pehrsons\r\n        if (!Storage.AudioContextConstructor) {\r\n            Storage.AudioContextConstructor = new Storage.AudioContext();\r\n        }\r\n\r\n        self.audioContext = Storage.AudioContextConstructor;\r\n\r\n        self.audioSources = [];\r\n\r\n        if (self.useGainNode === true) {\r\n            self.gainNode = self.audioContext.createGain();\r\n            self.gainNode.connect(self.audioContext.destination);\r\n            self.gainNode.gain.value = 0; // don't hear self\r\n        }\r\n\r\n        var audioTracksLength = 0;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            audioTracksLength++;\r\n\r\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n\r\n            if (self.useGainNode === true) {\r\n                audioSource.connect(self.gainNode);\r\n            }\r\n\r\n            self.audioSources.push(audioSource);\r\n        });\r\n\r\n        if (!audioTracksLength) {\r\n            // because \"self.audioContext\" is not initialized\r\n            // that's why we've to ignore rest of the code\r\n            return;\r\n        }\r\n\r\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n        self.audioSources.forEach(function(audioSource) {\r\n            audioSource.connect(self.audioDestination);\r\n        });\r\n        return self.audioDestination.stream;\r\n    }\r\n\r\n    function getVideo(stream) {\r\n        var video = document.createElement('video');\r\n\r\n        setSrcObject(stream, video);\r\n\r\n        video.className = elementClass;\r\n\r\n        video.muted = true;\r\n        video.volume = 0;\r\n\r\n        video.width = stream.width || self.width || 360;\r\n        video.height = stream.height || self.height || 240;\r\n\r\n        video.play();\r\n\r\n        return video;\r\n    }\r\n\r\n    this.appendStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        streams.forEach(function(stream) {\r\n            var newStream = new MediaStream();\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                var video = getVideo(stream);\r\n                video.stream = stream;\r\n                videos.push(video);\r\n\r\n                newStream.addTrack(stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                })[0]);\r\n            }\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n                self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n                audioSource.connect(self.audioDestination);\r\n\r\n                newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                })[0]);\r\n            }\r\n\r\n            arrayOfMediaStreams.push(newStream);\r\n        });\r\n    };\r\n\r\n    this.releaseStreams = function() {\r\n        videos = [];\r\n        isStopDrawingFrames = true;\r\n\r\n        if (self.gainNode) {\r\n            self.gainNode.disconnect();\r\n            self.gainNode = null;\r\n        }\r\n\r\n        if (self.audioSources.length) {\r\n            self.audioSources.forEach(function(source) {\r\n                source.disconnect();\r\n            });\r\n            self.audioSources = [];\r\n        }\r\n\r\n        if (self.audioDestination) {\r\n            self.audioDestination.disconnect();\r\n            self.audioDestination = null;\r\n        }\r\n\r\n        if (self.audioContext) {\r\n            self.audioContext.close();\r\n        }\r\n\r\n        self.audioContext = null;\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (canvas.stream) {\r\n            canvas.stream.stop();\r\n            canvas.stream = null;\r\n        }\r\n    };\r\n\r\n    this.resetVideoStreams = function(streams) {\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        resetVideoStreams(streams);\r\n    };\r\n\r\n    function resetVideoStreams(streams) {\r\n        videos = [];\r\n        streams = streams || arrayOfMediaStreams;\r\n\r\n        // via: @adrian-ber\r\n        streams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            var video = getVideo(stream);\r\n            video.stream = stream;\r\n            videos.push(video);\r\n        });\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamsMixer';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    this.getMixedStream = getMixedStream;\r\n\r\n}\r\n\r\nif (typeof RecordRTC === 'undefined') {\r\n    if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n        module.exports = MultiStreamsMixer;\r\n    }\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('MultiStreamsMixer', [], function() {\r\n            return MultiStreamsMixer;\r\n        });\r\n    }\r\n}\n\r\n// ______________________\r\n// MultiStreamRecorder.js\r\n\r\n/*\r\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\r\n */\r\n\r\n/**\r\n * MultiStreamRecorder can record multiple videos in single container.\r\n * @summary Multi-videos recorder.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MultiStreamRecorder\r\n * @class\r\n * @example\r\n * var options = {\r\n *     mimeType: 'video/webm'\r\n * }\r\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\r\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\r\n */\r\n\r\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\r\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\r\n    var self = this;\r\n\r\n    var mixer;\r\n    var mediaRecorder;\r\n\r\n    options = options || {\r\n        elementClass: 'multi-streams-mixer',\r\n        mimeType: 'video/webm',\r\n        video: {\r\n            width: 360,\r\n            height: 240\r\n        }\r\n    };\r\n\r\n    if (!options.frameInterval) {\r\n        options.frameInterval = 10;\r\n    }\r\n\r\n    if (!options.video) {\r\n        options.video = {};\r\n    }\r\n\r\n    if (!options.video.width) {\r\n        options.video.width = 360;\r\n    }\r\n\r\n    if (!options.video.height) {\r\n        options.video.height = 240;\r\n    }\r\n\r\n    /**\r\n     * This method records all MediaStreams.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // github/muaz-khan/MultiStreamsMixer\r\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams, options.elementClass || 'multi-streams-mixer');\r\n\r\n        if (getAllVideoTracks().length) {\r\n            mixer.frameInterval = options.frameInterval || 10;\r\n            mixer.width = options.video.width || 360;\r\n            mixer.height = options.video.height || 240;\r\n            mixer.startDrawingFrames();\r\n        }\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n\r\n        // record using MediaRecorder API\r\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\r\n        mediaRecorder.record();\r\n    };\r\n\r\n    function getAllVideoTracks() {\r\n        var tracks = [];\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            getTracks(stream, 'video').forEach(function(track) {\r\n                tracks.push(track);\r\n            });\r\n        });\r\n        return tracks;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        mediaRecorder.stop(function(blob) {\r\n            self.blob = blob;\r\n\r\n            callback(blob);\r\n\r\n            self.clearRecordedData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (mixer) {\r\n            mixer.releaseStreams();\r\n            mixer = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add extra media-streams to existing recordings.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.addStreams([newAudioStream, newVideoStream]);\r\n     */\r\n    this.addStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        arrayOfMediaStreams.concat(streams);\r\n\r\n        if (!mediaRecorder || !mixer) {\r\n            return;\r\n        }\r\n\r\n        mixer.appendStreams(streams);\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\r\n     */\r\n    this.resetVideoStreams = function(streams) {\r\n        if (!mixer) {\r\n            return;\r\n        }\r\n\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        mixer.resetVideoStreams(streams);\r\n    };\r\n\r\n    /**\r\n     * Returns MultiStreamsMixer\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * let mixer = recorder.getMixer();\r\n     * mixer.appendStreams([newStream]);\r\n     */\r\n    this.getMixer = function(streams) {\r\n        return mixer;\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\r\n}\n\r\n// _____________________\r\n// RecordRTC.promises.js\r\n\r\n/**\r\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\r\n * @summary Promises for {@link RecordRTC}\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCPromisesHandler\r\n * @class\r\n * @example\r\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\r\n * recorder.startRecording()\r\n *         .then(successCB)\r\n *         .catch(errorCB);\r\n * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g. \r\n * recorder.recordRTC.onStateChanged = function(state) {};\r\n * recorder.recordRTC.setRecordingDuration(5000);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction RecordRTCPromisesHandler(mediaStream, options) {\r\n    if (!this) {\r\n        throw 'Use \"new RecordRTCPromisesHandler()\"';\r\n    }\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    var self = this;\r\n\r\n    /**\r\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internal = recorder.recordRTC.getInternalRecorder();\r\n     * alert(internal instanceof MediaStreamRecorder);\r\n     * recorder.recordRTC.onStateChanged = function(state) {};\r\n     */\r\n    self.recordRTC = new RecordRTC(mediaStream, options);\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.startRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.startRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.startRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method stops the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     var blob = recorder.getBlob();\r\n     * }).catch(errorCB);\r\n     */\r\n    this.stopRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.stopRecording(function(url) {\r\n                    self.blob = self.recordRTC.getBlob();\r\n\r\n                    if (!self.blob || !self.blob.size) {\r\n                        reject('Empty blob.', self.blob);\r\n                        return;\r\n                    }\r\n\r\n                    resolve(url);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.pauseRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.pauseRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.pauseRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.resumeRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.resumeRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.resumeRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns data-url for the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getDataURL().then(function(dataURL) {\r\n     *         window.open(dataURL);\r\n     *     }).catch(errorCB);;\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.getDataURL(function(dataURL) {\r\n                    resolve(dataURL);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getBlob().then(function(blob) {})\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getBlob = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getBlob());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Destroy RecordRTC instance. Clear all recorders and objects.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internalRecorder = await recorder.getInternalRecorder();\r\n     * if(internalRecorder instanceof MultiStreamRecorder) {\r\n     *     internalRecorder.addStreams([newAudioStream]);\r\n     *     internalRecorder.resetVideoStreams([screenStream]);\r\n     * }\r\n     * @returns {Object} Returns internal recording object.\r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getInternalRecorder());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.reset();\r\n     * recorder.startRecording(); // record again\r\n     */\r\n    this.reset = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.reset());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Destroy RecordRTC instance. Clear all recorders and objects.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.destroy().then(successCB).catch(errorCB);\r\n     */\r\n    this.destroy = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.destroy());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get recorder's readonly state.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let state = await recorder.getState();\r\n     * // or\r\n     * recorder.getState().then(state => { console.log(state); })\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getState());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.stopRecording();\r\n     * let blob = recorder.getBlob(); // or \"recorder.recordRTC.blob\"\r\n     * invokeSaveAsDialog(blob);\r\n     */\r\n    this.blob = null;\r\n\r\n    /**\r\n     * RecordRTC version number\r\n     * @property {String} version - Release version number.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @static\r\n     * @readonly\r\n     * @example\r\n     * alert(recorder.version);\r\n     */\r\n    this.version = '5.5.8';\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\r\n}\n\r\n// ______________________\r\n// WebAssemblyRecorder.js\r\n\r\n/**\r\n * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\r\n * @summary Video recording feature in Chrome, Firefox and maybe Edge.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WebAssemblyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WebAssemblyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024}\r\n */\r\nfunction WebAssemblyRecorder(stream, config) {\r\n    // based on: github.com/GoogleChromeLabs/webm-wasm\r\n\r\n    if (typeof ReadableStream === 'undefined' || typeof WritableStream === 'undefined') {\r\n        // because it fixes readable/writable streams issues\r\n        console.error('Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js');\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    config.width = config.width || 640;\r\n    config.height = config.height || 480;\r\n    config.frameRate = config.frameRate || 30;\r\n    config.bitrate = config.bitrate || 1200;\r\n\r\n    function createBufferURL(buffer, type) {\r\n        return URL.createObjectURL(new Blob([buffer], {\r\n            type: type || ''\r\n        }));\r\n    }\r\n\r\n    function cameraStream() {\r\n        return new ReadableStream({\r\n            start: function(controller) {\r\n                var cvs = document.createElement('canvas');\r\n                var video = document.createElement('video');\r\n                video.srcObject = stream;\r\n                video.onplaying = function() {\r\n                    cvs.width = config.width;\r\n                    cvs.height = config.height;\r\n                    var ctx = cvs.getContext('2d');\r\n                    var frameTimeout = 1000 / config.frameRate;\r\n                    setTimeout(function f() {\r\n                        ctx.drawImage(video, 0, 0);\r\n                        controller.enqueue(\r\n                            ctx.getImageData(0, 0, config.width, config.height)\r\n                        );\r\n                        setTimeout(f, frameTimeout);\r\n                    }, frameTimeout);\r\n                };\r\n                video.play();\r\n            }\r\n        });\r\n    }\r\n\r\n    var worker;\r\n\r\n    function startRecording(stream, buffer) {\r\n        if (!config.workerPath && !buffer) {\r\n            // is it safe to use @latest ?\r\n            fetch(\r\n                'https://unpkg.com/webm-wasm@latest/dist/webm-worker.js'\r\n            ).then(function(r) {\r\n                r.arrayBuffer().then(function(buffer) {\r\n                    startRecording(stream, buffer);\r\n                });\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!config.workerPath && buffer instanceof ArrayBuffer) {\r\n            var blob = new Blob([buffer], {\r\n                type: 'text/javascript'\r\n            });\r\n            config.workerPath = URL.createObjectURL(blob);\r\n        }\r\n\r\n        if (!config.workerPath) {\r\n            console.error('workerPath parameter is missing.');\r\n        }\r\n\r\n        worker = new Worker(config.workerPath);\r\n\r\n        worker.postMessage(config.webAssemblyPath || 'https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm');\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === 'READY') {\r\n                worker.postMessage({\r\n                    width: config.width,\r\n                    height: config.height,\r\n                    bitrate: config.bitrate || 1200,\r\n                    timebaseDen: config.frameRate || 30,\r\n                    realtime: true\r\n                });\r\n\r\n                cameraStream().pipeTo(new WritableStream({\r\n                    write: function(image) {\r\n                        if (!worker) {\r\n                            return;\r\n                        }\r\n\r\n                        worker.postMessage(image.data.buffer, [image.data.buffer]);\r\n                    }\r\n                }));\r\n            } else if (!!event.data) {\r\n                if (!isPaused) {\r\n                    arrayOfBuffers.push(event.data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n        startRecording(stream);\r\n\r\n        if (typeof config.initCallback === 'function') {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    var isPaused;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPaused = false;\r\n    };\r\n\r\n    function terminate() {\r\n        if (!worker) {\r\n            return;\r\n        }\r\n\r\n        worker.postMessage(null);\r\n        worker.terminate();\r\n        worker = null;\r\n    }\r\n\r\n    var arrayOfBuffers = [];\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        terminate();\r\n\r\n        this.blob = new Blob(arrayOfBuffers, {\r\n            type: 'video/webm'\r\n        });\r\n\r\n        callback(this.blob);\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'WebAssemblyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n\r\n        // todo: if recording-ON then STOP it first\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - The recorded blob object.\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(){\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WebAssemblyRecorder = WebAssemblyRecorder;\r\n}\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\n'use strict';\n\nmodule.exports = {\n  H264_STREAM_TYPE: 0x1B,\n  ADTS_STREAM_TYPE: 0x0F,\n  METADATA_STREAM_TYPE: 0x15\n};\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": 1,\n  \"lr\": 1,\n  \"rl\": 1\n};\nvar alignSetting = {\n  \"start\": 1,\n  \"middle\": 1,\n  \"end\": 1,\n  \"left\": 1,\n  \"right\": 1\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  this.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperties(this, {\n    \"id\": {\n      enumerable: true,\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    },\n\n    \"pauseOnExit\": {\n      enumerable: true,\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    },\n\n    \"startTime\": {\n      enumerable: true,\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"endTime\": {\n      enumerable: true,\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"text\": {\n      enumerable: true,\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"region\": {\n      enumerable: true,\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"vertical\": {\n      enumerable: true,\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"snapToLines\": {\n      enumerable: true,\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"line\": {\n      enumerable: true,\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"lineAlign\": {\n      enumerable: true,\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"position\": {\n      enumerable: true,\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"positionAlign\": {\n      enumerable: true,\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"size\": {\n      enumerable: true,\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    },\n\n    \"align\": {\n      enumerable: true,\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }\n  });\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  this.displayState = undefined;\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimStringTrim() {\n\tvar polyfill = getPolyfill();\n\tdefine(String.prototype, { trim: polyfill }, {\n\t\ttrim: function testTrim() {\n\t\t\treturn String.prototype.trim !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","module.exports = function mod(number, modulo) {\n\tvar remain = number % modulo;\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\n};\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","'use strict';\n\nvar GetIntrinsic = require('../GetIntrinsic');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\n\nvar has = require('has');\n\nvar predicates = {\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\n    if (ES.Type(Desc) !== 'Object') {\n      return false;\n    }\n    var allowed = {\n      '[[Configurable]]': true,\n      '[[Enumerable]]': true,\n      '[[Get]]': true,\n      '[[Set]]': true,\n      '[[Value]]': true,\n      '[[Writable]]': true\n    };\n\n    for (var key in Desc) { // eslint-disable-line\n      if (has(Desc, key) && !allowed[key]) {\n        return false;\n      }\n    }\n\n    var isData = has(Desc, '[[Value]]');\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\n    if (isData && IsAccessor) {\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\n    }\n    return true;\n  }\n};\n\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\n  var predicate = predicates[recordType];\n  if (typeof predicate !== 'function') {\n    throw new $SyntaxError('unknown record type: ' + recordType);\n  }\n  if (!predicate(ES, value)) {\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\n  }\n  console.log(predicate(ES, value), value);\n};\n","var $isNaN = Number.isNaN || function (a) { return a !== a; };\n\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\n","'use strict';\n\nvar bind = require('function-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar boundTrim = bind.call(Function.call, getPolyfill());\n\ndefine(boundTrim, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = boundTrim;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: \"rgba(255, 255, 255, 1)\",\n    backgroundColor:  \"rgba(0, 0, 0, 0.8)\",\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\",\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\"\n  };\n\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    direction: determineBidi(this.cueDiv),\n    writingMode: cue.vertical === \"\" ? \"horizontal-tb\"\n                                     : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                             : \"vertical-rl\",\n    unicodeBidi: \"plaintext\",\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  this.applyStyles(styles);\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n","// see https://tools.ietf.org/html/rfc1808\n\n/* jshint ignore:start */\n(function(root) { \n/* jshint ignore:end */\n\n  var URL_REGEX = /^((?:[a-zA-Z0-9+\\-.]+:)?)(\\/\\/[^\\/?#]*)?((?:[^\\/\\?#]*\\/)*.*?)??(;.*?)?(\\?.*?)?(#.*?)?$/;\n  var FIRST_SEGMENT_REGEX = /^([^\\/?#]*)(.*)$/;\n  var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n  var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/).*?(?=\\/)/g;\n\n  var URLToolkit = { // jshint ignore:line\n    // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n    // E.g\n    // With opts.alwaysNormalize = false (default, spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n    // With opts.alwaysNormalize = true (not spec compliant)\n    // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n    buildAbsoluteURL: function(baseURL, relativeURL, opts) {\n      opts = opts || {};\n      // remove any remaining space and CRLF\n      baseURL = baseURL.trim();\n      relativeURL = relativeURL.trim();\n      if (!relativeURL) {\n        // 2a) If the embedded URL is entirely empty, it inherits the\n        // entire base URL (i.e., is set equal to the base URL)\n        // and we are done.\n        if (!opts.alwaysNormalize) {\n          return baseURL;\n        }\n        var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n        if (!basePartsForNormalise) {\n          throw new Error('Error trying to parse base URL.');\n        }\n        basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n        return URLToolkit.buildURLFromParts(basePartsForNormalise);\n      }\n      var relativeParts = URLToolkit.parseURL(relativeURL);\n      if (!relativeParts) {\n        throw new Error('Error trying to parse relative URL.');\n      }\n      if (relativeParts.scheme) {\n        // 2b) If the embedded URL starts with a scheme name, it is\n        // interpreted as an absolute URL and we are done.\n        if (!opts.alwaysNormalize) {\n          return relativeURL;\n        }\n        relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n        return URLToolkit.buildURLFromParts(relativeParts);\n      }\n      var baseParts = URLToolkit.parseURL(baseURL);\n      if (!baseParts) {\n        throw new Error('Error trying to parse base URL.');\n      }\n      if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n        // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n        // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n        var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n        baseParts.netLoc = pathParts[1];\n        baseParts.path = pathParts[2];\n      }\n      if (baseParts.netLoc && !baseParts.path) {\n        baseParts.path = '/';\n      }\n      var builtParts = {\n        // 2c) Otherwise, the embedded URL inherits the scheme of\n        // the base URL.\n        scheme: baseParts.scheme,\n        netLoc: relativeParts.netLoc,\n        path: null,\n        params: relativeParts.params,\n        query: relativeParts.query,\n        fragment: relativeParts.fragment\n      };\n      if (!relativeParts.netLoc) {\n        // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n        // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n        // (if any) of the base URL.\n        builtParts.netLoc = baseParts.netLoc;\n        // 4) If the embedded URL path is preceded by a slash \"/\", the\n        // path is not relative and we skip to Step 7.\n        if (relativeParts.path[0] !== '/') {\n          if (!relativeParts.path) {\n            // 5) If the embedded URL path is empty (and not preceded by a\n            // slash), then the embedded URL inherits the base URL path\n            builtParts.path = baseParts.path;\n            // 5a) if the embedded URL's <params> is non-empty, we skip to\n            // step 7; otherwise, it inherits the <params> of the base\n            // URL (if any) and\n            if (!relativeParts.params) {\n              builtParts.params = baseParts.params;\n              // 5b) if the embedded URL's <query> is non-empty, we skip to\n              // step 7; otherwise, it inherits the <query> of the base\n              // URL (if any) and we skip to step 7.\n              if (!relativeParts.query) {\n                builtParts.query = baseParts.query;\n              }\n            }\n          } else {\n            // 6) The last segment of the base URL's path (anything\n            // following the rightmost slash \"/\", or the entire path if no\n            // slash is present) is removed and the embedded URL's path is\n            // appended in its place.\n            var baseURLPath = baseParts.path;\n            var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n            builtParts.path = URLToolkit.normalizePath(newPath);\n          }\n        }\n      }\n      if (builtParts.path === null) {\n        builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n      }\n      return URLToolkit.buildURLFromParts(builtParts);\n    },\n    parseURL: function(url) {\n      var parts = URL_REGEX.exec(url);\n      if (!parts) {\n        return null;\n      }\n      return {\n        scheme: parts[1] || '',\n        netLoc: parts[2] || '',\n        path: parts[3] || '',\n        params: parts[4] || '',\n        query: parts[5] || '',\n        fragment: parts[6] || ''\n      };\n    },\n    normalizePath: function(path) {\n      // The following operations are\n      // then applied, in order, to the new path:\n      // 6a) All occurrences of \"./\", where \".\" is a complete path\n      // segment, are removed.\n      // 6b) If the path ends with \".\" as a complete path segment,\n      // that \".\" is removed.\n      path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n      // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n      // complete path segment not equal to \"..\", are removed.\n      // Removal of these path segments is performed iteratively,\n      // removing the leftmost matching pattern on each iteration,\n      // until no matching pattern remains.\n      // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n      // complete path segment not equal to \"..\", that\n      // \"<segment>/..\" is removed.\n      while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {} // jshint ignore:line\n      return path.split('').reverse().join('');\n    },\n    buildURLFromParts: function(parts) {\n      return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n    }\n  };\n\n/* jshint ignore:start */\n  if(typeof exports === 'object' && typeof module === 'object')\n    module.exports = URLToolkit;\n  else if(typeof define === 'function' && define.amd)\n    define([], function() { return URLToolkit; });\n  else if(typeof exports === 'object')\n    exports[\"URLToolkit\"] = URLToolkit;\n  else\n    root[\"URLToolkit\"] = URLToolkit;\n})(this);\n/* jshint ignore:end */\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Parse mpeg2 transport stream packets to extract basic timing information\n */\n'use strict';\n\nvar StreamTypes = require('../m2ts/stream-types.js');\nvar handleRollover = require('../m2ts/timestamp-rollover-stream.js').handleRollover;\nvar probe = {};\nprobe.ts = require('../m2ts/probe.js');\nprobe.aac = require('../aac/utils.js');\n\n\nvar\n  PES_TIMESCALE = 90000,\n  MP2T_PACKET_LENGTH = 188, // bytes\n  SYNC_BYTE = 0x47;\n\n/**\n * walks through segment data looking for pat and pmt packets to parse out\n * program map table information\n */\nvar parsePsi_ = function(bytes, pmt) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type;\n\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pat':\n          if (!pmt.pid) {\n            pmt.pid = probe.ts.parsePat(packet);\n          }\n          break;\n        case 'pmt':\n          if (!pmt.table) {\n            pmt.table = probe.ts.parsePmt(packet);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // Found the pat and pmt, we can stop walking the segment\n      if (pmt.pid && pmt.table) {\n        return;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last audio pes packets\n */\nvar parseAudioPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed;\n\n  var endLoop = false;\n\n  // Start walking from start of segment to get first audio packet\n  while (endIndex <= bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last audio packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE &&\n        (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'audio' && pusi) {\n            parsed = probe.ts.parsePesTime(packet);\n            if (parsed) {\n              parsed.type = 'audio';\n              result.audio.push(parsed);\n              endLoop = true;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * walks through the segment data from the start and end to get timing information\n * for the first and last video pes packets as well as timing information for the first\n * key frame.\n */\nvar parseVideoPes_ = function(bytes, pmt, result) {\n  var\n    startIndex = 0,\n    endIndex = MP2T_PACKET_LENGTH,\n    packet, type, pesType, pusi, parsed, frame, i, pes;\n\n  var endLoop = false;\n\n  var currentFrame = {\n    data: [],\n    size: 0\n  };\n\n  // Start walking from start of segment to get first video packet\n  while (endIndex < bytes.byteLength) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video') {\n            if (pusi && !endLoop) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n            if (!result.firstKeyFrame) {\n              if (pusi) {\n                if (currentFrame.size !== 0) {\n                  frame = new Uint8Array(currentFrame.size);\n                  i = 0;\n                  while (currentFrame.data.length) {\n                    pes = currentFrame.data.shift();\n                    frame.set(pes, i);\n                    i += pes.byteLength;\n                  }\n                  if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                    var firstKeyFrame = probe.ts.parsePesTime(frame);\n\n                    // PTS/DTS may not be available. Simply *not* setting\n                    // the keyframe seems to work fine with HLS playback\n                    // and definitely preferable to a crash with TypeError...\n                    if (firstKeyFrame) {\n                      result.firstKeyFrame = firstKeyFrame;\n                      result.firstKeyFrame.type = 'video';\n                    } else {\n                      // eslint-disable-next-line\n                      console.warn(\n                        'Failed to extract PTS/DTS from PES at first keyframe. ' +\n                        'This could be an unusual TS segment, or else mux.js did not ' +\n                        'parse your TS segment correctly. If you know your TS ' +\n                        'segments do contain PTS/DTS on keyframes please file a bug ' +\n                        'report! You can try ffprobe to double check for yourself.'\n                      );\n                    }\n                  }\n                  currentFrame.size = 0;\n                }\n              }\n              currentFrame.data.push(packet);\n              currentFrame.size += packet.byteLength;\n            }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop && result.firstKeyFrame) {\n        break;\n      }\n\n      startIndex += MP2T_PACKET_LENGTH;\n      endIndex += MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex++;\n    endIndex++;\n  }\n\n  // Start walking from end of segment to get last video packet\n  endIndex = bytes.byteLength;\n  startIndex = endIndex - MP2T_PACKET_LENGTH;\n  endLoop = false;\n  while (startIndex >= 0) {\n    // Look for a pair of start and end sync bytes in the data..\n    if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n      // We found a packet\n      packet = bytes.subarray(startIndex, endIndex);\n      type = probe.ts.parseType(packet, pmt.pid);\n\n      switch (type) {\n        case 'pes':\n          pesType = probe.ts.parsePesType(packet, pmt.table);\n          pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n          if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (endLoop) {\n        break;\n      }\n\n      startIndex -= MP2T_PACKET_LENGTH;\n      endIndex -= MP2T_PACKET_LENGTH;\n      continue;\n    }\n\n    // If we get here, we have somehow become de-synchronized and we need to step\n    // forward one byte at a time until we find a pair of sync bytes that denote\n    // a packet\n    startIndex--;\n    endIndex--;\n  }\n};\n\n/**\n * Adjusts the timestamp information for the segment to account for\n * rollover and convert to seconds based on pes packet timescale (90khz clock)\n */\nvar adjustTimestamp_ = function(segmentInfo, baseTimestamp) {\n  if (segmentInfo.audio && segmentInfo.audio.length) {\n    var audioBaseTimestamp = baseTimestamp;\n    if (typeof audioBaseTimestamp === 'undefined') {\n      audioBaseTimestamp = segmentInfo.audio[0].dts;\n    }\n    segmentInfo.audio.forEach(function(info) {\n      info.dts = handleRollover(info.dts, audioBaseTimestamp);\n      info.pts = handleRollover(info.pts, audioBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n  }\n\n  if (segmentInfo.video && segmentInfo.video.length) {\n    var videoBaseTimestamp = baseTimestamp;\n    if (typeof videoBaseTimestamp === 'undefined') {\n      videoBaseTimestamp = segmentInfo.video[0].dts;\n    }\n    segmentInfo.video.forEach(function(info) {\n      info.dts = handleRollover(info.dts, videoBaseTimestamp);\n      info.pts = handleRollover(info.pts, videoBaseTimestamp);\n      // time in seconds\n      info.dtsTime = info.dts / PES_TIMESCALE;\n      info.ptsTime = info.pts / PES_TIMESCALE;\n    });\n    if (segmentInfo.firstKeyFrame) {\n      var frame = segmentInfo.firstKeyFrame;\n      frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n      frame.pts = handleRollover(frame.pts, videoBaseTimestamp);\n      // time in seconds\n      frame.dtsTime = frame.dts / PES_TIMESCALE;\n      frame.ptsTime = frame.dts / PES_TIMESCALE;\n    }\n  }\n};\n\n/**\n * inspects the aac data stream for start and end time information\n */\nvar inspectAac_ = function(bytes) {\n  var\n    endLoop = false,\n    audioCount = 0,\n    sampleRate = null,\n    timestamp = null,\n    frameSize = 0,\n    byteIndex = 0,\n    packet;\n\n  while (bytes.length - byteIndex >= 3) {\n    var type = probe.aac.parseType(bytes, byteIndex);\n    switch (type) {\n      case 'timed-metadata':\n        // Exit early because we don't have enough to parse\n        // the ID3 tag header\n        if (bytes.length - byteIndex < 10) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseId3TagSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (timestamp === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          timestamp = probe.aac.parseAacTimestamp(packet);\n        }\n        byteIndex += frameSize;\n        break;\n      case 'audio':\n        // Exit early because we don't have enough to parse\n        // the ADTS frame header\n        if (bytes.length - byteIndex < 7) {\n          endLoop = true;\n          break;\n        }\n\n        frameSize = probe.aac.parseAdtsSize(bytes, byteIndex);\n\n        // Exit early if we don't have enough in the buffer\n        // to emit a full packet\n        if (frameSize > bytes.length) {\n          endLoop = true;\n          break;\n        }\n        if (sampleRate === null) {\n          packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n          sampleRate = probe.aac.parseSampleRate(packet);\n        }\n        audioCount++;\n        byteIndex += frameSize;\n        break;\n      default:\n        byteIndex++;\n        break;\n    }\n    if (endLoop) {\n      return null;\n    }\n  }\n  if (sampleRate === null || timestamp === null) {\n    return null;\n  }\n\n  var audioTimescale = PES_TIMESCALE / sampleRate;\n\n  var result = {\n    audio: [\n      {\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      },\n      {\n        type: 'audio',\n        dts: timestamp + (audioCount * 1024 * audioTimescale),\n        pts: timestamp + (audioCount * 1024 * audioTimescale)\n      }\n    ]\n  };\n\n  return result;\n};\n\n/**\n * inspects the transport stream segment data for start and end time information\n * of the audio and video tracks (when present) as well as the first key frame's\n * start time.\n */\nvar inspectTs_ = function(bytes) {\n  var pmt = {\n    pid: null,\n    table: null\n  };\n\n  var result = {};\n\n  parsePsi_(bytes, pmt);\n\n  for (var pid in pmt.table) {\n    if (pmt.table.hasOwnProperty(pid)) {\n      var type = pmt.table[pid];\n      switch (type) {\n        case StreamTypes.H264_STREAM_TYPE:\n          result.video = [];\n          parseVideoPes_(bytes, pmt, result);\n          if (result.video.length === 0) {\n            delete result.video;\n          }\n          break;\n        case StreamTypes.ADTS_STREAM_TYPE:\n          result.audio = [];\n          parseAudioPes_(bytes, pmt, result);\n          if (result.audio.length === 0) {\n            delete result.audio;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Inspects segment byte data and returns an object with start and end timing information\n *\n * @param {Uint8Array} bytes The segment byte data\n * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n *  timestamps for rollover. This value must be in 90khz clock.\n * @return {Object} Object containing start and end frame timing info of segment.\n */\nvar inspect = function(bytes, baseTimestamp) {\n  var isAacData = probe.aac.isLikelyAacData(bytes);\n\n  var result;\n\n  if (isAacData) {\n    result = inspectAac_(bytes);\n  } else {\n    result = inspectTs_(bytes);\n  }\n\n  if (!result || (!result.audio && !result.video)) {\n    return null;\n  }\n\n  adjustTimestamp_(result, baseTimestamp);\n\n  return result;\n};\n\nmodule.exports = {\n  inspect: inspect,\n  parseAudioPes_: parseAudioPes_\n};\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Reads in-band caption information from a video elementary\n * stream. Captions must follow the CEA-708 standard for injection\n * into an MPEG-2 transport streams.\n * @see https://en.wikipedia.org/wiki/CEA-708\n * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n */\n\n'use strict';\n\n// Supplemental enhancement information (SEI) NAL units have a\n// payload type field to indicate how they are to be\n// interpreted. CEAS-708 caption content is always transmitted with\n// payload type 0x04.\nvar USER_DATA_REGISTERED_ITU_T_T35 = 4,\n    RBSP_TRAILING_BITS = 128;\n\n/**\n  * Parse a supplemental enhancement information (SEI) NAL unit.\n  * Stops parsing once a message of type ITU T T35 has been found.\n  *\n  * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n  * @return {object} the parsed SEI payload\n  * @see Rec. ITU-T H.264, 7.3.2.3.1\n  */\nvar parseSei = function(bytes) {\n  var\n    i = 0,\n    result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n    payloadType = 0,\n    payloadSize = 0;\n\n  // go through the sei_rbsp parsing each each individual sei_message\n  while (i < bytes.byteLength) {\n    // stop once we have hit the end of the sei_rbsp\n    if (bytes[i] === RBSP_TRAILING_BITS) {\n      break;\n    }\n\n    // Parse payload type\n    while (bytes[i] === 0xFF) {\n      payloadType += 255;\n      i++;\n    }\n    payloadType += bytes[i++];\n\n    // Parse payload size\n    while (bytes[i] === 0xFF) {\n      payloadSize += 255;\n      i++;\n    }\n    payloadSize += bytes[i++];\n\n    // this sei_message is a 608/708 caption so save it and break\n    // there can only ever be one caption message in a frame's sei\n    if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n      result.payloadType = payloadType;\n      result.payloadSize = payloadSize;\n      result.payload = bytes.subarray(i, i + payloadSize);\n      break;\n    }\n\n    // skip the payload and parse the next message\n    i += payloadSize;\n    payloadType = 0;\n    payloadSize = 0;\n  }\n\n  return result;\n};\n\n// see ANSI/SCTE 128-1 (2013), section 8.1\nvar parseUserData = function(sei) {\n  // itu_t_t35_contry_code must be 181 (United States) for\n  // captions\n  if (sei.payload[0] !== 181) {\n    return null;\n  }\n\n  // itu_t_t35_provider_code should be 49 (ATSC) for captions\n  if (((sei.payload[1] << 8) | sei.payload[2]) !== 49) {\n    return null;\n  }\n\n  // the user_identifier should be \"GA94\" to indicate ATSC1 data\n  if (String.fromCharCode(sei.payload[3],\n                          sei.payload[4],\n                          sei.payload[5],\n                          sei.payload[6]) !== 'GA94') {\n    return null;\n  }\n\n  // finally, user_data_type_code should be 0x03 for caption data\n  if (sei.payload[7] !== 0x03) {\n    return null;\n  }\n\n  // return the user_data_type_structure and strip the trailing\n  // marker bits\n  return sei.payload.subarray(8, sei.payload.length - 1);\n};\n\n// see CEA-708-D, section 4.4\nvar parseCaptionPackets = function(pts, userData) {\n  var results = [], i, count, offset, data;\n\n  // if this is just filler, return immediately\n  if (!(userData[0] & 0x40)) {\n    return results;\n  }\n\n  // parse out the cc_data_1 and cc_data_2 fields\n  count = userData[0] & 0x1f;\n  for (i = 0; i < count; i++) {\n    offset = i * 3;\n    data = {\n      type: userData[offset + 2] & 0x03,\n      pts: pts\n    };\n\n    // capture cc data when cc_valid is 1\n    if (userData[offset + 2] & 0x04) {\n      data.ccData = (userData[offset + 3] << 8) | userData[offset + 4];\n      results.push(data);\n    }\n  }\n  return results;\n};\n\nvar discardEmulationPreventionBytes = function(data) {\n    var\n      length = data.byteLength,\n      emulationPreventionBytesPositions = [],\n      i = 1,\n      newLength, newData;\n\n    // Find all `Emulation Prevention Bytes`\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    }\n\n    // If no Emulation Prevention Bytes were found just return the original\n    // array\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    }\n\n    // Create a new array to hold the NAL unit data\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++;\n        // Remove this position index\n        emulationPreventionBytesPositions.shift();\n      }\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n};\n\n// exports\nmodule.exports = {\n  parseSei: parseSei,\n  parseUserData: parseUserData,\n  parseCaptionPackets: parseCaptionPackets,\n  discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n  USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n};\n","// Source: http://jsfiddle.net/vWx8V/\n// http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n/**\n * Conenience method returns corresponding value for given keyName or keyCode.\n *\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Mixed}\n * @api public\n */\n\nfunction keyCode(searchInput) {\n  // Keyboard Events\n  if (searchInput && 'object' === typeof searchInput) {\n    var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode\n    if (hasKeyCode) searchInput = hasKeyCode\n  }\n\n  // Numbers\n  if ('number' === typeof searchInput) return names[searchInput]\n\n  // Everything else (cast to string)\n  var search = String(searchInput)\n\n  // check codes\n  var foundNamedKey = codes[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // check aliases\n  var foundNamedKey = aliases[search.toLowerCase()]\n  if (foundNamedKey) return foundNamedKey\n\n  // weird character?\n  if (search.length === 1) return search.charCodeAt(0)\n\n  return undefined\n}\n\n/**\n * Compares a keyboard event with a given keyCode or keyName.\n *\n * @param {Event} event Keyboard event that should be tested\n * @param {Mixed} keyCode {Number} or keyName {String}\n * @return {Boolean}\n * @api public\n */\nkeyCode.isEventKey = function isEventKey(event, nameOrCode) {\n  if (event && 'object' === typeof event) {\n    var keyCode = event.which || event.keyCode || event.charCode\n    if (keyCode === null || keyCode === undefined) { return false; }\n    if (typeof nameOrCode === 'string') {\n      // check codes\n      var foundNamedKey = codes[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    \n      // check aliases\n      var foundNamedKey = aliases[nameOrCode.toLowerCase()]\n      if (foundNamedKey) { return foundNamedKey === keyCode; }\n    } else if (typeof nameOrCode === 'number') {\n      return nameOrCode === keyCode;\n    }\n    return false;\n  }\n}\n\nexports = module.exports = keyCode;\n\n/**\n * Get by name\n *\n *   exports.code['enter'] // => 13\n */\n\nvar codes = exports.code = exports.codes = {\n  'backspace': 8,\n  'tab': 9,\n  'enter': 13,\n  'shift': 16,\n  'ctrl': 17,\n  'alt': 18,\n  'pause/break': 19,\n  'caps lock': 20,\n  'esc': 27,\n  'space': 32,\n  'page up': 33,\n  'page down': 34,\n  'end': 35,\n  'home': 36,\n  'left': 37,\n  'up': 38,\n  'right': 39,\n  'down': 40,\n  'insert': 45,\n  'delete': 46,\n  'command': 91,\n  'left command': 91,\n  'right command': 93,\n  'numpad *': 106,\n  'numpad +': 107,\n  'numpad -': 109,\n  'numpad .': 110,\n  'numpad /': 111,\n  'num lock': 144,\n  'scroll lock': 145,\n  'my computer': 182,\n  'my calculator': 183,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  \"'\": 222\n}\n\n// Helper aliases\n\nvar aliases = exports.aliases = {\n  'windows': 91,\n  '⇧': 16,\n  '⌥': 18,\n  '⌃': 17,\n  '⌘': 91,\n  'ctl': 17,\n  'control': 17,\n  'option': 18,\n  'pause': 19,\n  'break': 19,\n  'caps': 20,\n  'return': 13,\n  'escape': 27,\n  'spc': 32,\n  'spacebar': 32,\n  'pgup': 33,\n  'pgdn': 34,\n  'ins': 45,\n  'del': 46,\n  'cmd': 91\n}\n\n/*!\n * Programatically add the following\n */\n\n// lower case chars\nfor (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32\n\n// numbers\nfor (var i = 48; i < 58; i++) codes[i - 48] = i\n\n// function keys\nfor (i = 1; i < 13; i++) codes['f'+i] = i + 111\n\n// numpad keys\nfor (i = 0; i < 10; i++) codes['numpad '+i] = i + 96\n\n/**\n * Get by code\n *\n *   exports.name[13] // => 'Enter'\n */\n\nvar names = exports.names = exports.title = {} // title for backward compat\n\n// Create reverse mapping\nfor (i in codes) names[codes[i]] = i\n\n// Add aliases\nfor (var alias in aliases) {\n  codes[alias] = aliases[alias]\n}\n","'use strict';\n\n/* globals\n\tSet,\n\tMap,\n\tWeakSet,\n\tWeakMap,\n\n\tPromise,\n\n\tSymbol,\n\tProxy,\n\n\tAtomics,\n\tSharedArrayBuffer,\n\n\tArrayBuffer,\n\tDataView,\n\tUint8Array,\n\tFloat32Array,\n\tFloat64Array,\n\tInt8Array,\n\tInt16Array,\n\tInt32Array,\n\tUint8ClampedArray,\n\tUint16Array,\n\tUint32Array,\n*/\n\nvar undefined; // eslint-disable-line no-shadow-restricted-names\n\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\n\t: function () { throw new TypeError(); };\n\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar generator; // = function * () {};\nvar generatorFunction = generator ? getProto(generator) : undefined;\nvar asyncFn; // async function() {};\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\nvar asyncGen; // async function * () {};\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'$ %Array%': Array,\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'$ %ArrayPrototype%': Array.prototype,\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\n\t'$ %ArrayProto_values%': Array.prototype.values,\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\n\t'$ %AsyncFunction%': asyncFunction,\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'$ %Boolean%': Boolean,\n\t'$ %BooleanPrototype%': Boolean.prototype,\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\n\t'$ %Date%': Date,\n\t'$ %DatePrototype%': Date.prototype,\n\t'$ %decodeURI%': decodeURI,\n\t'$ %decodeURIComponent%': decodeURIComponent,\n\t'$ %encodeURI%': encodeURI,\n\t'$ %encodeURIComponent%': encodeURIComponent,\n\t'$ %Error%': Error,\n\t'$ %ErrorPrototype%': Error.prototype,\n\t'$ %eval%': eval, // eslint-disable-line no-eval\n\t'$ %EvalError%': EvalError,\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\n\t'$ %Function%': Function,\n\t'$ %FunctionPrototype%': Function.prototype,\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\n\t'$ %GeneratorFunction%': generatorFunction,\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\n\t'$ %isFinite%': isFinite,\n\t'$ %isNaN%': isNaN,\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'$ %JSON%': JSON,\n\t'$ %JSONParse%': JSON.parse,\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\n\t'$ %Math%': Math,\n\t'$ %Number%': Number,\n\t'$ %NumberPrototype%': Number.prototype,\n\t'$ %Object%': Object,\n\t'$ %ObjectPrototype%': Object.prototype,\n\t'$ %ObjProto_toString%': Object.prototype.toString,\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\n\t'$ %parseFloat%': parseFloat,\n\t'$ %parseInt%': parseInt,\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'$ %RangeError%': RangeError,\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\n\t'$ %ReferenceError%': ReferenceError,\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'$ %RegExp%': RegExp,\n\t'$ %RegExpPrototype%': RegExp.prototype,\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\n\t'$ %String%': String,\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'$ %StringPrototype%': String.prototype,\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\n\t'$ %SyntaxError%': SyntaxError,\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\n\t'$ %ThrowTypeError%': ThrowTypeError,\n\t'$ %TypedArray%': TypedArray,\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\n\t'$ %TypeError%': TypeError,\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\n\t'$ %URIError%': URIError,\n\t'$ %URIErrorPrototype%': URIError.prototype,\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar key = '$ ' + name;\n\tif (!(key in INTRINSICS)) {\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\n\t}\n\n\t// istanbul ignore if // hopefully this is impossible to test :-)\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t}\n\treturn INTRINSICS[key];\n};\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('b-form',{staticClass:\"step-form\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-12\"},[_c('h3',[_vm._v(\"Step 2: Record Video\")]),_c('p',{staticClass:\"info\"},[_c('i',{staticClass:\"icon-error_outline\"}),_vm._v(\"Please point video camera\\n                on customer face and make sure their straight face is\\n                completely visible in the video. Click on Record button to\\n                record 10 seconds video.\\n            \")]),_c('div',{staticClass:\"video-record\",class:_vm.showVideo == true\n                        ? 'videoRecored'\n                        : '' || _vm.timeShow == true\n                        ? 'videoRecored'\n                        : ''},[_c('div',{staticClass:\"show-record-video\"},[_c('video-js-record',{on:{\"recordingStarted\":_vm.onVideoRecording,\"recordingEnded\":_vm.onRecordingEnded}})],1),_c('div',{staticClass:\"video-play\",class:_vm.showVideo == true ? 'video-recorded' : ''},[(_vm.timeShow)?_c('span',{staticClass:\"timer-countdown\"},[_vm._v(_vm._s(_vm.countDown))]):_vm._e(),_c('i',{staticClass:\"icon-record\"},[_c('i',{staticClass:\"path1\"}),_c('i',{staticClass:\"path2\"}),_c('i',{staticClass:\"path3\"})]),(_vm.showVideo == false)?_c('p',[_vm._v(\"Record\")]):_vm._e(),(_vm.showVideo == true)?_c('p',[_vm._v(\"Finish\")]):_vm._e()])]),_c('base-button',{attrs:{\"btnType\":\"submit\",\"btnVariant\":\"primary\",\"btnLabel\":\"CONTINUE\"},on:{\"preventFunction\":function($event){return _vm.linking()}}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('video',{staticClass:\"video-js vjs-default-skin\",attrs:{\"id\":\"myVideo\",\"playsinline\":\"\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        cb(modifiedEvent);\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  const {navigator} = window;\n\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const browserDetails = utils.detectBrowser(window);\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  // support for addIceCandidate(null or undefined)\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions. Native support planned for Chrome M77.\n      if (browserDetails.version < 78 &&\n        arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\nexport function fixNegotiationNeeded(window) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (pc.signalingState !== 'stable') {\n      return;\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window) {\n  const browserDetails = utils.detectBrowser(window);\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window) {\n  const browserDetails = utils.detectBrowser(window);\n\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  // support for addIceCandidate(null or undefined)\n  // as well as ignoring {sdpMid, candidate: \"\"}\n  if (browserDetails.version < 68) {\n    const nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      if (arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track) {\n        const stream = arguments[1];\n        if (stream) {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (!this._localStreams.includes(stream)) {\n            this._localStreams.push(stream);\n          }\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in window.RTCPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeAllowExtmapMixed(window) {\n  /* remove a=extmap-allow-mixed for Chrome < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const browserDetails = utils.detectBrowser(window);\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      desc.sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n      chromeShim.shimGetStats(window);\n      chromeShim.shimSenderReceiverGetStats(window);\n      chromeShim.fixNegotiationNeeded(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n      firefoxShim.shimRemoveStream(window);\n      firefoxShim.shimSenderGetStats(window);\n      firefoxShim.shimReceiverGetStats(window);\n      firefoxShim.shimRTCDataChannel(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimConnectionState(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimGetDisplayMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCreateOfferLegacy(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      commonShim.shimMaxMessageSize(window);\n      commonShim.shimSendThrowTypeError(window);\n      commonShim.removeAllowExtmapMixed(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter = adapterFactory({window});\nexport default adapter;\n","<template>\n    <video id=\"myVideo\" class=\"video-js vjs-default-skin\" playsinline></video>\n</template>\n\n<script>\nimport 'video.js/dist/video-js.css'\nimport 'videojs-record/dist/css/videojs.record.css'\n\nimport 'webrtc-adapter'\nimport RecordRTC from 'recordrtc'\n\nimport videojs from 'video.js'\n// eslint-disable-next-line\nimport Record from 'videojs-record/dist/videojs.record.js'\n\nexport default {\n    data() {\n        return {\n            player: '',\n            options: {\n                controls: true,\n                autoplay: false,\n                fluid: true,\n                loop: false,\n                width: 500,\n                height: 281,\n                debug: true,\n                controlBar: {\n                    volumePanel: true,\n                },\n                plugins: {\n                    // configure videojs-record plugin\n                    record: {\n                        audio: false,\n                        video: true,\n                        debug: true,\n                        maxLength: 10,\n                        videoRecorderType: 'WhammyRecorder',\n                        videoMimeType: 'video/mp4',\n                    },\n                },\n            },\n        }\n    },\n    mounted() {\n        /* eslint-disable no-console */\n        this.player = videojs('#myVideo', this.options, () => {\n            // print version information at startup\n            var msg =\n                'Using video.js ' +\n                videojs.VERSION +\n                ' with videojs-record ' +\n                videojs.getPluginVersion('record') +\n                ' and recordrtc ' +\n                RecordRTC.version\n            videojs.log(msg)\n        })\n\n        this.player.record().getDevice()\n\n        // device is ready\n        this.player.on('deviceReady', () => {\n            console.log('device is ready!')\n        })\n\n        // user clicked the record button and started recording\n        this.player.on('startRecord', () => {\n            this.$emit('recordingStarted')\n            console.log('recordingStarted')\n        })\n\n        this.player.on('stopRecord', () => {\n            this.$emit('recordingStarted')\n            console.log('stop')\n        })\n\n        // user completed recording and stream is available\n        this.player.on('finishRecord', () => {\n            // the blob object contains the recorded data that\n            // can be downloaded by the user, stored on server etc.\n            console.log('finished recording: ', this.player.recordedData)\n            this.player.record().saveAs({ video: 'recorded-video.mp4' })\n            this.$emit('recordingEnded')\n        })\n\n        // error handling\n        this.player.on('error', (element, error) => {\n            console.warn(error)\n        })\n\n        this.player.on('deviceError', () => {\n            console.error('device error:', this.player.deviceErrorCode)\n        })\n    },\n    beforeDestroy() {\n        if (this.player) {\n            this.player.dispose()\n        }\n    },\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VideoJSRecord.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./VideoJSRecord.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./VideoJSRecord.vue?vue&type=template&id=58f2737c&\"\nimport script from \"./VideoJSRecord.vue?vue&type=script&lang=js&\"\nexport * from \"./VideoJSRecord.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <b-form class=\"step-form\">\n        <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <h3>Step 2: Record Video</h3>\n                <p class=\"info\">\n                    <i class=\"icon-error_outline\"></i>Please point video camera\n                    on customer face and make sure their straight face is\n                    completely visible in the video. Click on Record button to\n                    record 10 seconds video.\n                </p>\n                <div\n                    class=\"video-record\"\n                    :class=\"\n                        showVideo == true\n                            ? 'videoRecored'\n                            : '' || timeShow == true\n                            ? 'videoRecored'\n                            : ''\n                    \"\n                >\n                    <div class=\"show-record-video\">\n                        <video-js-record\n                            @recordingStarted=\"onVideoRecording\"\n                            @recordingEnded=\"onRecordingEnded\"\n                        ></video-js-record>\n                    </div>\n                    <div\n                        :class=\"showVideo == true ? 'video-recorded' : ''\"\n                        class=\"video-play\"\n                    >\n                        <span v-if=\"timeShow\" class=\"timer-countdown\">{{\n                            countDown\n                        }}</span>\n                        <i class=\"icon-record\">\n                            <i class=\"path1\"></i>\n                            <i class=\"path2\"></i>\n                            <i class=\"path3\"></i>\n                        </i>\n                        <p v-if=\"showVideo == false\">Record</p>\n                        <p v-if=\"showVideo == true\">Finish</p>\n                    </div>\n                </div>\n                <base-button\n                    btnType=\"submit\"\n                    btnVariant=\"primary\"\n                    btnLabel=\"CONTINUE\"\n                    @preventFunction=\"linking()\"\n                ></base-button>\n            </div>\n        </div>\n    </b-form>\n</template>\n<script>\nimport videoJsRecord from '@/components/VideoJSRecord.vue'\nexport default {\n    components: {\n        videoJsRecord,\n    },\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > props\n    |--------------------------------------------------------------------------\n    */\n    props: {}, // End of Component > props\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > data\n    |--------------------------------------------------------------------------\n    */\n    data() {\n        return {\n            countDown: 10,\n            showVideo: false,\n            timeShow: false,\n        }\n    }, // End of Component > data\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > computed\n    |--------------------------------------------------------------------------\n    */\n    computed: {}, // End of Component > computed\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > methods\n    |--------------------------------------------------------------------------\n    */\n    methods: {\n        linking() {\n            if (this.$route.meta.publicRegistration === true) {\n                this.$router.push('/public-registration/setup-profile')\n            } else {\n                this.$router.push('/register-customer/setup-profile')\n            }\n        },\n        onVideoRecording() {\n            this.timeShow = true\n            this.showVideo = false\n            this.countDownTimer()\n        },\n        onRecordingEnded() {\n            this.showVideo = true\n            this.timeShow = false\n            this.countDown = 10\n        },\n\n        countDownTimer() {\n            if (this.countDown > 0) {\n                setTimeout(() => {\n                    this.countDown -= 1\n                    this.countDownTimer()\n                }, 1000)\n            }\n        },\n    }, // End of Component > methods\n\n    /*\n    |--------------------------------------------------------------------------\n    | Component > mounted\n    |--------------------------------------------------------------------------\n    */\n    mounted() {}, // End of Component > mounted\n} // End of export default\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RecordVideo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RecordVideo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./RecordVideo.vue?vue&type=template&id=27870b22&\"\nimport script from \"./RecordVideo.vue?vue&type=script&lang=js&\"\nexport * from \"./RecordVideo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n */\nvar ONE_SECOND_IN_TS = 90000; // 90kHz clock\n\n/**\n * Store information about the start and end of the track and the\n * duration for each frame/sample we process in order to calculate\n * the baseMediaDecodeTime\n */\nvar collectDtsInfo = function(track, data) {\n  if (typeof data.pts === 'number') {\n    if (track.timelineStartInfo.pts === undefined) {\n      track.timelineStartInfo.pts = data.pts;\n    }\n\n    if (track.minSegmentPts === undefined) {\n      track.minSegmentPts = data.pts;\n    } else {\n      track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n    }\n\n    if (track.maxSegmentPts === undefined) {\n      track.maxSegmentPts = data.pts;\n    } else {\n      track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n    }\n  }\n\n  if (typeof data.dts === 'number') {\n    if (track.timelineStartInfo.dts === undefined) {\n      track.timelineStartInfo.dts = data.dts;\n    }\n\n    if (track.minSegmentDts === undefined) {\n      track.minSegmentDts = data.dts;\n    } else {\n      track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n    }\n\n    if (track.maxSegmentDts === undefined) {\n      track.maxSegmentDts = data.dts;\n    } else {\n      track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n    }\n  }\n};\n\n/**\n * Clear values used to calculate the baseMediaDecodeTime between\n * tracks\n */\nvar clearDtsInfo = function(track) {\n  delete track.minSegmentDts;\n  delete track.maxSegmentDts;\n  delete track.minSegmentPts;\n  delete track.maxSegmentPts;\n};\n\n/**\n * Calculate the track's baseMediaDecodeTime based on the earliest\n * DTS the transmuxer has ever seen and the minimum DTS for the\n * current track\n * @param track {object} track metadata configuration\n * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n *        in the source; false to adjust the first segment to start at 0.\n */\nvar calculateTrackBaseMediaDecodeTime = function(track, keepOriginalTimestamps) {\n  var\n    baseMediaDecodeTime,\n    scale,\n    minSegmentDts = track.minSegmentDts;\n\n  // Optionally adjust the time so the first segment starts at zero.\n  if (!keepOriginalTimestamps) {\n    minSegmentDts -= track.timelineStartInfo.dts;\n  }\n\n  // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n  // we want the start of the first segment to be placed\n  baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime;\n\n  // Add to that the distance this segment is from the very first\n  baseMediaDecodeTime += minSegmentDts;\n\n  // baseMediaDecodeTime must not become negative\n  baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n  if (track.type === 'audio') {\n    // Audio has a different clock equal to the sampling_rate so we need to\n    // scale the PTS values into the clock rate of the track\n    scale = track.samplerate / ONE_SECOND_IN_TS;\n    baseMediaDecodeTime *= scale;\n    baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n  }\n\n  return baseMediaDecodeTime;\n};\n\nmodule.exports = {\n  clearDtsInfo: clearDtsInfo,\n  calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n  collectDtsInfo: collectDtsInfo\n};\n","\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n","/*! @name m3u8-parser @version 4.3.0 @license Apache-2.0 */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @file stream.js\n */\n\n/**\n * A lightweight readable stream implementation that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream =\n/*#__PURE__*/\nfunction () {\n  function Stream() {\n    this.listeners = {};\n  }\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  var _proto = Stream.prototype;\n\n  _proto.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n\n    this.listeners[type].push(listener);\n  };\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {string} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {boolean} if we could turn it off or not\n   */\n\n\n  _proto.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {string} type the event name\n   */\n\n\n  _proto.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n    var i;\n    var length;\n    var args;\n\n    if (!callbacks) {\n      return;\n    } // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n\n\n    if (arguments.length === 2) {\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      args = Array.prototype.slice.call(arguments, 1);\n      length = callbacks.length;\n\n      for (i = 0; i < length; ++i) {\n        callbacks[i].apply(this, args);\n      }\n    }\n  };\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  _proto.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  _proto.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * A stream that buffers string input and generates a `data` event for each\n * line.\n *\n * @class LineStream\n * @extends Stream\n */\n\nvar LineStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(LineStream, _Stream);\n\n  function LineStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.buffer = '';\n    return _this;\n  }\n  /**\n   * Add new data to be parsed.\n   *\n   * @param {string} data the text to process\n   */\n\n\n  var _proto = LineStream.prototype;\n\n  _proto.push = function push(data) {\n    var nextNewline;\n    this.buffer += data;\n    nextNewline = this.buffer.indexOf('\\n');\n\n    for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n      this.trigger('data', this.buffer.substring(0, nextNewline));\n      this.buffer = this.buffer.substring(nextNewline + 1);\n    }\n  };\n\n  return LineStream;\n}(Stream);\n\n/**\n * \"forgiving\" attribute list psuedo-grammar:\n * attributes -> keyvalue (',' keyvalue)*\n * keyvalue   -> key '=' value\n * key        -> [^=]*\n * value      -> '\"' [^\"]* '\"' | [^,]*\n */\n\nvar attributeSeparator = function attributeSeparator() {\n  var key = '[^=]*';\n  var value = '\"[^\"]*\"|[^,]*';\n  var keyvalue = '(?:' + key + ')=(?:' + value + ')';\n  return new RegExp('(?:^|,)(' + keyvalue + ')');\n};\n/**\n * Parse attributes from a line given the separator\n *\n * @param {string} attributes the attribute line to parse\n */\n\n\nvar parseAttributes = function parseAttributes(attributes) {\n  // split the string using attributes as the separator\n  var attrs = attributes.split(attributeSeparator());\n  var result = {};\n  var i = attrs.length;\n  var attr;\n\n  while (i--) {\n    // filter out unmatched portions of the string\n    if (attrs[i] === '') {\n      continue;\n    } // split the key and value\n\n\n    attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n    attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n    attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n    result[attr[0]] = attr[1];\n  }\n\n  return result;\n};\n/**\n * A line-level M3U8 parser event stream. It expects to receive input one\n * line at a time and performs a context-free parse of its contents. A stream\n * interpretation of a manifest can be useful if the manifest is expected to\n * be too large to fit comfortably into memory or the entirety of the input\n * is not immediately available. Otherwise, it's probably much easier to work\n * with a regular `Parser` object.\n *\n * Produces `data` events with an object that captures the parser's\n * interpretation of the input. That object has a property `tag` that is one\n * of `uri`, `comment`, or `tag`. URIs only have a single additional\n * property, `line`, which captures the entirety of the input without\n * interpretation. Comments similarly have a single additional property\n * `text` which is the input without the leading `#`.\n *\n * Tags always have a property `tagType` which is the lower-cased version of\n * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n * tags are given the tag type `unknown` and a single additional property\n * `data` with the remainder of the input.\n *\n * @class ParseStream\n * @extends Stream\n */\n\n\nvar ParseStream =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(ParseStream, _Stream);\n\n  function ParseStream() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.customParsers = [];\n    _this.tagMappers = [];\n    return _this;\n  }\n  /**\n   * Parses an additional line of input.\n   *\n   * @param {string} line a single line of an M3U8 file to parse\n   */\n\n\n  var _proto = ParseStream.prototype;\n\n  _proto.push = function push(line) {\n    var _this2 = this;\n\n    var match;\n    var event; // strip whitespace\n\n    line = line.trim();\n\n    if (line.length === 0) {\n      // ignore empty lines\n      return;\n    } // URIs\n\n\n    if (line[0] !== '#') {\n      this.trigger('data', {\n        type: 'uri',\n        uri: line\n      });\n      return;\n    } // map tags\n\n\n    var newLines = this.tagMappers.reduce(function (acc, mapper) {\n      var mappedLine = mapper(line); // skip if unchanged\n\n      if (mappedLine === line) {\n        return acc;\n      }\n\n      return acc.concat([mappedLine]);\n    }, [line]);\n    newLines.forEach(function (newLine) {\n      for (var i = 0; i < _this2.customParsers.length; i++) {\n        if (_this2.customParsers[i].call(_this2, newLine)) {\n          return;\n        }\n      } // Comments\n\n\n      if (newLine.indexOf('#EXT') !== 0) {\n        _this2.trigger('data', {\n          type: 'comment',\n          text: newLine.slice(1)\n        });\n\n        return;\n      } // strip off any carriage returns here so the regex matching\n      // doesn't have to account for them.\n\n\n      newLine = newLine.replace('\\r', ''); // Tags\n\n      match = /^#EXTM3U/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'm3u'\n        });\n\n        return;\n      }\n\n      match = /^#EXTINF:?([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'inf'\n        };\n\n        if (match[1]) {\n          event.duration = parseFloat(match[1]);\n        }\n\n        if (match[2]) {\n          event.title = match[2];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-TARGETDURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'targetduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#ZEN-TOTAL-DURATION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'totalduration'\n        };\n\n        if (match[1]) {\n          event.duration = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-VERSION:?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'version'\n        };\n\n        if (match[1]) {\n          event.version = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY-SEQUENCE:?(\\-?[0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'discontinuity-sequence'\n        };\n\n        if (match[1]) {\n          event.number = parseInt(match[1], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-PLAYLIST-TYPE:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'playlist-type'\n        };\n\n        if (match[1]) {\n          event.playlistType = match[1];\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-BYTERANGE:?([0-9.]*)?@?([0-9.]*)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'byterange'\n        };\n\n        if (match[1]) {\n          event.length = parseInt(match[1], 10);\n        }\n\n        if (match[2]) {\n          event.offset = parseInt(match[2], 10);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ALLOW-CACHE:?(YES|NO)?/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'allow-cache'\n        };\n\n        if (match[1]) {\n          event.allowed = !/NO/.test(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MAP:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'map'\n        };\n\n        if (match[1]) {\n          var attributes = parseAttributes(match[1]);\n\n          if (attributes.URI) {\n            event.uri = attributes.URI;\n          }\n\n          if (attributes.BYTERANGE) {\n            var _attributes$BYTERANGE = attributes.BYTERANGE.split('@'),\n                length = _attributes$BYTERANGE[0],\n                offset = _attributes$BYTERANGE[1];\n\n            event.byterange = {};\n\n            if (length) {\n              event.byterange.length = parseInt(length, 10);\n            }\n\n            if (offset) {\n              event.byterange.offset = parseInt(offset, 10);\n            }\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-STREAM-INF:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'stream-inf'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n\n          if (event.attributes.RESOLUTION) {\n            var split = event.attributes.RESOLUTION.split('x');\n            var resolution = {};\n\n            if (split[0]) {\n              resolution.width = parseInt(split[0], 10);\n            }\n\n            if (split[1]) {\n              resolution.height = parseInt(split[1], 10);\n            }\n\n            event.attributes.RESOLUTION = resolution;\n          }\n\n          if (event.attributes.BANDWIDTH) {\n            event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n          }\n\n          if (event.attributes['PROGRAM-ID']) {\n            event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-MEDIA:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'media'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-ENDLIST/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'endlist'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n\n      if (match) {\n        _this2.trigger('data', {\n          type: 'tag',\n          tagType: 'discontinuity'\n        });\n\n        return;\n      }\n\n      match = /^#EXT-X-PROGRAM-DATE-TIME:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'program-date-time'\n        };\n\n        if (match[1]) {\n          event.dateTimeString = match[1];\n          event.dateTimeObject = new Date(match[1]);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-KEY:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'key'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]); // parse the IV string into a Uint32Array\n\n          if (event.attributes.IV) {\n            if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n              event.attributes.IV = event.attributes.IV.substring(2);\n            }\n\n            event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n            event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n            event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n            event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n            event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n            event.attributes.IV = new Uint32Array(event.attributes.IV);\n          }\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-START:?(.*)$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'start'\n        };\n\n        if (match[1]) {\n          event.attributes = parseAttributes(match[1]);\n          event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n          event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT-CONT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out-cont'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-OUT:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-out'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      }\n\n      match = /^#EXT-X-CUE-IN:?(.*)?$/.exec(newLine);\n\n      if (match) {\n        event = {\n          type: 'tag',\n          tagType: 'cue-in'\n        };\n\n        if (match[1]) {\n          event.data = match[1];\n        } else {\n          event.data = '';\n        }\n\n        _this2.trigger('data', event);\n\n        return;\n      } // unknown tag type\n\n\n      _this2.trigger('data', {\n        type: 'tag',\n        data: newLine.slice(4)\n      });\n    });\n  };\n  /**\n   * Add a parser for custom headers\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.customType   the custom type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(_ref) {\n    var _this3 = this;\n\n    var expression = _ref.expression,\n        customType = _ref.customType,\n        dataParser = _ref.dataParser,\n        segment = _ref.segment;\n\n    if (typeof dataParser !== 'function') {\n      dataParser = function dataParser(line) {\n        return line;\n      };\n    }\n\n    this.customParsers.push(function (line) {\n      var match = expression.exec(line);\n\n      if (match) {\n        _this3.trigger('data', {\n          type: 'custom',\n          data: dataParser(line),\n          customType: customType,\n          segment: segment\n        });\n\n        return true;\n      }\n    });\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(_ref2) {\n    var expression = _ref2.expression,\n        map = _ref2.map;\n\n    var mapFn = function mapFn(line) {\n      if (expression.test(line)) {\n        return map(line);\n      }\n\n      return line;\n    };\n\n    this.tagMappers.push(mapFn);\n  };\n\n  return ParseStream;\n}(Stream);\n\n/**\n * A parser for M3U8 files. The current interpretation of the input is\n * exposed as a property `manifest` on parser objects. It's just two lines to\n * create and parse a manifest once you have the contents available as a string:\n *\n * ```js\n * var parser = new m3u8.Parser();\n * parser.push(xhr.responseText);\n * ```\n *\n * New input can later be applied to update the manifest object by calling\n * `push` again.\n *\n * The parser attempts to create a usable manifest object even if the\n * underlying input is somewhat nonsensical. It emits `info` and `warning`\n * events during the parse if it encounters input that seems invalid or\n * requires some property of the manifest object to be defaulted.\n *\n * @class Parser\n * @extends Stream\n */\n\nvar Parser =\n/*#__PURE__*/\nfunction (_Stream) {\n  _inheritsLoose(Parser, _Stream);\n\n  function Parser() {\n    var _this;\n\n    _this = _Stream.call(this) || this;\n    _this.lineStream = new LineStream();\n    _this.parseStream = new ParseStream();\n\n    _this.lineStream.pipe(_this.parseStream);\n    /* eslint-disable consistent-this */\n\n\n    var self = _assertThisInitialized(_assertThisInitialized(_this));\n    /* eslint-enable consistent-this */\n\n\n    var uris = [];\n    var currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n    var currentMap; // if specified, the active decryption key\n\n    var _key;\n\n    var noop = function noop() {};\n\n    var defaultMediaGroups = {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    }; // group segments into numbered timelines delineated by discontinuities\n\n    var currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n    _this.manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: []\n    }; // update the manifest with the m3u8 entry from the parse stream\n\n    _this.parseStream.on('data', function (entry) {\n      var mediaGroup;\n      var rendition;\n      ({\n        tag: function tag() {\n          // switch based on the tag type\n          (({\n            'allow-cache': function allowCache() {\n              this.manifest.allowCache = entry.allowed;\n\n              if (!('allowed' in entry)) {\n                this.trigger('info', {\n                  message: 'defaulting allowCache to YES'\n                });\n                this.manifest.allowCache = true;\n              }\n            },\n            byterange: function byterange() {\n              var byterange = {};\n\n              if ('length' in entry) {\n                currentUri.byterange = byterange;\n                byterange.length = entry.length;\n\n                if (!('offset' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting offset to zero'\n                  });\n                  entry.offset = 0;\n                }\n              }\n\n              if ('offset' in entry) {\n                currentUri.byterange = byterange;\n                byterange.offset = entry.offset;\n              }\n            },\n            endlist: function endlist() {\n              this.manifest.endList = true;\n            },\n            inf: function inf() {\n              if (!('mediaSequence' in this.manifest)) {\n                this.manifest.mediaSequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting media sequence to zero'\n                });\n              }\n\n              if (!('discontinuitySequence' in this.manifest)) {\n                this.manifest.discontinuitySequence = 0;\n                this.trigger('info', {\n                  message: 'defaulting discontinuity sequence to zero'\n                });\n              }\n\n              if (entry.duration > 0) {\n                currentUri.duration = entry.duration;\n              }\n\n              if (entry.duration === 0) {\n                currentUri.duration = 0.01;\n                this.trigger('info', {\n                  message: 'updating zero segment duration to a small value'\n                });\n              }\n\n              this.manifest.segments = uris;\n            },\n            key: function key() {\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without attribute list'\n                });\n                return;\n              } // clear the active encryption key\n\n\n              if (entry.attributes.METHOD === 'NONE') {\n                _key = null;\n                return;\n              }\n\n              if (!entry.attributes.URI) {\n                this.trigger('warn', {\n                  message: 'ignoring key declaration without URI'\n                });\n                return;\n              }\n\n              if (!entry.attributes.METHOD) {\n                this.trigger('warn', {\n                  message: 'defaulting key method to AES-128'\n                });\n              } // setup an encryption key for upcoming segments\n\n\n              _key = {\n                method: entry.attributes.METHOD || 'AES-128',\n                uri: entry.attributes.URI\n              };\n\n              if (typeof entry.attributes.IV !== 'undefined') {\n                _key.iv = entry.attributes.IV;\n              }\n            },\n            'media-sequence': function mediaSequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid media sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.mediaSequence = entry.number;\n            },\n            'discontinuity-sequence': function discontinuitySequence() {\n              if (!isFinite(entry.number)) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                });\n                return;\n              }\n\n              this.manifest.discontinuitySequence = entry.number;\n              currentTimeline = entry.number;\n            },\n            'playlist-type': function playlistType() {\n              if (!/VOD|EVENT/.test(entry.playlistType)) {\n                this.trigger('warn', {\n                  message: 'ignoring unknown playlist type: ' + entry.playlist\n                });\n                return;\n              }\n\n              this.manifest.playlistType = entry.playlistType;\n            },\n            map: function map() {\n              currentMap = {};\n\n              if (entry.uri) {\n                currentMap.uri = entry.uri;\n              }\n\n              if (entry.byterange) {\n                currentMap.byterange = entry.byterange;\n              }\n            },\n            'stream-inf': function streamInf() {\n              this.manifest.playlists = uris;\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!entry.attributes) {\n                this.trigger('warn', {\n                  message: 'ignoring empty stream-inf attributes'\n                });\n                return;\n              }\n\n              if (!currentUri.attributes) {\n                currentUri.attributes = {};\n              }\n\n              _extends(currentUri.attributes, entry.attributes);\n            },\n            media: function media() {\n              this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n\n              if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                this.trigger('warn', {\n                  message: 'ignoring incomplete or missing media group'\n                });\n                return;\n              } // find the media group, creating defaults as necessary\n\n\n              var mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n              mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n              mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n              rendition = {\n                default: /yes/i.test(entry.attributes.DEFAULT)\n              };\n\n              if (rendition.default) {\n                rendition.autoselect = true;\n              } else {\n                rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n              }\n\n              if (entry.attributes.LANGUAGE) {\n                rendition.language = entry.attributes.LANGUAGE;\n              }\n\n              if (entry.attributes.URI) {\n                rendition.uri = entry.attributes.URI;\n              }\n\n              if (entry.attributes['INSTREAM-ID']) {\n                rendition.instreamId = entry.attributes['INSTREAM-ID'];\n              }\n\n              if (entry.attributes.CHARACTERISTICS) {\n                rendition.characteristics = entry.attributes.CHARACTERISTICS;\n              }\n\n              if (entry.attributes.FORCED) {\n                rendition.forced = /yes/i.test(entry.attributes.FORCED);\n              } // insert the new rendition\n\n\n              mediaGroup[entry.attributes.NAME] = rendition;\n            },\n            discontinuity: function discontinuity() {\n              currentTimeline += 1;\n              currentUri.discontinuity = true;\n              this.manifest.discontinuityStarts.push(uris.length);\n            },\n            'program-date-time': function programDateTime() {\n              if (typeof this.manifest.dateTimeString === 'undefined') {\n                // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                // to the manifest object\n                // TODO: Consider removing this in future major version\n                this.manifest.dateTimeString = entry.dateTimeString;\n                this.manifest.dateTimeObject = entry.dateTimeObject;\n              }\n\n              currentUri.dateTimeString = entry.dateTimeString;\n              currentUri.dateTimeObject = entry.dateTimeObject;\n            },\n            targetduration: function targetduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid target duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.targetDuration = entry.duration;\n            },\n            totalduration: function totalduration() {\n              if (!isFinite(entry.duration) || entry.duration < 0) {\n                this.trigger('warn', {\n                  message: 'ignoring invalid total duration: ' + entry.duration\n                });\n                return;\n              }\n\n              this.manifest.totalDuration = entry.duration;\n            },\n            start: function start() {\n              if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                this.trigger('warn', {\n                  message: 'ignoring start declaration without appropriate attribute list'\n                });\n                return;\n              }\n\n              this.manifest.start = {\n                timeOffset: entry.attributes['TIME-OFFSET'],\n                precise: entry.attributes.PRECISE\n              };\n            },\n            'cue-out': function cueOut() {\n              currentUri.cueOut = entry.data;\n            },\n            'cue-out-cont': function cueOutCont() {\n              currentUri.cueOutCont = entry.data;\n            },\n            'cue-in': function cueIn() {\n              currentUri.cueIn = entry.data;\n            }\n          })[entry.tagType] || noop).call(self);\n        },\n        uri: function uri() {\n          currentUri.uri = entry.uri;\n          uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n          if (this.manifest.targetDuration && !('duration' in currentUri)) {\n            this.trigger('warn', {\n              message: 'defaulting segment duration to the target duration'\n            });\n            currentUri.duration = this.manifest.targetDuration;\n          } // annotate with encryption information, if necessary\n\n\n          if (_key) {\n            currentUri.key = _key;\n          }\n\n          currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n          if (currentMap) {\n            currentUri.map = currentMap;\n          } // prepare for the next URI\n\n\n          currentUri = {};\n        },\n        comment: function comment() {// comments are not important for playback\n        },\n        custom: function custom() {\n          // if this is segment-level data attach the output to the segment\n          if (entry.segment) {\n            currentUri.custom = currentUri.custom || {};\n            currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n          } else {\n            this.manifest.custom = this.manifest.custom || {};\n            this.manifest.custom[entry.customType] = entry.data;\n          }\n        }\n      })[entry.type].call(self);\n    });\n\n    return _this;\n  }\n  /**\n   * Parse the input string and update the manifest object.\n   *\n   * @param {string} chunk a potentially incomplete portion of the manifest\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.push = function push(chunk) {\n    this.lineStream.push(chunk);\n  };\n  /**\n   * Flush any remaining input. This can be handy if the last line of an M3U8\n   * manifest did not contain a trailing newline but the file has been\n   * completely received.\n   */\n\n\n  _proto.end = function end() {\n    // flush any buffered input\n    this.lineStream.push('\\n');\n  };\n  /**\n   * Add an additional parser for non-standard tags\n   *\n   * @param {Object}   options              a map of options for the added parser\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {string}   options.type         the type to register to the output\n   * @param {Function} [options.dataParser] function to parse the line into an object\n   * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n   */\n\n\n  _proto.addParser = function addParser(options) {\n    this.parseStream.addParser(options);\n  };\n  /**\n   * Add a custom header mapper\n   *\n   * @param {Object}   options\n   * @param {RegExp}   options.expression   a regular expression to match the custom header\n   * @param {Function} options.map          function to translate tag into a different tag\n   */\n\n\n  _proto.addTagMapper = function addTagMapper(options) {\n    this.parseStream.addTagMapper(options);\n  };\n\n  return Parser;\n}(Stream);\n\n/**\n * @file m3u8/index.js\n *\n * Utilities for parsing M3U8 files. If the entire manifest is available,\n * `Parser` will create an object representation with enough detail for managing\n * playback. `ParseStream` and `LineStream` are lower-level parsing primitives\n * that do not assume the entirety of the manifest is ready and expose a\n * ReadableStream-like interface.\n */\n\nexport { LineStream, ParseStream, Parser };\n","/*\n * pkcs7.pad\n * https://github.com/brightcove/pkcs7\n *\n * Copyright (c) 2014 Brightcove\n * Licensed under the apache2 license.\n */\n\nvar PADDING = void 0;\n\n/**\n * Returns a new Uint8Array that is padded with PKCS#7 padding.\n * @param plaintext {Uint8Array} the input bytes before encryption\n * @return {Uint8Array} the padded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction pad(plaintext) {\n  var padding = PADDING[plaintext.byteLength % 16 || 0];\n  var result = new Uint8Array(plaintext.byteLength + padding.length);\n\n  result.set(plaintext);\n  result.set(padding, plaintext.byteLength);\n\n  return result;\n}\n\n// pre-define the padding values\nPADDING = [[16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16], [15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15], [14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14], [13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], [12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12], [11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], [10, 10, 10, 10, 10, 10, 10, 10, 10, 10], [9, 9, 9, 9, 9, 9, 9, 9, 9], [8, 8, 8, 8, 8, 8, 8, 8], [7, 7, 7, 7, 7, 7, 7], [6, 6, 6, 6, 6, 6], [5, 5, 5, 5, 5], [4, 4, 4, 4], [3, 3, 3], [2, 2], [1]];\n\n/**\n * Returns the subarray of a Uint8Array without PKCS#7 padding.\n * @param padded {Uint8Array} unencrypted bytes that have been padded\n * @return {Uint8Array} the unpadded bytes\n * @see http://tools.ietf.org/html/rfc5652\n */\nfunction unpad(padded) {\n  return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n}\n\nvar version = \"1.0.2\";\n\nexport { pad, unpad, version as VERSION };\n","import { unpad } from 'pkcs7';\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * @file aes.js\n *\n * This file contains an adaptation of the AES decryption algorithm\n * from the Standford Javascript Cryptography Library. That work is\n * covered by the following copyright and permissions notice:\n *\n * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * The views and conclusions contained in the software and documentation\n * are those of the authors and should not be interpreted as representing\n * official policies, either expressed or implied, of the authors.\n */\n\n/**\n * Expand the S-box tables.\n *\n * @private\n */\nvar precompute = function precompute() {\n  var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n  var encTable = tables[0];\n  var decTable = tables[1];\n  var sbox = encTable[4];\n  var sboxInv = decTable[4];\n  var i = void 0;\n  var x = void 0;\n  var xInv = void 0;\n  var d = [];\n  var th = [];\n  var x2 = void 0;\n  var x4 = void 0;\n  var x8 = void 0;\n  var s = void 0;\n  var tEnc = void 0;\n  var tDec = void 0;\n\n  // Compute double and third tables\n  for (i = 0; i < 256; i++) {\n    th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n  }\n\n  for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n    // Compute sbox\n    s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n    s = s >> 8 ^ s & 255 ^ 99;\n    sbox[x] = s;\n    sboxInv[s] = x;\n\n    // Compute MixColumns\n    x8 = d[x4 = d[x2 = d[x]]];\n    tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n    tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n    for (i = 0; i < 4; i++) {\n      encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n      decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n    }\n  }\n\n  // Compactify. Considerable speedup on Firefox.\n  for (i = 0; i < 5; i++) {\n    encTable[i] = encTable[i].slice(0);\n    decTable[i] = decTable[i].slice(0);\n  }\n  return tables;\n};\nvar aesTables = null;\n\n/**\n * Schedule out an AES key for both encryption and decryption. This\n * is a low-level class. Use a cipher mode to do bulk encryption.\n *\n * @class AES\n * @param key {Array} The key as an array of 4, 6 or 8 words.\n */\n\nvar AES = function () {\n  function AES(key) {\n    classCallCheck(this, AES);\n\n    /**\n     * The expanded S-box and inverse S-box tables. These will be computed\n     * on the client so that we don't have to send them down the wire.\n     *\n     * There are two tables, _tables[0] is for encryption and\n     * _tables[1] is for decryption.\n     *\n     * The first 4 sub-tables are the expanded S-box with MixColumns. The\n     * last (_tables[01][4]) is the S-box itself.\n     *\n     * @private\n     */\n    // if we have yet to precompute the S-box tables\n    // do so now\n    if (!aesTables) {\n      aesTables = precompute();\n    }\n    // then make a copy of that object for use\n    this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n    var i = void 0;\n    var j = void 0;\n    var tmp = void 0;\n    var encKey = void 0;\n    var decKey = void 0;\n    var sbox = this._tables[0][4];\n    var decTable = this._tables[1];\n    var keyLen = key.length;\n    var rcon = 1;\n\n    if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n      throw new Error('Invalid aes key size');\n    }\n\n    encKey = key.slice(0);\n    decKey = [];\n    this._key = [encKey, decKey];\n\n    // schedule encryption keys\n    for (i = keyLen; i < 4 * keyLen + 28; i++) {\n      tmp = encKey[i - 1];\n\n      // apply sbox\n      if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n        tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255];\n\n        // shift rows and add rcon\n        if (i % keyLen === 0) {\n          tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n          rcon = rcon << 1 ^ (rcon >> 7) * 283;\n        }\n      }\n\n      encKey[i] = encKey[i - keyLen] ^ tmp;\n    }\n\n    // schedule decryption keys\n    for (j = 0; i; j++, i--) {\n      tmp = encKey[j & 3 ? i : i - 4];\n      if (i <= 4 || j < 4) {\n        decKey[j] = tmp;\n      } else {\n        decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n      }\n    }\n  }\n\n  /**\n   * Decrypt 16 bytes, specified as four 32-bit words.\n   *\n   * @param {Number} encrypted0 the first word to decrypt\n   * @param {Number} encrypted1 the second word to decrypt\n   * @param {Number} encrypted2 the third word to decrypt\n   * @param {Number} encrypted3 the fourth word to decrypt\n   * @param {Int32Array} out the array to write the decrypted words\n   * into\n   * @param {Number} offset the offset into the output array to start\n   * writing results\n   * @return {Array} The plaintext.\n   */\n\n\n  AES.prototype.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n    var key = this._key[1];\n    // state variables a,b,c,d are loaded with pre-whitened data\n    var a = encrypted0 ^ key[0];\n    var b = encrypted3 ^ key[1];\n    var c = encrypted2 ^ key[2];\n    var d = encrypted1 ^ key[3];\n    var a2 = void 0;\n    var b2 = void 0;\n    var c2 = void 0;\n\n    // key.length === 2 ?\n    var nInnerRounds = key.length / 4 - 2;\n    var i = void 0;\n    var kIndex = 4;\n    var table = this._tables[1];\n\n    // load up the tables\n    var table0 = table[0];\n    var table1 = table[1];\n    var table2 = table[2];\n    var table3 = table[3];\n    var sbox = table[4];\n\n    // Inner rounds. Cribbed from OpenSSL.\n    for (i = 0; i < nInnerRounds; i++) {\n      a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n      b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n      c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n      d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n      kIndex += 4;\n      a = a2;b = b2;c = c2;\n    }\n\n    // Last round.\n    for (i = 0; i < 4; i++) {\n      out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n      a2 = a;a = b;b = c;c = d;d = a2;\n    }\n  };\n\n  return AES;\n}();\n\n/**\n * @file stream.js\n */\n/**\n * A lightweight readable stream implemention that handles event dispatching.\n *\n * @class Stream\n */\nvar Stream = function () {\n  function Stream() {\n    classCallCheck(this, Stream);\n\n    this.listeners = {};\n  }\n\n  /**\n   * Add a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener the callback to be invoked when an event of\n   * the specified type occurs\n   */\n\n\n  Stream.prototype.on = function on(type, listener) {\n    if (!this.listeners[type]) {\n      this.listeners[type] = [];\n    }\n    this.listeners[type].push(listener);\n  };\n\n  /**\n   * Remove a listener for a specified event type.\n   *\n   * @param {String} type the event name\n   * @param {Function} listener  a function previously registered for this\n   * type of event through `on`\n   * @return {Boolean} if we could turn it off or not\n   */\n\n\n  Stream.prototype.off = function off(type, listener) {\n    if (!this.listeners[type]) {\n      return false;\n    }\n\n    var index = this.listeners[type].indexOf(listener);\n\n    this.listeners[type].splice(index, 1);\n    return index > -1;\n  };\n\n  /**\n   * Trigger an event of the specified type on this stream. Any additional\n   * arguments to this function are passed as parameters to event listeners.\n   *\n   * @param {String} type the event name\n   */\n\n\n  Stream.prototype.trigger = function trigger(type) {\n    var callbacks = this.listeners[type];\n\n    if (!callbacks) {\n      return;\n    }\n\n    // Slicing the arguments on every invocation of this method\n    // can add a significant amount of overhead. Avoid the\n    // intermediate object creation for the common case of a\n    // single callback argument\n    if (arguments.length === 2) {\n      var length = callbacks.length;\n\n      for (var i = 0; i < length; ++i) {\n        callbacks[i].call(this, arguments[1]);\n      }\n    } else {\n      var args = Array.prototype.slice.call(arguments, 1);\n      var _length = callbacks.length;\n\n      for (var _i = 0; _i < _length; ++_i) {\n        callbacks[_i].apply(this, args);\n      }\n    }\n  };\n\n  /**\n   * Destroys the stream and cleans up.\n   */\n\n\n  Stream.prototype.dispose = function dispose() {\n    this.listeners = {};\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   *\n   * @param {Stream} destination the stream that will receive all `data` events\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function pipe(destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n  };\n\n  return Stream;\n}();\n\n/**\n * @file async-stream.js\n */\n/**\n * A wrapper around the Stream class to use setTiemout\n * and run stream \"jobs\" Asynchronously\n *\n * @class AsyncStream\n * @extends Stream\n */\n\nvar AsyncStream = function (_Stream) {\n  inherits(AsyncStream, _Stream);\n\n  function AsyncStream() {\n    classCallCheck(this, AsyncStream);\n\n    var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n    _this.jobs = [];\n    _this.delay = 1;\n    _this.timeout_ = null;\n    return _this;\n  }\n\n  /**\n   * process an async job\n   *\n   * @private\n   */\n\n\n  AsyncStream.prototype.processJob_ = function processJob_() {\n    this.jobs.shift()();\n    if (this.jobs.length) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    } else {\n      this.timeout_ = null;\n    }\n  };\n\n  /**\n   * push a job into the stream\n   *\n   * @param {Function} job the job to push into the stream\n   */\n\n\n  AsyncStream.prototype.push = function push(job) {\n    this.jobs.push(job);\n    if (!this.timeout_) {\n      this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n    }\n  };\n\n  return AsyncStream;\n}(Stream);\n\n/**\n * @file decrypter.js\n *\n * An asynchronous implementation of AES-128 CBC decryption with\n * PKCS#7 padding.\n */\n\n/**\n * Convert network-order (big-endian) bytes into their little-endian\n * representation.\n */\nvar ntoh = function ntoh(word) {\n  return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n};\n\n/**\n * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * use for the first round of CBC.\n * @return {Uint8Array} the decrypted bytes\n *\n * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n * @see https://tools.ietf.org/html/rfc2315\n */\nvar decrypt = function decrypt(encrypted, key, initVector) {\n  // word-level access to the encrypted bytes\n  var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n\n  var decipher = new AES(Array.prototype.slice.call(key));\n\n  // byte and word-level access for the decrypted output\n  var decrypted = new Uint8Array(encrypted.byteLength);\n  var decrypted32 = new Int32Array(decrypted.buffer);\n\n  // temporary variables for working with the IV, encrypted, and\n  // decrypted data\n  var init0 = void 0;\n  var init1 = void 0;\n  var init2 = void 0;\n  var init3 = void 0;\n  var encrypted0 = void 0;\n  var encrypted1 = void 0;\n  var encrypted2 = void 0;\n  var encrypted3 = void 0;\n\n  // iteration variable\n  var wordIx = void 0;\n\n  // pull out the words of the IV to ensure we don't modify the\n  // passed-in reference and easier access\n  init0 = initVector[0];\n  init1 = initVector[1];\n  init2 = initVector[2];\n  init3 = initVector[3];\n\n  // decrypt four word sequences, applying cipher-block chaining (CBC)\n  // to each decrypted block\n  for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n    // convert big-endian (network order) words into little-endian\n    // (javascript order)\n    encrypted0 = ntoh(encrypted32[wordIx]);\n    encrypted1 = ntoh(encrypted32[wordIx + 1]);\n    encrypted2 = ntoh(encrypted32[wordIx + 2]);\n    encrypted3 = ntoh(encrypted32[wordIx + 3]);\n\n    // decrypt the block\n    decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx);\n\n    // XOR with the IV, and restore network byte-order to obtain the\n    // plaintext\n    decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n    decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n    decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n    decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3);\n\n    // setup the IV for the next round\n    init0 = encrypted0;\n    init1 = encrypted1;\n    init2 = encrypted2;\n    init3 = encrypted3;\n  }\n\n  return decrypted;\n};\n\n/**\n * The `Decrypter` class that manages decryption of AES\n * data through `AsyncStream` objects and the `decrypt`\n * function\n *\n * @param {Uint8Array} encrypted the encrypted bytes\n * @param {Uint32Array} key the bytes of the decryption key\n * @param {Uint32Array} initVector the initialization vector (IV) to\n * @param {Function} done the function to run when done\n * @class Decrypter\n */\n\nvar Decrypter = function () {\n  function Decrypter(encrypted, key, initVector, done) {\n    classCallCheck(this, Decrypter);\n\n    var step = Decrypter.STEP;\n    var encrypted32 = new Int32Array(encrypted.buffer);\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var i = 0;\n\n    this.asyncStream_ = new AsyncStream();\n\n    // split up the encryption job and do the individual chunks asynchronously\n    this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    for (i = step; i < encrypted32.length; i += step) {\n      initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n    }\n    // invoke the done() callback when everything is finished\n    this.asyncStream_.push(function () {\n      // remove pkcs#7 padding from the decrypted bytes\n      done(null, unpad(decrypted));\n    });\n  }\n\n  /**\n   * a getter for step the maximum number of bytes to process at one time\n   *\n   * @return {Number} the value of step 32000\n   */\n\n\n  /**\n   * @private\n   */\n  Decrypter.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n    return function () {\n      var bytes = decrypt(encrypted, key, initVector);\n\n      decrypted.set(bytes, encrypted.byteOffset);\n    };\n  };\n\n  createClass(Decrypter, null, [{\n    key: 'STEP',\n    get: function get$$1() {\n      // 4 * 8000;\n      return 32000;\n    }\n  }]);\n  return Decrypter;\n}();\n\n/**\n * @file index.js\n *\n * Index module to easily import the primary components of AES-128\n * decryption. Like this:\n *\n * ```js\n * import {Decrypter, decrypt, AsyncStream} from 'aes-decrypter';\n * ```\n */\n\nexport { decrypt, Decrypter, AsyncStream };\n","/**\n * @license\n * Video.js 7.6.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport tsml from 'tsml';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport keycode from 'keycode';\nimport XHR from 'xhr';\nimport vtt from 'videojs-vtt.js';\nimport URLToolkit from 'url-toolkit';\nimport { Parser } from 'm3u8-parser';\nimport { parse, parseUTCTiming } from 'mpd-parser';\nimport mp4Inspector from 'mux.js/lib/tools/mp4-inspector';\nimport mp4probe from 'mux.js/lib/mp4/probe';\nimport { CaptionParser } from 'mux.js/lib/mp4';\nimport tsInspector from 'mux.js/lib/tools/ts-inspector.js';\nimport { Decrypter, AsyncStream, decrypt } from 'aes-decrypter';\n\nvar version = \"7.6.0\";\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  strings.raw = raw;\n  return strings;\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args));\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = createLogger('VIDEOJS');\nvar createLogger$1 = log.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var cs = window$1.getComputedStyle(el);\n    return cs ? cs[prop] : '';\n  }\n\n  return '';\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set \", \" to \", \".\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log.warn(tsml(_templateObject(), propName, val));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  var box;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window$1.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window$1.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop; // Android sometimes returns slightly off decimal values, so need to round\n\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\nvar elData = {};\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\n\nvar elIdAttr = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\n\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\n\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\n\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  } // Remove all stored data\n\n\n  delete elData[id]; // Remove the elIdAttr property from the DOM node\n\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  } // Returns fixed-up instance\n\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n    window$1.addEventListener('test', null, opts);\n    window$1.removeEventListener('test', null, opts);\n  } catch (e) {// disregard\n  }\n})();\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    var targetData = getData(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window$1, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  }; // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\n\n\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\n\n\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\n\n\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component =\n/*#__PURE__*/\nfunction () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    } // Hold the reference to the parent component via `addChild` method\n\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {}; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready); // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose() {\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    }); // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window$1.getComputedStyle === 'function') {\n      var computedStyle = window$1.getComputedStyle(this.el_);\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    } // remove 'px' from variable and parse as integer\n\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0) {\n      var rule = \"offset\" + toTitleCase(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser.\n      event.stopPropagation();\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n    fn = bind(this, fn);\n    timeoutId = window$1.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.on('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    window$1.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-timeout-\" + timeoutId;\n    this.off('dispose', disposeFn);\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n    var intervalId = window$1.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.on('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    window$1.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = \"vjs-interval-\" + intervalId;\n    this.off('dispose', disposeFn);\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n      id = window$1.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.on('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.setTimeout(fn, 1000 / 60);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window$1.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = \"vjs-raf-\" + id;\n      this.off('dispose', disposeFn);\n      return id;\n    } // Fall back to using a timer.\n\n\n    return this.clearTimeout(id);\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent.registerComponent('Component', Component);\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch);\n\nvar browser = /*#__PURE__*/Object.freeze({\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IPOD: IS_IPOD,\n  IS_IOS: IS_IOS,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_ANY_SAFARI: IS_ANY_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED\n});\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList =\n/*#__PURE__*/\nfunction (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _this;\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\"></a>\";\n    a = div.firstChild; // prevent the div from affecting layout\n\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  } // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n    div.innerHTML = \"<a href=\\\"\" + url + \"\\\">x</a>\";\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window$1.location;\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        var loadHandler;\n\n        var errorHandler = function errorHandler() {\n          log.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        };\n\n        loadHandler = function loadHandler() {\n          track.tech_.off('vttjserror', errorHandler);\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.one('vttjsloaded', loadHandler);\n        track.tech_.one('vttjserror', errorHandler);\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(_assertThisInitialized(_this), function () {\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      _this.tech_.ready(function () {\n        _this.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          var _this2 = this;\n\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (mode !== 'disabled') {\n            this.tech_.ready(function () {\n              _this2.tech_.on('timeupdate', timeupdateHandler);\n            }, true);\n          } else {\n            this.tech_.off('timeupdate', timeupdateHandler);\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n      loadTrack(settings.src, _assertThisInitialized(_this));\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  var _proto = TextTrack.prototype;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack =\n/*#__PURE__*/\nfunction (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement =\n/*#__PURE__*/\nfunction (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\nvar ALL = mergeOptions(NORMAL, REMOTE);\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this; // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/flash player doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n    Tech.techs_[name] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1,\n  volume: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('keydown', this.handleKeyDown);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('keydown', this.handleKeyDown);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {}\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    player.on('posterchange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.tech(true)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n    var updateDisplayHandler = bind(_assertThisInitialized(_this), _this.updateDisplay);\n    player.on('loadstart', bind(_assertThisInitialized(_this), _this.toggleDisplay));\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', bind(_assertThisInitialized(_this), _this.preselectTrack)); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', _this.handlePlay);\n\n    _this.on(player, 'pause', _this.handlePause);\n\n    if (options.replay) {\n      _this.on(player, 'ended', _this.handleEnded);\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n\n    event.stopPropagation();\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.throttledUpdateContent = throttle(bind(_assertThisInitialized(_this), _this.updateContent), 25);\n\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\",\n      innerHTML: \"<span class=\\\"vjs-control-text\\\" role=\\\"presentation\\\">\" + this.localize(this.labelText_) + \"\\xA0</span>\"\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  }\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n  ;\n\n  _proto.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  }\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    this.updateFormattedTime_(time);\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n    _this.on(player, 'durationchange', _this.updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', _this.updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay =\n/*#__PURE__*/\nfunction (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n\n    _this.on(player, 'ended', _this.handleEnded);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    el.insertBefore(createEl('span', {}, {\n      'aria-hidden': true\n    }, '-'), this.contentEl_);\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    } // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  }\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\">\" + this.localize('Stream Type') + \"\\xA0</span>\" + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatus);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      innerHTML: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus(e) {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatus);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this; // Set property names to bar to match with the child Slider class is looking for\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('keydown', this.handleKeyDown);\n    this.on('click', this.handleClick);\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('keydown', this.handleKeyDown);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n    this.handleMouseMove(event);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    } // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n\n\n    var progress = this.getPercent();\n    var bar = this.bar; // If there's no bar...\n\n    if (!bar) {\n      return;\n    } // Protect against no duration and other division issues\n\n\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    } // Convert to a percentage for setting\n\n\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style; // Set the new bar width or height\n\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', _this.update);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: \"<span class=\\\"vjs-control-text\\\"><span>\" + this.localize('Loaded') + \"</span>: <span class=\\\"vjs-control-text-loaded-percentage\\\">0%</span></span>\"\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var liveTracker = this.player_.liveTracker;\n    var buffered = this.player_.buffered();\n    var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n    var controlTextPercentage = this.$('.vjs-control-text-loaded-percentage'); // get the percent width of a time compared to the total end\n\n    var percentify = function percentify(time, end, rounded) {\n      // no NaN\n      var percent = time / end || 0;\n      percent = (percent >= 1 ? 1 : percent) * 100;\n\n      if (rounded) {\n        percent = percent.toFixed(2);\n      }\n\n      return percent + '%';\n    }; // update the width of the progress bar\n\n\n    this.el_.style.width = percentify(bufferedEnd, duration); // update the control-text\n\n    textContent(controlTextPercentage, percentify(bufferedEnd, duration, true)); // add child elements to represent the individual buffered time ranges\n\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      } // set the percent based on the width of the progress bar (bufferedEnd)\n\n\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    } // remove unused buffered range elements\n\n\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeTooltip.prototype;\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {String} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var content;\n\n      var duration = _this.player_.duration();\n\n      if (_this.player_.liveTracker && _this.player_.liveTracker.isLive()) {\n        var liveWindow = _this.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = PlayProgressBar.prototype;\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), 25);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12; // The interval at which the bar should update as it progresses.\n\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n    this.on(this.player_, 'durationchange', this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n    this.on(this.player_, ['playing'], this.enableInterval_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableInterval_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.hidden) {\n      this.disableInterval_(e);\n    } else {\n      this.enableInterval_(); // we just switched back to the page and someone may be looking, so, update ASAP\n\n      this.requestAnimationFrame(this.update);\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    var _this2 = this;\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = this.setInterval(function () {\n      _this2.requestAnimationFrame(_this2.update);\n    }, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e.type !== 'ended') {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessibility\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n  ;\n\n  _proto.update_ = function update_(currentTime, percent) {\n    var liveTracker = this.player_.liveTracker;\n    var duration = this.player_.duration();\n\n    if (liveTracker && liveTracker.isLive()) {\n      duration = this.player_.liveTracker.liveCurrentTime();\n    } // machine readable value of progress bar (percentage complete)\n\n\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2)); // human readable value of progress bar (time complete)\n\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}')); // Update the `PlayProgressBar`.\n\n    if (this.bar) {\n      this.bar.update(getBoundingClientRect(this.el_), percent);\n    }\n  }\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    // if the offsetParent is null, then this element is hidden, in which case\n    // we don't need to update it.\n    if (this.el().offsetParent === null) {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent >= 1 ? 1 : percent || 0;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.player_.currentTime(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.duration());\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n      this.player_.currentTime(this.player_.duration() * gotoFraction);\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), 25);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n    this.addClass('disabled');\n    this.enabled_ = false;\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], _this.handlePictureInPictureChange); // TODO: Activate button on player loadedmetadata event.\n    // TODO: Deactivate button on player emptied event.\n    // TODO: Deactivate button if disablepictureinpicture attribute is present.\n\n\n    if (!document.pictureInPictureEnabled) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar =\n/*#__PURE__*/\nfunction (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', _this.updateLastVolume_);\n\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n\n    _this.on('touchstart', _this.handleMouseDown); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle =\n/*#__PURE__*/\nfunction (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyDown); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = bind(_assertThisInitialized(_this), _this.handleBlur);\n    _this.boundHandleTapClick_ = bind(_assertThisInitialized(_this), _this.handleTapClick);\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', _this.handleKeyDown);\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.menu.show();\n    });\n\n    _this.on('keydown', _this.handleSubmenuKeyDown);\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n      this.hideThreshold_ += 1;\n      var titleComponent = new Component(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem =\n/*#__PURE__*/\nfunction (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label) + \"</span>\",\n      tabIndex: -1\n    }, props), attrs);\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_assertThisInitialized(_this), _this.update));\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  }\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime(); // vjs.log(currentTime, cue.startTime);\n\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n\n    _TextTrackButton.prototype.update.call(this);\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem =\n/*#__PURE__*/\nfunction (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Captions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton =\n/*#__PURE__*/\nfunction (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl(type, props, attrs) {\n    var innerHTML = \"<span class=\\\"vjs-menu-item-text\\\">\" + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += \"\\n        <span aria-hidden=\\\"true\\\" class=\\\"vjs-icon-placeholder\\\"></span>\\n        <span class=\\\"vjs-control-text\\\"> \" + this.localize('Descriptions') + \"</span>\\n      \";\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      track.enabled = track === this.track;\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton =\n/*#__PURE__*/\nfunction (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem =\n/*#__PURE__*/\nfunction (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton =\n/*#__PURE__*/\nfunction (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n\n    _this.on(player, 'ratechange', _this.updateLabel);\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates(); // this will select first one if the last one currently selected\n\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n\n    this.player().playbackRate(newRate);\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer =\n/*#__PURE__*/\nfunction (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    }); // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n\n\n    el.innerHTML = \"\\xA0\";\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'pictureInPictureToggle', 'fullscreenToggle']\n};\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', _this.open);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings =\n/*#__PURE__*/\nfunction (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = bind(_assertThisInitialized(_this), _this.updateDisplay); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/* track when we are at the live edge, and other helpers for live playback */\n\nvar LiveTracker =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', _this.handleDurationchange); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange);\n    }\n\n    return _this;\n  }\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  };\n\n  _proto.isBehind_ = function isBehind_() {\n    // don't report that we are behind until a timeupdate has been seen\n    if (!this.timeupdateSeen_) {\n      return false;\n    }\n\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime();\n    var seekableIncrement = this.seekableIncrement_; // the live edge window is the amount of seconds away from live\n    // that a player can be, but still be considered live.\n    // we add 0.07 because the live tracking happens every 30ms\n    // and we want some wiggle room for short segment live playback\n\n    var liveEdgeWindow = seekableIncrement * 2 + 0.07; // on Android liveCurrentTime can bee Infinity, because seekableEnd\n    // can be Infinity, so we handle that case.\n\n    return liveCurrentTime !== Infinity && liveCurrentTime - liveEdgeWindow >= currentTime;\n  } // all the functionality for tracking when seek end changes\n  // and for tracking how far past seek end we should be\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    this.pastSeekEnd_ = this.pastSeekEnd_;\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newSeekEnd = this.seekableEnd(); // we can only tell if we are behind live, when seekable changes\n    // once we detect that seekable has changed we check the new seek\n    // end against current time, with a fudge value of half a second.\n\n    if (newSeekEnd !== this.lastSeekEnd_) {\n      if (this.lastSeekEnd_) {\n        this.seekableIncrement_ = Math.abs(newSeekEnd - this.lastSeekEnd_);\n      }\n\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = newSeekEnd;\n      this.trigger('seekableendchange');\n    }\n\n    this.pastSeekEnd_ = this.pastSeekEnd() + 0.03;\n\n    if (this.isBehind_() !== this.behindLiveEdge()) {\n      this.behindLiveEdge_ = this.isBehind_();\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    if (this.player_.duration() === Infinity) {\n      this.startTracking();\n    } else {\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    var _this2 = this;\n\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLive_, 30);\n    this.trackLive_();\n    this.on(this.player_, 'play', this.trackLive_);\n    this.on(this.player_, 'pause', this.trackLive_); // this is to prevent showing that we are not live\n    // before a video starts to play\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay);\n\n      this.handleTimeupdate = function () {\n        _this2.timeupdateSeen_ = true;\n        _this2.handleTimeupdate = null;\n      };\n\n      this.one(this.player_, 'timeupdate', this.handleTimeupdate);\n    }\n  };\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = null;\n    this.behindLiveEdge_ = null;\n    this.timeupdateSeen_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.seekableIncrement_ = 12;\n    this.off(this.player_, 'play', this.trackLive_);\n    this.off(this.player_, 'pause', this.trackLive_);\n    this.off(this.player_, 'play', this.handlePlay);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge);\n\n    if (this.handleTimeupdate) {\n      this.off(this.player_, 'timeupdate', this.handleTimeupdate);\n      this.handleTimeupdate = null;\n    }\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime();\n\n    if (liveCurrentTime === Infinity) {\n      return Infinity;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * Returns how far past seek end we expect current time to be\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  };\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.player_.currentTime(this.liveCurrentTime());\n\n    if (this.player_.paused()) {\n      this.player_.play();\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component);\n\nComponent.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nfunction _templateObject$1() {\n  var data = _taggedTemplateLiteralLoose([\"Text Tracks are being loaded from another origin but the crossorigin attribute isn't used.\\n            This may prevent text tracks from loading.\"]);\n\n  _templateObject$1 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 =\n/*#__PURE__*/\nfunction (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log.warn(tsml(_templateObject$1()));\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        techTracks.trigger({\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        });\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play(); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n\nif (isReal()) {\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks(); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\nfunction _templateObject$2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n        Using the tech directly can be dangerous. I hope you know what you're doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      \"]);\n\n  _templateObject$2 = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = bind(_assertThisInitialized(_this), _this.documentFullscreenChange_);\n    _this.boundFullWindowOnEscKey_ = bind(_assertThisInitialized(_this), _this.fullWindowOnEscKey); // create logger\n\n    _this.log = createLogger$1(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    });\n\n    if (_this.fluid_) {\n      _this.on('playerreset', _this.updateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.on('keydown', _this.handleKeyDown);\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive);\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        tag[k] = el[k];\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off('playerreset', this.updateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(function () {\n        this.on('playerreset', this.updateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this3 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false; // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay(); // Grab tech-specific options from player options and add source and parent element to use.\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this3[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this3.on(_this3.tech_, event, _this3[\"handleTech\" + toTitleCase(event) + \"_\"]);\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this3.on(_this3.tech_, event, function (eventObj) {\n        if (_this3.tech_.playbackRate() === 0 && _this3.tech_.seeking()) {\n          _this3.queuedCallbacks_.push({\n            callback: _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this3),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this3[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'enterpictureinpicture', this.handleTechEnterPictureInPicture_);\n    this.on(this.tech_, 'leavepictureinpicture', this.handleTechLeavePictureInPicture_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this4 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this4[props.privateName] = _this4[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log.warn(tsml(_templateObject$2()));\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_(); // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n\n    this.on(this.tech_, 'mouseup', this.handleTechClick_);\n    this.on(this.tech_, 'dblclick', this.handleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mouseup', this.handleTechClick_);\n    this.off(this.tech_, 'dblclick', this.handleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this5 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this5.muted();\n\n      _this5.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this5.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this5.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this5.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](restoreMuted);\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && this.muted() !== true) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](muted);\n      }\n    } else if (type === 'muted' && this.muted() !== true) {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this5.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function (e) {\n      _this5.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this6 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this6.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the intial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            var techSrc = _this6.techGet('currentSrc');\n\n            _this6.lastSource_.tech = techSrc;\n\n            _this6.updateSourceCaches_(techSrc);\n          }\n\n          _this6.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this7 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this7.currentTime()) {\n        _this7.removeClass('vjs-waiting');\n\n        _this7.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mouseup\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n\n\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs); // If cancelling fullscreen, remove event listener.\n\n    if (this.isFullscreen() === false) {\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    }\n\n    if (this.fsApi_.prefixed) {\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('fullscreenchange');\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this8 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this8.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this9 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this9.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n\n        if (this.options_.liveui && this.player_.liveTracker) {\n          this.addClass('vjs-liveui');\n        }\n      } else {\n        this.removeClass('vjs-live');\n        this.removeClass('vjs-liveui');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return !!this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var fsOptions;\n    this.isFullscreen(true);\n\n    if (this.fsApi_.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_); // only pass FullscreenOptions to requestFullscreen if it isn't prefixed\n\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      }\n\n      silencePromise(this.el_[this.fsApi_.requestFullscreen](fsOptions));\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    this.isFullscreen(false); // Check for browser element fullscreen support\n\n    if (this.fsApi_.requestFullscreen) {\n      silencePromise(document[this.fsApi_.exitFullscreen]());\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('fullscreenchange');\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // These tags will be excluded entirely.\n\n      var excludedTags = ['textarea']; // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      }\n\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this10 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this10.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    var _this11 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.localize(this.options_.notSupportedMessage)\n        });\n      }, 0);\n      return;\n    } // intial sources\n\n\n    this.changingSrc_ = true;\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this11.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      _this11.cache_.sources = sources;\n\n      _this11.updateSourceCaches_(middlewareSource);\n\n      var err = _this11.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this11.src(sources.slice(1));\n        }\n\n        _this11.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this11.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.localize(this.options_.notSupportedMessage)\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this11.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this11.tech_);\n    });\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this12 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this12.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this13 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this13.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n    var _this$controlBar = this.controlBar,\n        durationDisplay = _this$controlBar.durationDisplay,\n        remainingTimeDisplay = _this$controlBar.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    } // Suppress the first error message for no compatible source until\n    // user interaction\n\n\n    if (this.options_.suppressNotSupportedError && err && err.message && err.message === this.localize(this.options_.notSupportedMessage)) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error');\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the language\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this14 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this14.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.updateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.updateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this15 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this15.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  flash: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player; // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = bind(this, this.dispose); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs$1(id, options, ready) {\n  var player = videojs$1.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n  videojs$1.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  videojs$1.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\n\n\nvideojs$1.hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvideojs$1.hooks = function (type, fn) {\n  videojs$1.hooks_[type] = videojs$1.hooks_[type] || [];\n\n  if (fn) {\n    videojs$1.hooks_[type] = videojs$1.hooks_[type].concat(fn);\n  }\n\n  return videojs$1.hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hook = function (type, fn) {\n  videojs$1.hooks(type, fn);\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvideojs$1.hookOnce = function (type, fn) {\n  videojs$1.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs$1.removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvideojs$1.removeHook = function (type, fn) {\n  var index = videojs$1.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs$1.hooks_[type] = videojs$1.hooks_[type].slice();\n  videojs$1.hooks_[type].splice(index, 1);\n  return true;\n}; // Add default styles\n\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs$1);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs$1.VERSION = version;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs$1.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs$1.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs$1.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs$1.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs$1.players = Player.players;\nvideojs$1.getComponent = Component.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs$1.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component.registerComponent.call(Component, name, comp);\n};\n\nvideojs$1.getTech = Tech.getTech;\nvideojs$1.registerTech = Tech.registerTech;\nvideojs$1.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs$1, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs$1.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs$1.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs$1.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs$1.extend = extend;\nvideojs$1.mergeOptions = mergeOptions;\nvideojs$1.bind = bind;\nvideojs$1.registerPlugin = Plugin.registerPlugin;\nvideojs$1.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs$1.plugin = function (name, plugin) {\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs$1.getPlugins = Plugin.getPlugins;\nvideojs$1.getPlugin = Plugin.getPlugin;\nvideojs$1.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs$1.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs$1.options.languages = mergeOptions(videojs$1.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs$1.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs$1.log = log;\nvideojs$1.createLogger = createLogger$1;\nvideojs$1.createTimeRange = videojs$1.createTimeRanges = createTimeRanges;\nvideojs$1.formatTime = formatTime;\nvideojs$1.setFormatTime = setFormatTime;\nvideojs$1.resetFormatTime = resetFormatTime;\nvideojs$1.parseUrl = parseUrl;\nvideojs$1.isCrossOrigin = isCrossOrigin;\nvideojs$1.EventTarget = EventTarget;\nvideojs$1.on = on;\nvideojs$1.one = one;\nvideojs$1.off = off;\nvideojs$1.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs$1.xhr = XHR;\nvideojs$1.TextTrack = TextTrack;\nvideojs$1.AudioTrack = AudioTrack;\nvideojs$1.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs$1[k] = function () {\n    log.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs$1.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs$1.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs$1.url = Url;\n\n/**\n * @videojs/http-streaming\n * @version 1.10.3\n * @copyright 2019 Brightcove, Inc\n * @license Apache-2.0\n */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = function resolveUrl(baseURL, relativeURL) {\n  // return early if we don't need to resolve\n  if (/^[a-z]+:/i.test(relativeURL)) {\n    return relativeURL;\n  } // if the base URL is relative then combine with the current location\n\n\n  if (!/\\/\\//i.test(baseURL)) {\n    baseURL = URLToolkit.buildAbsoluteURL(window$1.location.href, baseURL);\n  }\n\n  return URLToolkit.buildAbsoluteURL(baseURL, relativeURL);\n};\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {String} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {String}\n */\n\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar get$1 = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n/**\n * @file playlist-loader.js\n *\n * A state machine that manages the loading, caching, and updating of\n * M3U8 playlists.\n *\n */\n\n\nvar mergeOptions$1 = videojs$1.mergeOptions,\n    EventTarget$1 = videojs$1.EventTarget,\n    log$1 = videojs$1.log;\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n  * Returns a new array of segments that is the result of merging\n  * properties from an older list of segments onto an updated\n  * list. No properties on the updated playlist will be overridden.\n  *\n  * @param {Array} original the outdated list of segments\n  * @param {Array} update the updated list of segments\n  * @param {Number=} offset the index of the first update\n  * segment in the original segment list. For non-live playlists,\n  * this should always be zero and does not need to be\n  * specified. For live playlists, it should be the difference\n  * between the media sequence numbers in the original and updated\n  * playlists.\n  * @return a list of merged segment objects\n  */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var result = update.slice();\n  offset = offset || 0;\n  var length = Math.min(original.length, update.length + offset);\n\n  for (var i = offset; i < length; i++) {\n    result[i - offset] = mergeOptions$1(original[i], result[i - offset]);\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  if (!segment.resolvedUri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster = function updateMaster(master, media) {\n  var result = mergeOptions$1(master, {});\n  var playlist = result.playlists[media.uri];\n\n  if (!playlist) {\n    return null;\n  } // consider the playlist unchanged if the number of segments is equal, the media\n  // sequence number is unchanged, and this playlist hasn't become the end of the playlist\n\n\n  if (playlist.segments && media.segments && playlist.segments.length === media.segments.length && playlist.endList === media.endList && playlist.mediaSequence === media.mediaSequence) {\n    return null;\n  }\n\n  var mergedPlaylist = mergeOptions$1(playlist, media); // if the update could overlap existing segment information, merge the two segment lists\n\n  if (playlist.segments) {\n    mergedPlaylist.segments = updateSegments(playlist.segments, media.segments, media.mediaSequence - playlist.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var i = 0; i < result.playlists.length; i++) {\n    if (result.playlists[i].uri === media.uri) {\n      result.playlists[i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[media.uri] = mergedPlaylist;\n  return result;\n};\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  // setup by-URI lookups and resolve media playlist URIs\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    master.playlists[playlist.uri] = playlist;\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    playlist.id = i;\n\n    if (!playlist.attributes) {\n      // Although the spec states an #EXT-X-STREAM-INF tag MUST have a\n      // BANDWIDTH attribute, we can play the stream without it. This means a poorly\n      // formatted master playlist may not have an attribute list. An attributes\n      // property is added here to prevent undefined references when we encounter\n      // this scenario.\n      playlist.attributes = {};\n      log$1.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {Boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {Number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var lastSegment = media.segments[media.segments.length - 1];\n  var delay = void 0;\n\n  if (update && lastSegment && lastSegment.duration) {\n    delay = lastSegment.duration * 1000;\n  } else {\n    // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n    delay = (media.targetDuration || 10) * 500;\n  }\n\n  return delay;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {String} srcUrl the url to start with\n * @param {Boolean} withCredentials the withCredentials xhr option\n * @constructor\n */\n\n\nvar PlaylistLoader = function (_EventTarget) {\n  inherits(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(srcUrl, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, PlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (PlaylistLoader.__proto__ || Object.getPrototypeOf(PlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.srcUrl = srcUrl;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var hlsOptions = hls.options_;\n    _this.customTagParsers = hlsOptions && hlsOptions.customTagParsers || [];\n    _this.customTagMappers = hlsOptions && hlsOptions.customTagMappers || [];\n\n    if (!_this.srcUrl) {\n      throw new Error('A non-empty playlist URL is required');\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.on('mediaupdatetimeout', function () {\n      if (_this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n\n      _this.state = 'HAVE_CURRENT_METADATA';\n      _this.request = _this.hls_.xhr({\n        uri: resolveUrl(_this.master.uri, _this.media().uri),\n        withCredentials: _this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this.request) {\n          return;\n        }\n\n        if (error) {\n          return _this.playlistRequestError(_this.request, _this.media().uri, 'HAVE_METADATA');\n        }\n\n        _this.haveMetadata(_this.request, _this.media().uri);\n      });\n    });\n\n    return _this;\n  }\n\n  createClass(PlaylistLoader, [{\n    key: 'playlistRequestError',\n    value: function playlistRequestError(xhr, url, startingState) {\n      // any in-flight request is now finished\n      this.request = null;\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.error = {\n        playlist: this.master.playlists[url],\n        status: xhr.status,\n        message: 'HLS playlist request error at URL: ' + url + '.',\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    } // update the playlist loader's state in response to a new or\n    // updated playlist.\n\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(xhr, url) {\n      var _this2 = this; // any in-flight request is now finished\n\n\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      var parser = new Parser(); // adding custom tag parsers\n\n      this.customTagParsers.forEach(function (customParser) {\n        return parser.addParser(customParser);\n      }); // adding custom tag mappers\n\n      this.customTagMappers.forEach(function (mapper) {\n        return parser.addTagMapper(mapper);\n      });\n      parser.push(xhr.responseText);\n      parser.end();\n      parser.manifest.uri = url; // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n\n      parser.manifest.attributes = parser.manifest.attributes || {}; // merge this playlist into the master\n\n      var update = updateMaster(this.master, parser.manifest);\n      this.targetDuration = parser.manifest.targetDuration;\n\n      if (update) {\n        this.master = update;\n        this.media_ = this.master.playlists[parser.manifest.uri];\n      } else {\n        this.trigger('playlistunchanged');\n      } // refresh live playlists after a target duration passes\n\n\n      if (!this.media().endList) {\n        window$1.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this2.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!update));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Abort any outstanding work and clean up.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.finalRenditionTimeout);\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n     * When called without any arguments, returns the currently\n     * active media playlist. When called with a single argument,\n     * triggers the playlist loader to asynchronously switch to the\n     * specified media playlist. Calling this method while the\n     * loader is in the HAVE_NOTHING causes an error to be emitted\n     * but otherwise has no effect.\n     *\n     * @param {Object=} playlist the parsed media playlist\n     * object to switch to\n     * @param {Boolean=} is this the last available playlist\n     *\n     * @return {Playlist} the current loaded media\n     */\n\n  }, {\n    key: 'media',\n    value: function media(playlist, isFinalRendition) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      window$1.clearTimeout(this.finalRenditionTimeout);\n\n      if (isFinalRendition) {\n        var delay = playlist.targetDuration / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n\n      var startingState = this.state;\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to fully loaded playlists immediately\n\n      if (this.master.playlists[playlist.uri].endList) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      }\n\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      this.request = this.hls_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this3.request) {\n          return;\n        }\n\n        playlist.resolvedUri = resolveManifestRedirect(_this3.handleManifestRedirects, playlist.resolvedUri, req);\n\n        if (error) {\n          return _this3.playlistRequestError(_this3.request, playlist.uri, startingState);\n        }\n\n        _this3.haveMetadata(req, playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n\n\n        if (startingState === 'HAVE_MASTER') {\n          _this3.trigger('loadedmetadata');\n        } else {\n          _this3.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MASTER';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      }\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // request the specified URL\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'HLS playlist request error at URL: ' + _this5.srcUrl + '.',\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        var parser = new Parser(); // adding custom tag parsers\n\n        _this5.customTagParsers.forEach(function (customParser) {\n          return parser.addParser(customParser);\n        }); // adding custom tag mappers\n\n\n        _this5.customTagMappers.forEach(function (mapper) {\n          return parser.addTagMapper(mapper);\n        });\n\n        parser.push(req.responseText);\n        parser.end();\n        _this5.state = 'HAVE_MASTER';\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n        parser.manifest.uri = _this5.srcUrl; // loaded a master playlist\n\n        if (parser.manifest.playlists) {\n          _this5.master = parser.manifest;\n          setupMediaPlaylists(_this5.master);\n          resolveMediaGroupUris(_this5.master);\n\n          _this5.trigger('loadedplaylist');\n\n          if (!_this5.request) {\n            // no media playlist was specifically selected so start\n            // from the first listed one\n            _this5.media(parser.manifest.playlists[0]);\n          }\n\n          return;\n        } // loaded a media playlist\n        // infer a master playlist if none was previously requested\n\n\n        _this5.master = {\n          mediaGroups: {\n            'AUDIO': {},\n            'VIDEO': {},\n            'CLOSED-CAPTIONS': {},\n            'SUBTITLES': {}\n          },\n          uri: window$1.location.href,\n          playlists: [{\n            uri: _this5.srcUrl,\n            id: 0,\n            resolvedUri: _this5.srcUrl,\n            // m3u8-parser does not attach an attributes property to media playlists so make\n            // sure that the property is attached to avoid undefined reference errors\n            attributes: {}\n          }]\n        };\n        _this5.master.playlists[_this5.srcUrl] = _this5.master.playlists[0];\n\n        _this5.haveMetadata(req, _this5.srcUrl);\n\n        return _this5.trigger('loadedmetadata');\n      });\n    }\n  }]);\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs$1.createTimeRange;\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment = void 0;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segment.duration;\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {Number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {Number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  var backward = void 0;\n  var forward = void 0;\n\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {Number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {Number} startIndex\n  * @param {Number} endIndex\n  * @return {Number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(playlist, startIndex, endIndex) {\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref = [endIndex, startIndex];\n    startIndex = _ref[0];\n    endIndex = _ref[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += playlist.targetDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += playlist.segments[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Determines the media index of the segment corresponding to the safe edge of the live\n * window which is the duration of the last segment plus 2 target durations from the end\n * of the playlist.\n *\n * @param {Object} playlist\n *        a media playlist object\n * @return {Number}\n *         The media index of the segment at the safe live point. 0 if there is no \"safe\"\n *         point.\n * @function safeLiveIndex\n */\n\n\nvar safeLiveIndex = function safeLiveIndex(playlist) {\n  if (!playlist.segments.length) {\n    return 0;\n  }\n\n  var i = playlist.segments.length - 1;\n  var distanceFromEnd = playlist.segments[i].duration || playlist.targetDuration;\n  var safeDistance = distanceFromEnd + playlist.targetDuration * 2;\n\n  while (i--) {\n    distanceFromEnd += playlist.segments[i].duration;\n\n    if (distanceFromEnd >= safeDistance) {\n      break;\n    }\n  }\n\n  return Math.max(0, i);\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {Number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {Boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n * @returns {Number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var endSequence = useSafeLiveEnd ? safeLiveIndex(playlist) : playlist.segments.length;\n  return intervalDuration(playlist, playlist.mediaSequence + endSequence, expired);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {Number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n\nvar isWholeNumber = function isWholeNumber(num) {\n  return num - Math.floor(num) === 0;\n};\n\nvar roundSignificantDigit = function roundSignificantDigit(increment, num) {\n  // If we have a whole number, just add 1 to it\n  if (isWholeNumber(num)) {\n    return num + increment * 0.1;\n  }\n\n  var numDecimalDigits = num.toString().split('.')[1].length;\n\n  for (var i = 1; i <= numDecimalDigits; i++) {\n    var scale = Math.pow(10, i);\n    var temp = num * scale;\n\n    if (isWholeNumber(temp) || i === numDecimalDigits) {\n      return (temp + increment) / scale;\n    }\n  }\n};\n\nvar ceilLeastSignificantDigit = roundSignificantDigit.bind(null, 1);\nvar floorLeastSignificantDigit = roundSignificantDigit.bind(null, -1);\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} playlist the media playlist to query\n * @param {Number} currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {Number} startIndex\n * @param {Number} startTime\n * @return {Object}\n */\n\nvar getMediaInfoForTime = function getMediaInfoForTime(playlist, currentTime, startIndex, startTime) {\n  var i = void 0;\n  var segment = void 0;\n  var numSegments = playlist.segments.length;\n  var time = currentTime - startTime;\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (i = startIndex - 1; i >= 0; i--) {\n        segment = playlist.segments[i];\n        time += floorLeastSignificantDigit(segment.duration);\n\n        if (time > 0) {\n          return {\n            mediaIndex: i,\n            startTime: startTime - sumDurations(playlist, startIndex, i)\n          };\n        }\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      mediaIndex: 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (i = startIndex; i < 0; i++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          mediaIndex: 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (i = startIndex; i < numSegments; i++) {\n    segment = playlist.segments[i];\n    time -= ceilLeastSignificantDigit(segment.duration);\n\n    if (time < 0) {\n      return {\n        mediaIndex: i,\n        startTime: startTime + sumDurations(playlist, startIndex, i)\n      };\n    }\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    mediaIndex: numSegments - 1,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {Boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns whether the current playlist contains fMP4\n *\n * @return {Boolean} true if the playlist contains fMP4\n */\n\n\nvar isFmp4 = function isFmp4(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].map) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {String} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {Boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {Number} segmentDuration\n *        Duration of requested segment\n * @param {Number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {Number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {Number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist) {\n  var bytesReceived = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n}; // exports\n\n\nvar Playlist = {\n  duration: duration,\n  seekable: seekable,\n  safeLiveIndex: safeLiveIndex,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  isFmp4: isFmp4,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition\n};\n/**\n * @file xhr.js\n */\n\nvar videojsXHR = videojs$1.xhr,\n    mergeOptions$1$1 = videojs$1.mergeOptions;\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout for all hls requests\n    options = mergeOptions$1$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs$1.Hls.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    }\n\n    var request = videojsXHR(options, function (error, response) {\n      var reqResponse = request.response;\n\n      if (!error && reqResponse) {\n        request.responseTime = Date.now();\n        request.roundTripTime = request.responseTime - request.requestTime;\n        request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n        if (!request.bandwidth) {\n          request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n        }\n      }\n\n      if (response.headers) {\n        request.responseHeaders = response.headers;\n      } // videojs.xhr now uses a specific code on the error\n      // object to signal that a request has timed out instead\n      // of setting a boolean on the request object\n\n\n      if (error && error.code === 'ETIMEDOUT') {\n        request.timedout = true;\n      } // videojs.xhr no longer considers status codes outside of 200 and 0\n      // (for file uris) to be errors, but the old XHR did, so emulate that\n      // behavior. Status 206 may be used in response to byterange requests.\n\n\n      if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n        error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n      }\n\n      callback(error, request);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  var byterangeStart = void 0;\n  var byterangeEnd = void 0; // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n\n  byterangeEnd = byterange.offset + byterange.length - 1;\n  byterangeStart = byterange.offset;\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {Number} i the iterator on the range to convert\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {Number} e The number\n * @param {Number} i the iterator\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (ArrayBuffer.isView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex = void 0;\n  var ascii = void 0;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i = void 0;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils =\n/*#__PURE__*/\nObject.freeze({\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// Add 25% to the segment duration to account for small discrepencies in segment timing.\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {Number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {String} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject = void 0;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {Number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment = void 0;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {String} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {String} programTime The programTime as an ISO-8601 string\n * @return {Number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime = void 0;\n  var programDateTime = void 0;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {Number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @returns {String} err.message A detailed error message\n * @returns {Object} programTime\n * @returns {Number} programTime.mediaSeconds The streamTime in seconds\n * @returns {String} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === undefined ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {String} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {Number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {Boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @returns {String} err.message A detailed error message\n * @returns {Number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === undefined ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === undefined ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + ' was not found in the stream'\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + ' is not buffered yet. Try again'\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n// Fudge factor to account for TimeRanges rounding\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i = void 0;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs$1.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - TIME_FUDGE_FACTOR <= time && end + TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @returns {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs$1.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @returns {String} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {Number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {Number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime) {\n  var playbackRate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n * @param {TimeRanges} timeRanges\n * @returns {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * @file create-text-tracks-if-necessary.js\n */\n\n/**\n * Create text tracks on video.js if they exist on a segment.\n *\n * @param {Object} sourceBuffer the VSB or FSB\n * @param {Object} mediaSource the HTML media source\n * @param {Object} segment the segment that may contain the text track\n * @private\n */\n\n\nvar createTextTracksIfNecessary = function createTextTracksIfNecessary(sourceBuffer, mediaSource, segment) {\n  var player = mediaSource.player_; // create an in-band caption track if one is present in the segment\n\n  if (segment.captions && segment.captions.length) {\n    if (!sourceBuffer.inbandTextTracks_) {\n      sourceBuffer.inbandTextTracks_ = {};\n    }\n\n    for (var trackId in segment.captionStreams) {\n      if (!sourceBuffer.inbandTextTracks_[trackId]) {\n        player.tech_.trigger({\n          type: 'usage',\n          name: 'hls-608'\n        });\n        var track = player.textTracks().getTrackById(trackId);\n\n        if (track) {\n          // Resuse an existing track with a CC# id because this was\n          // very likely created by videojs-contrib-hls from information\n          // in the m3u8 for us to use\n          sourceBuffer.inbandTextTracks_[trackId] = track;\n        } else {\n          // Otherwise, create a track with the default `CC#` label and\n          // without a language\n          sourceBuffer.inbandTextTracks_[trackId] = player.addRemoteTextTrack({\n            kind: 'captions',\n            id: trackId,\n            label: trackId\n          }, false).track;\n        }\n      }\n    }\n  }\n\n  if (segment.metadata && segment.metadata.length && !sourceBuffer.metadataTrack_) {\n    sourceBuffer.metadataTrack_ = player.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    sourceBuffer.metadataTrack_.inBandMetadataTrackDispatchType = segment.metadata.dispatchType;\n  }\n};\n/**\n * @file remove-cues-from-track.js\n */\n\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i = void 0;\n  var cue = void 0;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any overlapping cue\n\n    if (cue.startTime <= end && cue.endTime >= start) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * @file add-text-track-data.js\n */\n\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs$1.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n\nvar durationOfVideo = function durationOfVideo(duration) {\n  var dur = void 0;\n\n  if (isNaN(duration) || Math.abs(duration) === Infinity) {\n    dur = Number.MAX_VALUE;\n  } else {\n    dur = duration;\n  }\n\n  return dur;\n};\n/**\n * Add text track data to a source handler given the captions and\n * metadata from the buffer.\n *\n * @param {Object} sourceHandler the virtual source buffer\n * @param {Array} captionArray an array of caption data\n * @param {Array} metadataArray an array of meta data\n * @private\n */\n\n\nvar addTextTrackData = function addTextTrackData(sourceHandler, captionArray, metadataArray) {\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n\n  if (captionArray) {\n    captionArray.forEach(function (caption) {\n      var track = caption.stream;\n      this.inbandTextTracks_[track].addCue(new Cue(caption.startTime + this.timestampOffset, caption.endTime + this.timestampOffset, caption.text));\n    }, sourceHandler);\n  }\n\n  if (metadataArray) {\n    var videoDuration = durationOfVideo(sourceHandler.mediaSource_.duration);\n    metadataArray.forEach(function (metadata) {\n      var time = metadata.cueTime + this.timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n\n      metadata.frames.forEach(function (frame) {\n        var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        this.metadataTrack_.addCue(cue);\n      }, this);\n    }, sourceHandler); // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    if (sourceHandler.metadataTrack_ && sourceHandler.metadataTrack_.cues && sourceHandler.metadataTrack_.cues.length) {\n      var cues = sourceHandler.metadataTrack_.cues;\n      var cuesArray = []; // Create a copy of the TextTrackCueList...\n      // ...disregarding cues with a falsey value\n\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i]) {\n          cuesArray.push(cues[i]);\n        }\n      } // Group cues by their startTime value\n\n\n      var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n        var timeSlot = obj[cue.startTime] || [];\n        timeSlot.push(cue);\n        obj[cue.startTime] = timeSlot;\n        return obj;\n      }, {}); // Sort startTimes by ascending order\n\n      var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); // Map each cue group's endTime to the next group's startTime\n\n      sortedStartTimes.forEach(function (startTime, idx) {\n        var cueGroup = cuesGroupedByStartTime[startTime];\n        var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n        cueGroup.forEach(function (cue) {\n          cue.endTime = nextTime;\n        });\n      });\n    }\n  }\n};\n\nvar win = typeof window !== 'undefined' ? window : {},\n    TARGET = typeof Symbol === 'undefined' ? '__target' : Symbol(),\n    SCRIPT_TYPE = 'application/javascript',\n    BlobBuilder = win.BlobBuilder || win.WebKitBlobBuilder || win.MozBlobBuilder || win.MSBlobBuilder,\n    URL = win.URL || win.webkitURL || URL && URL.msURL,\n    Worker = win.Worker;\n/**\n * Returns a wrapper around Web Worker code that is constructible.\n *\n * @function shimWorker\n *\n * @param { String }    filename    The name of the file\n * @param { Function }  fn          Function wrapping the code of the worker\n */\n\nfunction shimWorker(filename, fn) {\n  return function ShimWorker(forceFallback) {\n    var o = this;\n\n    if (!fn) {\n      return new Worker(filename);\n    } else if (Worker && !forceFallback) {\n      // Convert the function's inner code to a string to construct the worker\n      var source = fn.toString().replace(/^function.+?{/, '').slice(0, -1),\n          objURL = createSourceObject(source);\n      this[TARGET] = new Worker(objURL);\n      wrapTerminate(this[TARGET], objURL);\n      return this[TARGET];\n    } else {\n      var selfShim = {\n        postMessage: function postMessage(m) {\n          if (o.onmessage) {\n            setTimeout(function () {\n              o.onmessage({\n                data: m,\n                target: selfShim\n              });\n            });\n          }\n        }\n      };\n      fn.call(selfShim);\n\n      this.postMessage = function (m) {\n        setTimeout(function () {\n          selfShim.onmessage({\n            data: m,\n            target: o\n          });\n        });\n      };\n\n      this.isThisThread = true;\n    }\n  };\n} // Test Worker capabilities\n\n\nif (Worker) {\n  var testWorker,\n      objURL = createSourceObject('self.onmessage = function () {}'),\n      testArray = new Uint8Array(1);\n\n  try {\n    testWorker = new Worker(objURL); // Native browser on some Samsung devices throws for transferables, let's detect it\n\n    testWorker.postMessage(testArray, [testArray.buffer]);\n  } catch (e) {\n    Worker = null;\n  } finally {\n    URL.revokeObjectURL(objURL);\n\n    if (testWorker) {\n      testWorker.terminate();\n    }\n  }\n}\n\nfunction createSourceObject(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: SCRIPT_TYPE\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob(type));\n  }\n}\n\nfunction wrapTerminate(worker, objURL) {\n  if (!worker || !objURL) return;\n  var term = worker.terminate;\n  worker.objURL = objURL;\n\n  worker.terminate = function () {\n    if (worker.objURL) URL.revokeObjectURL(worker.objURL);\n    term.call(worker);\n  };\n}\n\nvar TransmuxWorker = new shimWorker(\"./transmuxer-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var transmuxerWorker = function () {\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n    var UINT32_MAX = Math.pow(2, 32) - 1;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n      AUDIO_HDLR = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // entry_count\n      0x00, 0x00, 0x00, 0x0c, // entry_size\n      0x75, 0x72, 0x6c, 0x20, // 'url' type\n      0x00, // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n      SMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n      STCO = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00, // version\n      0x00, 0x00, 0x01, // flags\n      0x00, 0x00, // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function box(type) {\n      var payload = [],\n          size = 0,\n          i,\n          result,\n          view;\n\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n\n      return result;\n    };\n\n    dinf = function dinf() {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n\n    esds = function esds(track) {\n      return box(types.esds, new Uint8Array([0x00, // version\n      0x00, 0x00, 0x00, // flags\n      // ES_Descriptor\n      0x03, // tag, ES_DescrTag\n      0x19, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04, // tag, DecoderConfigDescrTag\n      0x11, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      // DecoderSpecificInfo\n      0x05, // tag, DecoderSpecificInfoTag\n      0x02, // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function ftyp() {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n\n    hdlr = function hdlr(type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n\n    mdat = function mdat(data) {\n      return box(types.mdat, data);\n    };\n\n    mdhd = function mdhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x02, // creation_time\n      0x00, 0x00, 0x00, 0x03, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n      0x55, 0xc4, // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n\n      return box(types.mdhd, result);\n    };\n\n    mdia = function mdia(track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n\n    mfhd = function mfhd(sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function minf(track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n\n    moof = function moof(sequenceNumber, tracks) {\n      var trackFragments = [],\n          i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n\n    moov = function moov(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n\n    mvex = function mvex(tracks) {\n      var i = tracks.length,\n          boxes = [];\n\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n\n    mvhd = function mvhd(duration) {\n      var bytes = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01, // creation_time\n      0x00, 0x00, 0x00, 0x02, // modification_time\n      0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n      0x00, 0x01, 0x00, 0x00, // 1.0 rate\n      0x01, 0x00, // 1.0 volume\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n      return box(types.mvhd, bytes);\n    };\n\n    sdtp = function sdtp(track) {\n      var samples = track.samples || [],\n          bytes = new Uint8Array(4 + samples.length),\n          flags,\n          i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n\n      return box(types.sdtp, bytes);\n    };\n\n    stbl = function stbl(track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n\n    (function () {\n      var videoSample, audioSample;\n\n      stsd = function stsd(track) {\n        return box(types.stsd, new Uint8Array([0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n\n      videoSample = function videoSample(track) {\n        var sps = track.sps || [],\n            pps = track.pps || [],\n            sequenceParameterSets = [],\n            pictureParameterSets = [],\n            i; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n\n        return box(types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff, // width\n        (track.height & 0xff00) >> 8, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n        0x00, 0x18, // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n        track.profileIdc, // AVCProfileIndication\n        track.profileCompatibility, // profile_compatibility\n        track.levelIdc, // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length // numOfSequenceParameterSets\n        ]).concat(sequenceParameterSets).concat([pps.length // numOfPictureParameterSets\n        ]).concat(pictureParameterSets))), // \"PPS\"\n        box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0])) // avgBitrate\n        );\n      };\n\n      audioSample = function audioSample(track) {\n        return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n\n    tkhd = function tkhd(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x07, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // alternate_group\n      0x01, 0x00, // non-audio track volume\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n\n    traf = function traf(track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x3a, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / (UINT32_MAX + 1));\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % (UINT32_MAX + 1));\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n      0x00, 0x00, 0x00, // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 + // tfhd\n      20 + // tfdt\n      8 + // traf header\n      16 + // mfhd\n      8 + // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n\n    trak = function trak(track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n\n    trex = function trex(track) {\n      var result = new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n\n      return box(types.trex, result);\n    };\n\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function trunHeader(samples, offset) {\n        var durationPresent = 0,\n            sizePresent = 0,\n            flagsPresent = 0,\n            compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n\n        return [0x00, // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function videoTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF, // sample_size\n          sample.flags.isLeading << 2 | sample.flags.dependsOn, sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample, sample.flags.degradationPriority & 0xF0 << 8, sample.flags.degradationPriority & 0x0F, // sample_flags\n          (sample.compositionTimeOffset & 0xFF000000) >>> 24, (sample.compositionTimeOffset & 0xFF0000) >>> 16, (sample.compositionTimeOffset & 0xFF00) >>> 8, sample.compositionTimeOffset & 0xFF // sample_composition_time_offset\n          ]);\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      audioTrun = function audioTrun(track, offset) {\n        var bytes, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        bytes = trunHeader(samples, offset);\n\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes = bytes.concat([(sample.duration & 0xFF000000) >>> 24, (sample.duration & 0xFF0000) >>> 16, (sample.duration & 0xFF00) >>> 8, sample.duration & 0xFF, // sample_duration\n          (sample.size & 0xFF000000) >>> 24, (sample.size & 0xFF0000) >>> 16, (sample.size & 0xFF00) >>> 8, sample.size & 0xFF]); // sample_size\n        }\n\n        return box(types.trun, new Uint8Array(bytes));\n      };\n\n      trun = function trun(track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n\n        return videoTrun(track, offset);\n      };\n    })();\n\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function initSegment(tracks) {\n        var fileType = ftyp(),\n            movie = moov(tracks),\n            result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned = function toUnsigned(value) {\n      return value >>> 0;\n    };\n\n    var bin = {\n      toUnsigned: toUnsigned\n    };\n    var toUnsigned$1 = bin.toUnsigned;\n\n    var _findBox, parseType, timescale, startTime, getVideoTrackIds; // Find the data for a box specified by its path\n\n\n    _findBox = function findBox(data, path) {\n      var results = [],\n          i,\n          size,\n          type,\n          end,\n          subresults;\n\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$1(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = _findBox(data.subarray(i + 8, end), path.slice(1));\n\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n\n        i = end;\n      } // we've finished searching all of data\n\n\n      return results;\n    };\n    /**\n     * Returns the string representation of an ASCII encoded four byte buffer.\n     * @param buffer {Uint8Array} a four-byte buffer to translate\n     * @return {string} the corresponding string\n     */\n\n\n    parseType = function parseType(buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n\n    timescale = function timescale(init) {\n      var result = {},\n          traks = _findBox(init, ['moov', 'trak']); // mdhd timescale\n\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = _findBox(trak, ['tkhd'])[0];\n\n        if (!tkhd) {\n          return null;\n        }\n\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned$1(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = _findBox(trak, ['mdia', 'mdhd'])[0];\n\n        if (!mdhd) {\n          return null;\n        }\n\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned$1(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n\n    startTime = function startTime(timescale, fragment) {\n      var trafs, baseTimes, result; // we need info from two childrend of each track fragment box\n\n      trafs = _findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      baseTimes = [].concat.apply([], trafs.map(function (traf) {\n        return _findBox(traf, ['tfhd']).map(function (tfhd) {\n          var id, scale, baseTime; // get the track id from the tfhd\n\n          id = toUnsigned$1(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n          scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n          baseTime = _findBox(traf, ['tfdt']).map(function (tfdt) {\n            var version, result;\n            version = tfdt[0];\n            result = toUnsigned$1(tfdt[4] << 24 | tfdt[5] << 16 | tfdt[6] << 8 | tfdt[7]);\n\n            if (version === 1) {\n              result *= Math.pow(2, 32);\n              result += toUnsigned$1(tfdt[8] << 24 | tfdt[9] << 16 | tfdt[10] << 8 | tfdt[11]);\n            }\n\n            return result;\n          })[0];\n          baseTime = baseTime || Infinity; // convert base time to seconds\n\n          return baseTime / scale;\n        });\n      })); // return the minimum\n\n      result = Math.min.apply(null, baseTimes);\n      return isFinite(result) ? result : 0;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n\n    getVideoTrackIds = function getVideoTrackIds(init) {\n      var traks = _findBox(init, ['moov', 'trak']);\n\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = _findBox(trak, ['mdia', 'hdlr']);\n\n        var tkhds = _findBox(trak, ['tkhd']);\n\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n\n    var probe = {\n      findBox: _findBox,\n      parseType: parseType,\n      timescale: timescale,\n      startTime: startTime,\n      videoTrackIds: getVideoTrackIds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream = function Stream() {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n\n        this.off = function (type, listener) {\n          var index;\n\n          if (!listeners[type]) {\n            return false;\n          }\n\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n\n            length = callbacks.length;\n\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n\n    Stream.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n\n    Stream.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n\n    Stream.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n\n    var stream = Stream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // Convert an array of nal units into an array of frames with each frame being\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n      var i,\n          currentNal,\n          currentFrame = [],\n          frames = [];\n      currentFrame.byteLength = 0;\n\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts;\n            frames.push(currentFrame);\n          }\n\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n\n\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n\n    var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n      var i,\n          currentFrame,\n          currentGop = [],\n          gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n\n    var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n      var currentGop;\n\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n\n    var createDefaultSample = function createDefaultSample() {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n\n    var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n\n    var generateSampleTable = function generateSampleTable(gops, baseDataOffset) {\n      var h,\n          i,\n          sample,\n          currentGop,\n          currentFrame,\n          dataOffset = baseDataOffset || 0,\n          samples = [];\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n\n    var concatenateNalData = function concatenateNalData(gops) {\n      var h,\n          i,\n          j,\n          currentGop,\n          currentFrame,\n          currentNal,\n          dataOffset = 0,\n          nalsByteLength = gops.byteLength,\n          numberOfNals = gops.nalCount,\n          totalByteLength = nalsByteLength + 4 * numberOfNals,\n          data = new Uint8Array(totalByteLength),\n          view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var frameUtils = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable,\n      concatenateNalData: concatenateNalData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n    var zeroFill = function zeroFill(count) {\n      var a = [];\n\n      while (count--) {\n        a.push(0);\n      }\n\n      return a;\n    };\n\n    var makeTable = function makeTable(metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    }; // Frames-of-silence to use for filling in missing AAC frames\n\n\n    var coneOfSilence = {\n      96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n      88200: [highPrefix, [231], zeroFill(170), [56]],\n      64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n      48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n      44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n      32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n      24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n      16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n      12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n      11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n      8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n    };\n    var silence = makeTable(coneOfSilence);\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS = 90000,\n        // 90kHz clock\n    secondsToVideoTs,\n        secondsToAudioTs,\n        videoTsToSeconds,\n        audioTsToSeconds,\n        audioTsToVideoTs,\n        videoTsToAudioTs;\n\n    secondsToVideoTs = function secondsToVideoTs(seconds) {\n      return seconds * ONE_SECOND_IN_TS;\n    };\n\n    secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n\n    videoTsToSeconds = function videoTsToSeconds(timestamp) {\n      return timestamp / ONE_SECOND_IN_TS;\n    };\n\n    audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n\n    audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n\n    videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n\n    var clock = {\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$1 = 90000; // 90kHz clock\n\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function sumFrameByteLengths(array) {\n      var i,\n          currentObj,\n          sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n\n    var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n          frameDuration = 0,\n          audioGapDuration = 0,\n          audioFillFrameCount = 0,\n          audioFillDuration = 0,\n          silentFrame,\n          i;\n\n      if (!frames.length) {\n        return;\n      }\n\n      baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 / (track.samplerate / 1024));\n\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n\n      if (audioFillFrameCount < 1 || audioFillDuration > ONE_SECOND_IN_TS$1 / 2) {\n        return;\n      }\n\n      silentFrame = silence[track.samplerate];\n\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n\n      for (i = 0; i < audioFillFrameCount; i++) {\n        frames.splice(i, 0, {\n          data: silentFrame\n        });\n      }\n\n      track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n\n    var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n\n    var generateSampleTable$1 = function generateSampleTable(frames) {\n      var i,\n          currentFrame,\n          samples = [];\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n\n    var concatenateFrameData = function concatenateFrameData(frames) {\n      var i,\n          currentFrame,\n          dataOffset = 0,\n          data = new Uint8Array(sumFrameByteLengths(frames));\n\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n\n      return data;\n    };\n\n    var audioFrameUtils = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable$1,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$2 = 90000; // 90kHz clock\n\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function collectDtsInfo(track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n\n    var clearDtsInfo = function clearDtsInfo(track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n          scale,\n          minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$2;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n\n      return baseMediaDecodeTime;\n    };\n\n    var trackDecodeInfo = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Supplemental enhancement information (SEI) NAL units have a\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n        RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function parseSei(bytes) {\n      var i = 0,\n          result = {\n        payloadType: -1,\n        payloadSize: 0\n      },\n          payloadType = 0,\n          payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } // skip the payload and parse the next message\n\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n    var parseUserData = function parseUserData(sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n\n    var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n      var results = [],\n          i,\n          count,\n          offset,\n          data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n\n      count = userData[0] & 0x1f;\n\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n\n      return results;\n    };\n\n    var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    }; // exports\n\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    }; // -----------------\n    // Link To Transport\n    // -----------------\n\n    var CaptionStream = function CaptionStream() {\n      CaptionStream.prototype.init.call(this);\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n    };\n\n    CaptionStream.prototype = new stream();\n\n    CaptionStream.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n\n      sei = captionPacketParser.parseSei(event.escapedRBSP); // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n\n      userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n\n        return;\n      } // parse out CC data packets and save them for later\n\n\n      newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n\n    CaptionStream.prototype.flush = function () {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.ccStreams_.forEach(function (cc) {\n          cc.flush();\n        }, this);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } // this is where an 'else' would go for a dispatching packets\n        // to a theoretical Cea708Stream that handles SERVICEn data\n\n      }, this);\n      this.captionPackets_.length = 0;\n      this.ccStreams_.forEach(function (cc) {\n        cc.flush();\n      }, this);\n      return;\n    };\n\n    CaptionStream.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n\n    CaptionStream.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n\n    CaptionStream.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n\n    CaptionStream.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n\n    CaptionStream.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n\n    };\n\n    var getCharFromCode = function getCharFromCode(code) {\n      if (code === null) {\n        return '';\n      }\n\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function createDisplayBuffer() {\n      var result = [],\n          i = BOTTOM_ROW + 1;\n\n      while (i--) {\n        result.push('');\n      }\n\n      return result;\n    };\n\n    var Cea608Stream = function Cea608Stream(field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n\n            this.setRollUp(packet.pts, row);\n          }\n\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n\n      };\n    };\n\n    Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          // eslint-disable-next-line no-console\n          console.error('Skipping malformed caption.');\n          return '';\n        }\n      }) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n\n    Cea608Stream.prototype.isNormalChar = function (_char) {\n      return _char >= 0x20 && _char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n\n      this.displayed_[this.row_] = '';\n    };\n\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n\n    var captionStream = {\n      CaptionStream: CaptionStream,\n      Cea608Stream: Cea608Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n\n    var handleRollover = function handleRollover(value, reference) {\n      var direction = 1;\n\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n\n      return value;\n    };\n\n    var TimestampRolloverStream = function TimestampRolloverStream(type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream.prototype.init.call(this);\n      this.type_ = type;\n\n      this.push = function (data) {\n        if (data.type !== this.type_) {\n          return;\n        }\n\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n\n        data.dts = handleRollover(data.dts, referenceDTS);\n        data.pts = handleRollover(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n    };\n\n    TimestampRolloverStream.prototype = new stream();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream,\n      handleRollover: handleRollover\n    };\n\n    var percentEncode = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as UTf-8.\n    parseUtf8 = function parseUtf8(bytes, start, end) {\n      return decodeURIComponent(percentEncode(bytes, start, end));\n    },\n        // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n    parseIso88591 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    },\n        parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    },\n        tagParsers = {\n      TXXX: function TXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the text fields\n            tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n            tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n            break;\n          }\n        }\n\n        tag.data = tag.value;\n      },\n      WXXX: function WXXX(tag) {\n        var i;\n\n        if (tag.data[0] !== 3) {\n          // ignore frames with unrecognized character encodings\n          return;\n        }\n\n        for (i = 1; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.description = parseUtf8(tag.data, 1, i);\n            tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n            break;\n          }\n        }\n      },\n      PRIV: function PRIV(tag) {\n        var i;\n\n        for (i = 0; i < tag.data.length; i++) {\n          if (tag.data[i] === 0) {\n            // parse the description and URL fields\n            tag.owner = parseIso88591(tag.data, 0, i);\n            break;\n          }\n        }\n\n        tag.privateData = tag.data.subarray(i + 1);\n        tag.data = tag.privateData;\n      }\n    },\n        _MetadataStream;\n\n    _MetadataStream = function MetadataStream(options) {\n      var settings = {\n        debug: !!(options && options.debug),\n        // the bytes of the program-level descriptor field in MP2T\n        // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n        // program element descriptors\"\n        descriptor: options && options.descriptor\n      },\n          // the total size in bytes of the ID3 tag being parsed\n      tagSize = 0,\n          // tag data that is not complete enough to be parsed\n      buffer = [],\n          // the total number of bytes currently in the buffer\n      bufferSize = 0,\n          i;\n\n      _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n      this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          if (settings.debug) {\n            // eslint-disable-next-line no-console\n            console.log('Skipping unrecognized metadata packet');\n          }\n\n          return;\n        } // add this chunk to the data we've collected so far\n\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n\n        frameStart = 10;\n\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n          if (frameSize < 1) {\n            // eslint-disable-next-line no-console\n            return console.log('Malformed ID3 frame encountered. Skipping metadata parsing.');\n          }\n\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id;\n\n          if (tagParsers[frame.id]) {\n            tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n            // time for raw AAC data\n\n            if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.data,\n                  size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n              // on the value of this frame\n              // we couldn't have known the appropriate pts and dts before\n              // parsing this ID3 tag so set those values now\n\n              if (tag.pts === undefined && tag.dts === undefined) {\n                tag.pts = frame.timeStamp;\n                tag.dts = frame.timeStamp;\n              }\n\n              this.trigger('timestamp', frame);\n            }\n          }\n\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n\n        this.trigger('data', tag);\n      };\n    };\n\n    _MetadataStream.prototype = new stream();\n    var metadataStream = _MetadataStream;\n    var TimestampRolloverStream$1 = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n    var MP2T_PACKET_LENGTH = 188,\n        // bytes\n    SYNC_BYTE = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    _TransportPacketStream = function TransportPacketStream() {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH),\n          bytesInBuffer = 0;\n\n      _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n            endIndex = MP2T_PACKET_LENGTH,\n            everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE && everything[endIndex] === SYNC_BYTE) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH;\n            endIndex += MP2T_PACKET_LENGTH;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH && buffer[0] === SYNC_BYTE) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n\n        this.trigger('done');\n      };\n    };\n\n    _TransportPacketStream.prototype = new stream();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    _TransportParseStream = function TransportParseStream() {\n      var parsePsi, parsePat, parsePmt, self;\n\n      _TransportParseStream.prototype.init.call(this);\n\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n\n      parsePsi = function parsePsi(payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n\n      parsePat = function parsePat(payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n\n      parsePmt = function parsePmt(payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n\n      this.push = function (packet) {\n        var result = {},\n            offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = streamTypes.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = streamTypes.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n\n    _TransportParseStream.prototype = new stream();\n    _TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    _ElementaryStream = function ElementaryStream() {\n      var self = this,\n          // PES packet fragments\n      video = {\n        data: [],\n        size: 0\n      },\n          audio = {\n        data: [],\n        size: 0\n      },\n          timedMetadata = {\n        data: [],\n        size: 0\n      },\n          parsePes = function parsePes(payload, pes) {\n        var ptsDtsFlags; // get the packet length, this will be 0 for video\n\n        pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n        pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n        // and a DTS value. Determine what combination of values is\n        // available to work with.\n\n        ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n        // performs all bitwise operations on 32-bit integers but javascript\n        // supports a much greater range (52-bits) of integer using standard\n        // mathematical operations.\n        // We construct a 31-bit value using bitwise operators over the 31\n        // most significant bits and then multiply by 4 (equal to a left-shift\n        // of 2) before we add the final 2 least significant bits of the\n        // timestamp (equal to an OR.)\n\n        if (ptsDtsFlags & 0xC0) {\n          // the PTS and DTS are not written out directly. For information\n          // on how they are encoded, see\n          // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n          pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n          pes.pts *= 4; // Left shift by 2\n\n          pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n          pes.dts = pes.pts;\n\n          if (ptsDtsFlags & 0x40) {\n            pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n            pes.dts *= 4; // Left shift by 2\n\n            pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n          }\n        } // the data section starts immediately after the PES header.\n        // pes_header_data_length specifies the number of header bytes\n        // that follow the last byte of the field.\n\n\n        pes.data = payload.subarray(9 + payload[8]);\n      },\n\n      /**\n        * Pass completely parsed PES packets to the next stream in the pipeline\n       **/\n      flushStream = function flushStream(stream$$1, type, forceFlush) {\n        var packetData = new Uint8Array(stream$$1.size),\n            event = {\n          type: type\n        },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n        // PES header\n\n        if (!stream$$1.data.length || stream$$1.size < 9) {\n          return;\n        }\n\n        event.trackId = stream$$1.data[0].pid; // reassemble the packet\n\n        for (i = 0; i < stream$$1.data.length; i++) {\n          fragment = stream$$1.data[i];\n          packetData.set(fragment.data, offset);\n          offset += fragment.data.byteLength;\n        } // parse assembled packet's PES header\n\n\n        parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n        // check that there is enough stream data to fill the packet\n\n        packetFlushable = type === 'video' || event.packetLength <= stream$$1.size; // flush pending packets if the conditions are right\n\n        if (forceFlush || packetFlushable) {\n          stream$$1.size = 0;\n          stream$$1.data.length = 0;\n        } // only emit packets that are complete. this is to avoid assembling\n        // incomplete PES packets due to poor segmentation\n\n\n        if (packetFlushable) {\n          self.trigger('data', event);\n        }\n      };\n\n      _ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n\n      this.push = function (data) {\n        ({\n          pat: function pat() {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function pes() {\n            var stream$$1, streamType;\n\n            switch (data.streamType) {\n              case streamTypes.H264_STREAM_TYPE:\n              case streamTypes.H264_STREAM_TYPE:\n                stream$$1 = video;\n                streamType = 'video';\n                break;\n\n              case streamTypes.ADTS_STREAM_TYPE:\n                stream$$1 = audio;\n                streamType = 'audio';\n                break;\n\n              case streamTypes.METADATA_STREAM_TYPE:\n                stream$$1 = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream$$1, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n\n            stream$$1.data.push(data);\n            stream$$1.size += data.data.byteLength;\n          },\n          pmt: function pmt() {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            },\n                programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n\n      this.flush = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n        this.trigger('done');\n      };\n    };\n\n    _ElementaryStream.prototype = new stream();\n    var m2ts = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH,\n      TransportPacketStream: _TransportPacketStream,\n      TransportParseStream: _TransportParseStream,\n      ElementaryStream: _ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      CaptionStream: captionStream.CaptionStream,\n      Cea608Stream: captionStream.Cea608Stream,\n      MetadataStream: metadataStream\n    };\n\n    for (var type in streamTypes) {\n      if (streamTypes.hasOwnProperty(type)) {\n        m2ts[type] = streamTypes[type];\n      }\n    }\n\n    var m2ts_1 = m2ts;\n\n    var _AdtsStream;\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    _AdtsStream = function AdtsStream() {\n      var buffer;\n\n      _AdtsStream.prototype.init.call(this);\n\n      this.push = function (packet) {\n        var i = 0,\n            frameNum = 0,\n            frameLength,\n            protectionSkipBytes,\n            frameEnd,\n            oldBuffer,\n            sampleCount,\n            adtsFrameDuration;\n\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n\n        if (buffer) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n        while (i + 5 < buffer.length) {\n          // Loook for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n            i++;\n            continue;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * 90000 / ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2];\n          frameEnd = i + frameLength; // If we don't have enough data to actually finish this ADTS frame, return\n          // and wait for more data\n\n          if (buffer.byteLength < frameEnd) {\n            return;\n          } // Otherwise, deliver the complete AAC frame\n\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            data: buffer.subarray(i + 7 + protectionSkipBytes, frameEnd)\n          }); // If the buffer is empty, clear it and return\n\n          if (buffer.byteLength === frameEnd) {\n            buffer = undefined;\n            return;\n          }\n\n          frameNum++; // Remove the finished frame from the buffer and start the process again\n\n          buffer = buffer.subarray(frameEnd);\n        }\n      };\n\n      this.flush = function () {\n        this.trigger('done');\n      };\n    };\n\n    _AdtsStream.prototype = new stream();\n    var adts = _AdtsStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb = function ExpGolomb(workingData) {\n      var // the number of bytes left to examine in workingData\n      workingBytesAvailable = workingData.byteLength,\n          // the current word being examined\n      workingWord = 0,\n          // :uint\n      // the number of bits left to examine in the current word\n      workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n            workingBytes = new Uint8Array(4),\n            availableBytes = Math.min(4, workingBytesAvailable);\n\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n            // :uint\n        valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n\n        bits = size - bits;\n\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n\n        return valu;\n      }; // ():uint\n\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n\n      this.loadWord();\n    };\n\n    var expGolomb = ExpGolomb;\n\n    var _H264Stream, _NalByteStream;\n\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    _NalByteStream = function NalByteStream() {\n      var syncPoint = 0,\n          i,\n          buffer;\n\n      _NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n\n      this.push = function (data) {\n        var swapBuffer;\n\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        } // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n\n        for (; syncPoint < buffer.byteLength - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n\n        while (i < buffer.byteLength) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < buffer.length);\n\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n    };\n\n    _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    _H264Stream = function H264Stream() {\n      var nalByteStream = new _NalByteStream(),\n          self,\n          trackId,\n          currentPts,\n          currentDts,\n          discardEmulationPreventionBytes,\n          readSequenceParameterSet,\n          skipScalingList;\n\n      _H264Stream.prototype.init.call(this);\n\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data\n        };\n\n        switch (data[0] & 0x1f) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n\n          default:\n            break;\n        } // This triggers data on the H264Stream\n\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n\n      skipScalingList = function skipScalingList(count, expGolombDecoder) {\n        var lastScale = 8,\n            nextScale = 8,\n            j,\n            deltaScale;\n\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n\n      discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n        var length = data.byteLength,\n            emulationPreventionBytesPositions = [],\n            i = 1,\n            newLength,\n            newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n\n          newData[i] = data[sourceIndex];\n        }\n\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n\n      readSequenceParameterSet = function readSequenceParameterSet(data) {\n        var frameCropLeftOffset = 0,\n            frameCropRightOffset = 0,\n            frameCropTopOffset = 0,\n            frameCropBottomOffset = 0,\n            sarScale = 1,\n            expGolombDecoder,\n            profileIdc,\n            levelIdc,\n            profileCompatibility,\n            chromaFormatIdc,\n            picOrderCntType,\n            numRefFramesInPicOrderCntCycle,\n            picWidthInMbsMinus1,\n            picHeightInMapUnitsMinus1,\n            frameMbsOnlyFlag,\n            scalingListCount,\n            sarRatio,\n            aspectRatioIdc,\n            i;\n        expGolombDecoder = new expGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n\n              case 2:\n                sarRatio = [12, 11];\n                break;\n\n              case 3:\n                sarRatio = [10, 11];\n                break;\n\n              case 4:\n                sarRatio = [16, 11];\n                break;\n\n              case 5:\n                sarRatio = [40, 33];\n                break;\n\n              case 6:\n                sarRatio = [24, 11];\n                break;\n\n              case 7:\n                sarRatio = [20, 11];\n                break;\n\n              case 8:\n                sarRatio = [32, 11];\n                break;\n\n              case 9:\n                sarRatio = [80, 33];\n                break;\n\n              case 10:\n                sarRatio = [18, 11];\n                break;\n\n              case 11:\n                sarRatio = [15, 11];\n                break;\n\n              case 12:\n                sarRatio = [64, 33];\n                break;\n\n              case 13:\n                sarRatio = [160, 99];\n                break;\n\n              case 14:\n                sarRatio = [4, 3];\n                break;\n\n              case 15:\n                sarRatio = [3, 2];\n                break;\n\n              case 16:\n                sarRatio = [2, 1];\n                break;\n\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n\n            if (sarRatio) {\n              sarScale = sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: Math.ceil(((picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2) * sarScale),\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2\n        };\n      };\n    };\n\n    _H264Stream.prototype = new stream();\n    var h264 = {\n      H264Stream: _H264Stream,\n      NalByteStream: _NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n    var isLikelyAacData = function isLikelyAacData(data) {\n      if (data[0] === 'I'.charCodeAt(0) && data[1] === 'D'.charCodeAt(0) && data[2] === '3'.charCodeAt(0)) {\n        return true;\n      }\n\n      return false;\n    };\n\n    var parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n    var percentEncode$1 = function percentEncode(bytes, start, end) {\n      var i,\n          result = '';\n\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n\n    var parseIso88591$1 = function parseIso88591(bytes, start, end) {\n      return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n          flags = header[byteIndex + 5],\n          footerPresent = (flags & 16) >> 4;\n\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n\n      return returnSize + 10;\n    };\n\n    var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n          middle = header[byteIndex + 4] << 3,\n          highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n\n    var parseType$1 = function parseType(header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n\n      return null;\n    };\n\n    var parseSampleRate = function parseSampleRate(packet) {\n      var i = 0;\n\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n\n        return ADTS_SAMPLING_FREQUENCIES$1[(packet[i + 2] & 0x3c) >>> 2];\n      }\n\n      return null;\n    };\n\n    var parseAacTimestamp = function parseAacTimestamp(packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(packet.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          return null;\n        }\n\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591$1(frame, 0, i);\n\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n\n              break;\n            }\n          }\n        }\n\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n\n      return null;\n    };\n\n    var utils = {\n      isLikelyAacData: isLikelyAacData,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$1,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    }; // Constants\n\n    var _AacStream;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n\n    _AacStream = function AacStream() {\n      var everything = new Uint8Array(),\n          timeStamp = 0;\n\n      _AacStream.prototype.init.call(this);\n\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n\n      this.push = function (bytes) {\n        var frameSize = 0,\n            byteIndex = 0,\n            bytesLeft,\n            chunk,\n            packet,\n            tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n\n            frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n\n            frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n\n          byteIndex++;\n        }\n\n        bytesLeft = everything.length - byteIndex;\n\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n    };\n\n    _AacStream.prototype = new stream();\n    var aac = _AacStream;\n    var H264Stream = h264.H264Stream;\n    var isLikelyAacData$1 = utils.isLikelyAacData; // constants\n\n    var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility']; // object types\n\n    var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n\n    var arrayEquals = function arrayEquals(a, b) {\n      var i;\n\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    var generateVideoSegmentTimingInfo = function generateVideoSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n          decodeDuration = endDts - startDts,\n          presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n\n    _AudioSegmentStream = function AudioSegmentStream(track, options) {\n      var adtsFrames = [],\n          sequenceNumber = 0,\n          earliestAllowedDts = 0,\n          audioAppendStartTs = 0,\n          videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n\n      _AudioSegmentStream.prototype.init.call(this);\n\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n\n        adtsFrames.push(data);\n      };\n\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts - track.timelineStartInfo.baseMediaDecodeTime;\n      };\n\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n\n      this.flush = function () {\n        var frames, moof, mdat, boxes; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4Generator.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n    };\n\n    _AudioSegmentStream.prototype = new stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    _VideoSegmentStream = function VideoSegmentStream(track, options) {\n      var sequenceNumber = 0,\n          nalUnits = [],\n          gopsToAlignWith = [],\n          config,\n          pps;\n      options = options || {};\n\n      _VideoSegmentStream.prototype.init.call(this);\n\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n\n      this.flush = function () {\n        var frames,\n            gopForFusion,\n            gops,\n            moof,\n            mdat,\n            boxes,\n            prependedContentDuration = 0,\n            firstGop,\n            lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateVideoSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration)); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n            // Half-a-second in a 90khz clock\n        allowableOverlap = 10000,\n            // About 3 frames @ 30fps\n        nearestDistance = Infinity,\n            dtsDistance,\n            nearestGopObj,\n            currentGop,\n            currentGopObj,\n            i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            break;\n          }\n\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n\n          gopIndex--;\n        }\n\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n\n        var trimIndex;\n\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n\n        if (trimIndex === 0) {\n          return gops;\n        }\n\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n\n    _VideoSegmentStream.prototype = new stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    _CoalesceStream = function CoalesceStream(options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      }\n\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n\n      _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n\n        this.pendingTracks.push(output.track);\n        this.pendingBoxes.push(output.boxes);\n        this.pendingBytes += output.boxes.byteLength;\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n        }\n\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n        }\n      };\n    };\n\n    _CoalesceStream.prototype = new stream();\n\n    _CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n          event = {\n        captions: [],\n        captionStreams: {},\n        metadata: [],\n        info: {}\n      },\n          caption,\n          id3,\n          initSegment,\n          timelineStartPts = 0,\n          i;\n\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n\n          return;\n        }\n      }\n\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = caption.startPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.startTime -= timelineStartPts;\n        }\n\n        caption.startTime /= 90e3;\n        caption.endTime = caption.endPts;\n\n        if (!this.keepOriginalTimestamps) {\n          caption.endTime -= timelineStartPts;\n        }\n\n        caption.endTime /= 90e3;\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = id3.pts;\n\n        if (!this.keepOriginalTimestamps) {\n          id3.cueTime -= timelineStartPts;\n        }\n\n        id3.cueTime /= 90e3;\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n\n      this.trigger('data', event); // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n\n    _Transmuxer = function Transmuxer(options) {\n      var self = this,\n          hasFlushed = true,\n          videoTrack,\n          audioTrack;\n\n      _Transmuxer.prototype.init.call(this);\n\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new aac();\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type === 'timed-metadata' && !pipeline.audioSegmentStream) {\n            audioTrack = audioTrack || {\n              timelineStartInfo: {\n                baseMediaDecodeTime: self.baseMediaDecodeTime\n              },\n              codec: 'adts',\n              type: 'audio'\n            }; // hook up the audio segment stream to the first track with aac data\n\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      };\n\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts_1.TransportPacketStream();\n        pipeline.parseStream = new m2ts_1.TransportParseStream();\n        pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n        pipeline.videoTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('video');\n        pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new adts();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts_1.CaptionStream();\n        pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.elementaryStream.pipe(pipeline.videoTimestampRolloverStream).pipe(pipeline.h264Stream);\n        pipeline.elementaryStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.elementaryStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.\n                if (audioTrack) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              }); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            }\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      }; // hook up the segment streams once track metadata is delivered\n\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n\n          if (!options.keepOriginalTimestamps) {\n            audioTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n            pipeline.videoTimestampRolloverStream.discontinuity();\n          }\n\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n\n          if (!options.keepOriginalTimestamps) {\n            videoTrack.timelineStartInfo.baseMediaDecodeTime = baseMediaDecodeTime;\n          }\n        }\n\n        if (pipeline.timedMetadataTimestampRolloverStream) {\n          pipeline.timedMetadataTimestampRolloverStream.discontinuity();\n        }\n      };\n\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      }; // feed incoming data to the front of the parsing pipeline\n\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData$1(data);\n\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n\n          hasFlushed = false;\n        }\n\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      }; // Caption data has to be reset when seeking outside buffered range\n\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n\n    _Transmuxer.prototype = new stream();\n    var transmuxer = {\n      Transmuxer: _Transmuxer,\n      VideoSegmentStream: _VideoSegmentStream,\n      AudioSegmentStream: _AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateVideoSegmentTimingInfo: generateVideoSegmentTimingInfo\n    };\n\n    var inspectMp4,\n        _textifyMp,\n        parseType$2 = probe.parseType,\n        parseMp4Date = function parseMp4Date(seconds) {\n      return new Date(seconds * 1000 - 2082844800000);\n    },\n        parseSampleFlags = function parseSampleFlags(flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    },\n        nalParse = function nalParse(avcStream) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          i,\n          length;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          result.push('<span style=\\'color:red;\\'>MALFORMED DATA</span>');\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x01:\n            result.push('slice_layer_without_partitioning_rbsp');\n            break;\n\n          case 0x05:\n            result.push('slice_layer_without_partitioning_rbsp_idr');\n            break;\n\n          case 0x06:\n            result.push('sei_rbsp');\n            break;\n\n          case 0x07:\n            result.push('seq_parameter_set_rbsp');\n            break;\n\n          case 0x08:\n            result.push('pic_parameter_set_rbsp');\n            break;\n\n          case 0x09:\n            result.push('access_unit_delimiter_rbsp');\n            break;\n\n          default:\n            result.push('UNKNOWN NAL - ' + avcStream[i] & 0x1F);\n            break;\n        }\n      }\n\n      return result;\n    },\n        // registry of handlers for individual mp4 box types\n    parse$$1 = {\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      avc1: function avc1(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          dataReferenceIndex: view.getUint16(6),\n          width: view.getUint16(24),\n          height: view.getUint16(26),\n          horizresolution: view.getUint16(28) + view.getUint16(30) / 16,\n          vertresolution: view.getUint16(32) + view.getUint16(34) / 16,\n          frameCount: view.getUint16(40),\n          depth: view.getUint16(74),\n          config: inspectMp4(data.subarray(78, data.byteLength))\n        };\n      },\n      avcC: function avcC(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          configurationVersion: data[0],\n          avcProfileIndication: data[1],\n          profileCompatibility: data[2],\n          avcLevelIndication: data[3],\n          lengthSizeMinusOne: data[4] & 0x03,\n          sps: [],\n          pps: []\n        },\n            numOfSequenceParameterSets = data[5] & 0x1f,\n            numOfPictureParameterSets,\n            nalSize,\n            offset,\n            i; // iterate past any SPSs\n\n        offset = 6;\n\n        for (i = 0; i < numOfSequenceParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.sps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        } // iterate past any PPSs\n\n\n        numOfPictureParameterSets = data[offset];\n        offset++;\n\n        for (i = 0; i < numOfPictureParameterSets; i++) {\n          nalSize = view.getUint16(offset);\n          offset += 2;\n          result.pps.push(new Uint8Array(data.subarray(offset, offset + nalSize)));\n          offset += nalSize;\n        }\n\n        return result;\n      },\n      btrt: function btrt(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          bufferSizeDB: view.getUint32(0),\n          maxBitrate: view.getUint32(4),\n          avgBitrate: view.getUint32(8)\n        };\n      },\n      esds: function esds(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          esId: data[6] << 8 | data[7],\n          streamPriority: data[8] & 0x1f,\n          decoderConfig: {\n            objectProfileIndication: data[11],\n            streamType: data[12] >>> 2 & 0x3f,\n            bufferSize: data[13] << 16 | data[14] << 8 | data[15],\n            maxBitrate: data[16] << 24 | data[17] << 16 | data[18] << 8 | data[19],\n            avgBitrate: data[20] << 24 | data[21] << 16 | data[22] << 8 | data[23],\n            decoderConfigDescriptor: {\n              tag: data[24],\n              length: data[25],\n              audioObjectType: data[26] >>> 3 & 0x1f,\n              samplingFrequencyIndex: (data[26] & 0x07) << 1 | data[27] >>> 7 & 0x01,\n              channelConfiguration: data[27] >>> 3 & 0x0f\n            }\n          }\n        };\n      },\n      ftyp: function ftyp(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          majorBrand: parseType$2(data.subarray(0, 4)),\n          minorVersion: view.getUint32(4),\n          compatibleBrands: []\n        },\n            i = 8;\n\n        while (i < data.byteLength) {\n          result.compatibleBrands.push(parseType$2(data.subarray(i, i + 4)));\n          i += 4;\n        }\n\n        return result;\n      },\n      dinf: function dinf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      dref: function dref(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          dataReferences: inspectMp4(data.subarray(8))\n        };\n      },\n      hdlr: function hdlr(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          handlerType: parseType$2(data.subarray(8, 12)),\n          name: ''\n        },\n            i = 8; // parse out the name field\n\n        for (i = 24; i < data.byteLength; i++) {\n          if (data[i] === 0x00) {\n            // the name field is null-terminated\n            i++;\n            break;\n          }\n\n          result.name += String.fromCharCode(data[i]);\n        } // decode UTF-8 to javascript's internal representation\n        // see http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\n\n\n        result.name = decodeURIComponent(escape(result.name));\n        return result;\n      },\n      mdat: function mdat(data) {\n        return {\n          byteLength: data.byteLength,\n          nals: nalParse(data)\n        };\n      },\n      mdhd: function mdhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            language,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          language: ''\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // language is stored as an ISO-639-2/T code in an array of three 5-bit fields\n        // each field is the packed difference between its ASCII value and 0x60\n\n        language = view.getUint16(i);\n        result.language += String.fromCharCode((language >> 10) + 0x60);\n        result.language += String.fromCharCode(((language & 0x03e0) >> 5) + 0x60);\n        result.language += String.fromCharCode((language & 0x1f) + 0x60);\n        return result;\n      },\n      mdia: function mdia(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mfhd: function mfhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sequenceNumber: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n      },\n      minf: function minf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      // codingname, not a first-class box type. stsd entries share the\n      // same format as real boxes so the parsing infrastructure can be\n      // shared\n      mp4a: function mp4a(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          // 6 bytes reserved\n          dataReferenceIndex: view.getUint16(6),\n          // 4 + 4 bytes reserved\n          channelcount: view.getUint16(16),\n          samplesize: view.getUint16(18),\n          // 2 bytes pre_defined\n          // 2 bytes reserved\n          samplerate: view.getUint16(24) + view.getUint16(26) / 65536\n        }; // if there are more bytes to process, assume this is an ISO/IEC\n        // 14496-14 MP4AudioSampleEntry and parse the ESDBox\n\n        if (data.byteLength > 28) {\n          result.streamDescriptor = inspectMp4(data.subarray(28))[0];\n        }\n\n        return result;\n      },\n      moof: function moof(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      moov: function moov(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvex: function mvex(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      mvhd: function mvhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.timescale = view.getUint32(i);\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4; // convert fixed-point, base 16 back to a number\n\n        result.rate = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        i += 2 * 4;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        i += 6 * 4;\n        result.nextTrackId = view.getUint32(i);\n        return result;\n      },\n      pdin: function pdin(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4)),\n          rate: view.getUint32(4),\n          initialDelay: view.getUint32(8)\n        };\n      },\n      sdtp: function sdtp(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            i;\n\n        for (i = 4; i < data.byteLength; i++) {\n          result.samples.push({\n            dependsOn: (data[i] & 0x30) >> 4,\n            isDependedOn: (data[i] & 0x0c) >> 2,\n            hasRedundancy: data[i] & 0x03\n          });\n        }\n\n        return result;\n      },\n      sidx: function sidx(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          references: [],\n          referenceId: view.getUint32(4),\n          timescale: view.getUint32(8),\n          earliestPresentationTime: view.getUint32(12),\n          firstOffset: view.getUint32(16)\n        },\n            referenceCount = view.getUint16(22),\n            i;\n\n        for (i = 24; referenceCount; i += 12, referenceCount--) {\n          result.references.push({\n            referenceType: (data[i] & 0x80) >>> 7,\n            referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n            subsegmentDuration: view.getUint32(i + 4),\n            startsWithSap: !!(data[i + 8] & 0x80),\n            sapType: (data[i + 8] & 0x70) >>> 4,\n            sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n          });\n        }\n\n        return result;\n      },\n      smhd: function smhd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          balance: data[4] + data[5] / 256\n        };\n      },\n      stbl: function stbl(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      stco: function stco(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          chunkOffsets: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 4, entryCount--) {\n          result.chunkOffsets.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stsc: function stsc(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            entryCount = view.getUint32(4),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleToChunks: []\n        },\n            i;\n\n        for (i = 8; entryCount; i += 12, entryCount--) {\n          result.sampleToChunks.push({\n            firstChunk: view.getUint32(i),\n            samplesPerChunk: view.getUint32(i + 4),\n            sampleDescriptionIndex: view.getUint32(i + 8)\n          });\n        }\n\n        return result;\n      },\n      stsd: function stsd(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleDescriptions: inspectMp4(data.subarray(8))\n        };\n      },\n      stsz: function stsz(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          sampleSize: view.getUint32(4),\n          entries: []\n        },\n            i;\n\n        for (i = 12; i < data.byteLength; i += 4) {\n          result.entries.push(view.getUint32(i));\n        }\n\n        return result;\n      },\n      stts: function stts(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          timeToSamples: []\n        },\n            entryCount = view.getUint32(4),\n            i;\n\n        for (i = 8; entryCount; i += 8, entryCount--) {\n          result.timeToSamples.push({\n            sampleCount: view.getUint32(i),\n            sampleDelta: view.getUint32(i + 4)\n          });\n        }\n\n        return result;\n      },\n      styp: function styp(data) {\n        return parse$$1.ftyp(data);\n      },\n      tfdt: function tfdt(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          baseMediaDecodeTime: data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]\n        };\n\n        if (result.version === 1) {\n          result.baseMediaDecodeTime *= Math.pow(2, 32);\n          result.baseMediaDecodeTime += data[8] << 24 | data[9] << 16 | data[10] << 8 | data[11];\n        }\n\n        return result;\n      },\n      tfhd: function tfhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n            baseDataOffsetPresent = result.flags[2] & 0x01,\n            sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n            defaultSampleDurationPresent = result.flags[2] & 0x08,\n            defaultSampleSizePresent = result.flags[2] & 0x10,\n            defaultSampleFlagsPresent = result.flags[2] & 0x20,\n            durationIsEmpty = result.flags[0] & 0x010000,\n            defaultBaseIsMoof = result.flags[0] & 0x020000,\n            i;\n        i = 8;\n\n        if (baseDataOffsetPresent) {\n          i += 4; // truncate top 4 bytes\n          // FIXME: should we read the full 64 bits?\n\n          result.baseDataOffset = view.getUint32(12);\n          i += 4;\n        }\n\n        if (sampleDescriptionIndexPresent) {\n          result.sampleDescriptionIndex = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleDurationPresent) {\n          result.defaultSampleDuration = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleSizePresent) {\n          result.defaultSampleSize = view.getUint32(i);\n          i += 4;\n        }\n\n        if (defaultSampleFlagsPresent) {\n          result.defaultSampleFlags = view.getUint32(i);\n        }\n\n        if (durationIsEmpty) {\n          result.durationIsEmpty = true;\n        }\n\n        if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n          result.baseDataOffsetIsMoof = true;\n        }\n\n        return result;\n      },\n      tkhd: function tkhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            i = 4,\n            result = {\n          version: view.getUint8(0),\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n\n        if (result.version === 1) {\n          i += 4;\n          result.creationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 8;\n          result.modificationTime = parseMp4Date(view.getUint32(i)); // truncating top 4 bytes\n\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 8;\n          result.duration = view.getUint32(i); // truncating top 4 bytes\n        } else {\n          result.creationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.modificationTime = parseMp4Date(view.getUint32(i));\n          i += 4;\n          result.trackId = view.getUint32(i);\n          i += 4;\n          i += 4;\n          result.duration = view.getUint32(i);\n        }\n\n        i += 4;\n        i += 2 * 4;\n        result.layer = view.getUint16(i);\n        i += 2;\n        result.alternateGroup = view.getUint16(i);\n        i += 2; // convert fixed-point, base 16 back to a number\n\n        result.volume = view.getUint8(i) + view.getUint8(i + 1) / 8;\n        i += 2;\n        i += 2;\n        result.matrix = new Uint32Array(data.subarray(i, i + 9 * 4));\n        i += 9 * 4;\n        result.width = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        i += 4;\n        result.height = view.getUint16(i) + view.getUint16(i + 2) / 16;\n        return result;\n      },\n      traf: function traf(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trak: function trak(data) {\n        return {\n          boxes: inspectMp4(data)\n        };\n      },\n      trex: function trex(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4),\n          defaultSampleDescriptionIndex: view.getUint32(8),\n          defaultSampleDuration: view.getUint32(12),\n          defaultSampleSize: view.getUint32(16),\n          sampleDependsOn: data[20] & 0x03,\n          sampleIsDependedOn: (data[21] & 0xc0) >> 6,\n          sampleHasRedundancy: (data[21] & 0x30) >> 4,\n          samplePaddingValue: (data[21] & 0x0e) >> 1,\n          sampleIsDifferenceSample: !!(data[21] & 0x01),\n          sampleDegradationPriority: view.getUint16(22)\n        };\n      },\n      trun: function trun(data) {\n        var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n            view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n            // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n            // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n            // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n            // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n            // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n            // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n            // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n            offset = 8,\n            sample;\n\n        if (dataOffsetPresent) {\n          // 32 bit signed integer\n          result.dataOffset = view.getInt32(offset);\n          offset += 4;\n        } // Overrides the flags for the first sample only. The order of\n        // optional values will be: duration, size, compositionTimeOffset\n\n\n        if (firstSampleFlagsPresent && sampleCount) {\n          sample = {\n            flags: parseSampleFlags(data.subarray(offset, offset + 4))\n          };\n          offset += 4;\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n          sampleCount--;\n        }\n\n        while (sampleCount--) {\n          sample = {};\n\n          if (sampleDurationPresent) {\n            sample.duration = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleSizePresent) {\n            sample.size = view.getUint32(offset);\n            offset += 4;\n          }\n\n          if (sampleFlagsPresent) {\n            sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n            offset += 4;\n          }\n\n          if (sampleCompositionTimeOffsetPresent) {\n            // Note: this should be a signed int if version is 1\n            sample.compositionTimeOffset = view.getUint32(offset);\n            offset += 4;\n          }\n\n          result.samples.push(sample);\n        }\n\n        return result;\n      },\n      'url ': function url(data) {\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4))\n        };\n      },\n      vmhd: function vmhd(data) {\n        var view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n        return {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          graphicsmode: view.getUint16(4),\n          opcolor: new Uint16Array([view.getUint16(6), view.getUint16(8), view.getUint16(10)])\n        };\n      }\n    };\n    /**\n     * Return a javascript array of box objects parsed from an ISO base\n     * media file.\n     * @param data {Uint8Array} the binary data of the media to be inspected\n     * @return {array} a javascript array of potentially nested box objects\n     */\n\n\n    inspectMp4 = function inspectMp4(data) {\n      var i = 0,\n          result = [],\n          view,\n          size,\n          type,\n          end,\n          box; // Convert data from Uint8Array to ArrayBuffer, to follow Dataview API\n\n      var ab = new ArrayBuffer(data.length);\n      var v = new Uint8Array(ab);\n\n      for (var z = 0; z < data.length; ++z) {\n        v[z] = data[z];\n      }\n\n      view = new DataView(ab);\n\n      while (i < data.byteLength) {\n        // parse box data\n        size = view.getUint32(i);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength; // parse type-specific data\n\n        box = (parse$$1[type] || function (data) {\n          return {\n            data: data\n          };\n        })(data.subarray(i + 8, end));\n\n        box.size = size;\n        box.type = type; // store this box and move to the next\n\n        result.push(box);\n        i = end;\n      }\n\n      return result;\n    };\n    /**\n     * Returns a textual representation of the javascript represtentation\n     * of an MP4 file. You can use it as an alternative to\n     * JSON.stringify() to compare inspected MP4s.\n     * @param inspectedMp4 {array} the parsed array of boxes in an MP4\n     * file\n     * @param depth {number} (optional) the number of ancestor boxes of\n     * the elements of inspectedMp4. Assumed to be zero if unspecified.\n     * @return {string} a text representation of the parsed MP4\n     */\n\n\n    _textifyMp = function textifyMp4(inspectedMp4, depth) {\n      var indent;\n      depth = depth || 0;\n      indent = new Array(depth * 2 + 1).join(' '); // iterate over all the boxes\n\n      return inspectedMp4.map(function (box, index) {\n        // list the box type first at the current indentation level\n        return indent + box.type + '\\n' + // the type is already included and handle child boxes separately\n        Object.keys(box).filter(function (key) {\n          return key !== 'type' && key !== 'boxes'; // output all the box properties\n        }).map(function (key) {\n          var prefix = indent + '  ' + key + ': ',\n              value = box[key]; // print out raw bytes as hexademical\n\n          if (value instanceof Uint8Array || value instanceof Uint32Array) {\n            var bytes = Array.prototype.slice.call(new Uint8Array(value.buffer, value.byteOffset, value.byteLength)).map(function (_byte) {\n              return ' ' + ('00' + _byte.toString(16)).slice(-2);\n            }).join('').match(/.{1,24}/g);\n\n            if (!bytes) {\n              return prefix + '<>';\n            }\n\n            if (bytes.length === 1) {\n              return prefix + '<' + bytes.join('').slice(1) + '>';\n            }\n\n            return prefix + '<\\n' + bytes.map(function (line) {\n              return indent + '  ' + line;\n            }).join('\\n') + '\\n' + indent + '  >';\n          } // stringify generic objects\n\n\n          return prefix + JSON.stringify(value, null, 2).split('\\n').map(function (line, index) {\n            if (index === 0) {\n              return line;\n            }\n\n            return indent + '  ' + line;\n          }).join('\\n');\n        }).join('\\n') + ( // recursively textify the child boxes\n        box.boxes ? '\\n' + _textifyMp(box.boxes, depth + 1) : '');\n      }).join('\\n');\n    };\n\n    var mp4Inspector$$1 = {\n      inspect: inspectMp4,\n      textify: _textifyMp,\n      parseTfdt: parse$$1.tfdt,\n      parseHdlr: parse$$1.hdlr,\n      parseTfhd: parse$$1.tfhd,\n      parseTrun: parse$$1.trun,\n      parseSidx: parse$$1.sidx\n    };\n    var discardEmulationPreventionBytes$1 = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream$1 = captionStream.CaptionStream;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function mapToSample(offset, samples) {\n      var approximateOffset = offset;\n\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n\n        approximateOffset -= sample.size;\n      }\n\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n\n    var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n          result = [],\n          seiNal,\n          i,\n          length,\n          lastMatchedSample;\n\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes$1(data),\n              trackId: trackId\n            };\n\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            }\n\n            result.push(seiNal);\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n\n    var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = mp4Inspector$$1.parseTrun(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n\n    var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n      // To get the samples\n      var trafs = probe.findBox(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = probe.findBox(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = probe.findBox(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = mp4Inspector$$1.parseTfhd(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = probe.findBox(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? mp4Inspector$$1.parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = probe.findBox(traf, ['trun']);\n        var samples;\n        var seiNals; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          seiNals = findSeiNals(mdat, samples, trackId);\n\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = [];\n          }\n\n          captionNals[trackId] = captionNals[trackId].concat(seiNals);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n\n    var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n      var seiNals;\n\n      if (!trackId) {\n        return null;\n      }\n\n      seiNals = parseCaptionNals(segment, trackId);\n      return {\n        seiNals: seiNals[trackId],\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n\n    var CaptionParser$$1 = function CaptionParser$$1() {\n      var isInitialized = false;\n      var captionStream$$1; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n\n      this.init = function () {\n        captionStream$$1 = new CaptionStream$1();\n        isInitialized = true; // Collect dispatched captions\n\n        captionStream$$1.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one\n        } else if (!trackId || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n        if (parsedData === null || !parsedData.seiNals) {\n          return null;\n        }\n\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n\n        nals.forEach(function (nal) {\n          captionStream$$1.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.flush();\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n\n        captionStream$$1.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {}\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n\n        this.resetCaptionStream();\n      };\n\n      this.reset();\n    };\n\n    var captionParser = CaptionParser$$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var mp4 = {\n      generator: mp4Generator,\n      probe: probe,\n      Transmuxer: transmuxer.Transmuxer,\n      AudioSegmentStream: transmuxer.AudioSegmentStream,\n      VideoSegmentStream: transmuxer.VideoSegmentStream,\n      CaptionParser: captionParser\n    };\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n    /**\n     * @file transmuxer-worker.js\n     */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n\n    var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        var initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        var typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment: segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n\n      if (transmuxer.captionStream) {\n        transmuxer.captionStream.on('data', function (caption) {\n          self.postMessage({\n            action: 'caption',\n            data: caption\n          });\n        });\n      }\n\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo: gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (videoSegmentTimingInfo) {\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo: videoSegmentTimingInfo\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n\n    var MessageHandlers = function () {\n      function MessageHandlers(self, options) {\n        classCallCheck(this, MessageHandlers);\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n\n      createClass(MessageHandlers, [{\n        key: 'init',\n        value: function init() {\n          if (this.transmuxer) {\n            this.transmuxer.dispose();\n          }\n\n          this.transmuxer = new mp4.Transmuxer(this.options);\n          wireTransmuxerEvents(this.self, this.transmuxer);\n        }\n        /**\n         * Adds data (a ts segment) to the start of the transmuxer pipeline for\n         * processing.\n         *\n         * @param {ArrayBuffer} data data to push into the muxer\n         */\n\n      }, {\n        key: 'push',\n        value: function push(data) {\n          // Cast array buffer to correct type for transmuxer\n          var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n          this.transmuxer.push(segment);\n        }\n        /**\n         * Recreate the transmuxer so that the next segment added via `push`\n         * start with a fresh transmuxer.\n         */\n\n      }, {\n        key: 'reset',\n        value: function reset() {\n          this.init();\n        }\n        /**\n         * Set the value that will be used as the `baseMediaDecodeTime` time for the\n         * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n         * set relative to the first based on the PTS values.\n         *\n         * @param {Object} data used to set the timestamp offset in the muxer\n         */\n\n      }, {\n        key: 'setTimestampOffset',\n        value: function setTimestampOffset(data) {\n          var timestampOffset = data.timestampOffset || 0;\n          this.transmuxer.setBaseMediaDecodeTime(Math.round(timestampOffset * 90000));\n        }\n      }, {\n        key: 'setAudioAppendStart',\n        value: function setAudioAppendStart(data) {\n          this.transmuxer.setAudioAppendStart(Math.ceil(data.appendStart * 90000));\n        }\n        /**\n         * Forces the pipeline to finish processing the last segment and emit it's\n         * results.\n         *\n         * @param {Object} data event data, not really used\n         */\n\n      }, {\n        key: 'flush',\n        value: function flush(data) {\n          this.transmuxer.flush();\n        }\n      }, {\n        key: 'resetCaptions',\n        value: function resetCaptions() {\n          this.transmuxer.resetCaptions();\n        }\n      }, {\n        key: 'alignGopsWith',\n        value: function alignGopsWith(data) {\n          this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n        }\n      }]);\n      return MessageHandlers;\n    }();\n    /**\n     * Our web wroker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n\n    var TransmuxerWorker = function TransmuxerWorker(self) {\n      self.onmessage = function (event) {\n        if (event.data.action === 'init' && event.data.options) {\n          this.messageHandlers = new MessageHandlers(self, event.data.options);\n          return;\n        }\n\n        if (!this.messageHandlers) {\n          this.messageHandlers = new MessageHandlers(self);\n        }\n\n        if (event.data && event.data.action && event.data.action !== 'init') {\n          if (this.messageHandlers[event.data.action]) {\n            this.messageHandlers[event.data.action](event.data);\n          }\n        }\n      };\n    };\n\n    var transmuxerWorker = new TransmuxerWorker(self);\n    return transmuxerWorker;\n  }();\n});\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n// Default codec parameters if none were provided for video and/or audio\n\nvar defaultCodecs = {\n  videoCodec: 'avc1',\n  videoObjectTypeIndicator: '.4d400d',\n  // AAC-LC\n  audioProfile: '2'\n};\n/**\n * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n * `avc1.<hhhhhh>`\n *\n * @param {Array} codecs an array of codec strings to fix\n * @return {Array} the translated codec array\n * @private\n */\n\nvar translateLegacyCodecs = function translateLegacyCodecs(codecs) {\n  return codecs.map(function (codec) {\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  });\n};\n/**\n * Parses a codec string to retrieve the number of codecs specified,\n * the video codec and object type indicator, and the audio profile.\n */\n\n\nvar parseCodecs = function parseCodecs() {\n  var codecs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var result = {\n    codecCount: 0\n  };\n  var parsed = void 0;\n  result.codecCount = codecs.split(',').length;\n  result.codecCount = result.codecCount || 2; // parse the video codec\n\n  parsed = /(^|\\s|,)+(avc[13])([^ ,]*)/i.exec(codecs);\n\n  if (parsed) {\n    result.videoCodec = parsed[2];\n    result.videoObjectTypeIndicator = parsed[3];\n  } // parse the last field of the audio codec\n\n\n  result.audioProfile = /(^|\\s|,)+mp4a.[0-9A-Fa-f]+\\.([0-9A-Fa-f]+)/i.exec(codecs);\n  result.audioProfile = result.audioProfile && result.audioProfile[2];\n  return result;\n};\n/**\n * Replace codecs in the codec string with the old apple-style `avc1.<dd>.<dd>` to the\n * standard `avc1.<hhhhhh>`.\n *\n * @param codecString {String} the codec string\n * @return {String} the codec string with old apple-style codecs replaced\n *\n * @private\n */\n\n\nvar mapLegacyAvcCodecs = function mapLegacyAvcCodecs(codecString) {\n  return codecString.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (match) {\n    return translateLegacyCodecs([match])[0];\n  });\n};\n/**\n * Build a media mime-type string from a set of parameters\n * @param {String} type either 'audio' or 'video'\n * @param {String} container either 'mp2t' or 'mp4'\n * @param {Array} codecs an array of codec strings to add\n * @return {String} a valid media mime-type\n */\n\n\nvar makeMimeTypeString = function makeMimeTypeString(type, container, codecs) {\n  // The codecs array is filtered so that falsey values are\n  // dropped and don't cause Array#join to create spurious\n  // commas\n  return type + '/' + container + '; codecs=\"' + codecs.filter(function (c) {\n    return !!c;\n  }).join(', ') + '\"';\n};\n/**\n * Returns the type container based on information in the playlist\n * @param {Playlist} media the current media playlist\n * @return {String} a valid media container type\n */\n\n\nvar getContainerType = function getContainerType(media) {\n  // An initialization segment means the media playlist is an iframe\n  // playlist or is using the mp4 container. We don't currently\n  // support iframe playlists, so assume this is signalling mp4\n  // fragments.\n  if (media.segments && media.segments.length && media.segments[0].map) {\n    return 'mp4';\n  }\n\n  return 'mp2t';\n};\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n\n  return defaultCodecs;\n};\n\nvar audioProfileFromDefault = function audioProfileFromDefault(master, audioGroupId) {\n  if (!master.mediaGroups.AUDIO || !audioGroupId) {\n    return null;\n  }\n\n  var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n\n  if (!audioGroup) {\n    return null;\n  }\n\n  for (var name in audioGroup) {\n    var audioType = audioGroup[name];\n\n    if (audioType[\"default\"] && audioType.playlists) {\n      // codec should be the same for all playlists within the audio type\n      return parseCodecs(audioType.playlists[0].attributes.CODECS).audioProfile;\n    }\n  }\n\n  return null;\n};\n/**\n * Calculates the MIME type strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty array will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Array} the MIME type strings. If the array has more than\n * one entry, the first element should be applied to the video\n * SourceBuffer and the second to the audio SourceBuffer.\n *\n * @private\n */\n\n\nvar mimeTypesForPlaylist = function mimeTypesForPlaylist(master, media) {\n  var containerType = getContainerType(media);\n  var codecInfo = getCodecs(media);\n  var mediaAttributes = media.attributes || {}; // Default condition for a traditional HLS (no demuxed audio/video)\n\n  var isMuxed = true;\n  var isMaat = false;\n\n  if (!media) {\n    // Not enough information\n    return [];\n  }\n\n  if (master.mediaGroups.AUDIO && mediaAttributes.AUDIO) {\n    var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO]; // Handle the case where we are in a multiple-audio track scenario\n\n    if (audioGroup) {\n      isMaat = true; // Start with the everything demuxed then...\n\n      isMuxed = false; // ...check to see if any audio group tracks are muxed (ie. lacking a uri)\n\n      for (var groupId in audioGroup) {\n        // either a uri is present (if the case of HLS and an external playlist), or\n        // playlists is present (in the case of DASH where we don't have external audio\n        // playlists)\n        if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n          isMuxed = true;\n          break;\n        }\n      }\n    }\n  } // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n\n  if (isMaat && !codecInfo.audioProfile) {\n    if (!isMuxed) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      codecInfo.audioProfile = audioProfileFromDefault(master, mediaAttributes.AUDIO);\n    }\n\n    if (!codecInfo.audioProfile) {\n      videojs$1.log.warn('Multiple audio tracks present but no audio codec string is specified. ' + 'Attempting to use the default audio codec (mp4a.40.2)');\n      codecInfo.audioProfile = defaultCodecs.audioProfile;\n    }\n  } // Generate the final codec strings from the codec object generated above\n\n\n  var codecStrings = {};\n\n  if (codecInfo.videoCodec) {\n    codecStrings.video = '' + codecInfo.videoCodec + codecInfo.videoObjectTypeIndicator;\n  }\n\n  if (codecInfo.audioProfile) {\n    codecStrings.audio = 'mp4a.40.' + codecInfo.audioProfile;\n  } // Finally, make and return an array with proper mime-types depending on\n  // the configuration\n\n\n  var justAudio = makeMimeTypeString('audio', containerType, [codecStrings.audio]);\n  var justVideo = makeMimeTypeString('video', containerType, [codecStrings.video]);\n  var bothVideoAudio = makeMimeTypeString('video', containerType, [codecStrings.video, codecStrings.audio]);\n\n  if (isMaat) {\n    if (!isMuxed && codecStrings.video) {\n      return [justVideo, justAudio];\n    }\n\n    if (!isMuxed && !codecStrings.video) {\n      // There is no muxed content and no video codec string, so this is an audio only\n      // stream with alternate audio.\n      return [justAudio, justAudio];\n    } // There exists the possiblity that this will return a `video/container`\n    // mime-type for the first entry in the array even when there is only audio.\n    // This doesn't appear to be a problem and simplifies the code.\n\n\n    return [bothVideoAudio, justAudio];\n  } // If there is no video codec at all, always just return a single\n  // audio/<container> mime-type\n\n\n  if (!codecStrings.video) {\n    return [justAudio];\n  } // When not using separate audio media groups, audio and video is\n  // *always* muxed\n\n\n  return [bothVideoAudio];\n};\n/**\n * Parse a content type header into a type and parameters\n * object\n *\n * @param {String} type the content type header\n * @return {Object} the parsed content-type\n * @private\n */\n\n\nvar parseContentType = function parseContentType(type) {\n  var object = {\n    type: '',\n    parameters: {}\n  };\n  var parameters = type.trim().split(';'); // first parameter should always be content-type\n\n  object.type = parameters.shift().trim();\n  parameters.forEach(function (parameter) {\n    var pair = parameter.trim().split('=');\n\n    if (pair.length > 1) {\n      var name = pair[0].replace(/\"/g, '').trim();\n      var value = pair[1].replace(/\"/g, '').trim();\n      object.parameters[name] = value;\n    }\n  });\n  return object;\n};\n/**\n * Check if a codec string refers to an audio codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is an audio codec\n * @private\n */\n\n\nvar isAudioCodec = function isAudioCodec(codec) {\n  return /mp4a\\.\\d+.\\d+/i.test(codec);\n};\n/**\n * Check if a codec string refers to a video codec.\n *\n * @param {String} codec codec string to check\n * @return {Boolean} if this is a video codec\n * @private\n */\n\n\nvar isVideoCodec = function isVideoCodec(codec) {\n  return /avc1\\.[\\da-f]+/i.test(codec);\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * 90000);\n  var i = void 0;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * 90000);\n  var endPts = Math.ceil((end - mapping) * 90000);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar buffered = function buffered(videoBuffer, audioBuffer, audioDisabled) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = []; // neither buffer has been created yet\n\n  if (!videoBuffer && !audioBuffer) {\n    return videojs$1.createTimeRange();\n  } // only one buffer is configured\n\n\n  if (!videoBuffer) {\n    return audioBuffer.buffered;\n  }\n\n  if (!audioBuffer) {\n    return videoBuffer.buffered;\n  } // both buffers are configured\n\n\n  if (audioDisabled) {\n    return videoBuffer.buffered;\n  } // both buffers are empty\n\n\n  if (videoBuffer.buffered.length === 0 && audioBuffer.buffered.length === 0) {\n    return videojs$1.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var videoBuffered = videoBuffer.buffered;\n  var audioBuffered = audioBuffer.buffered;\n  var count = videoBuffered.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: videoBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: videoBuffered.end(count),\n      type: 'end'\n    });\n  }\n\n  count = audioBuffered.length;\n\n  while (count--) {\n    extents.push({\n      time: audioBuffered.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: audioBuffered.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs$1.createTimeRanges(ranges);\n};\n/**\n * @file virtual-source-buffer.js\n */\n\n\nvar ONE_SECOND_IN_TS = 90000; // We create a wrapper around the SourceBuffer so that we can manage the\n// state of the `updating` property manually. We have to do this because\n// Firefox changes `updating` to false long before triggering `updateend`\n// events and that was causing strange problems in videojs-contrib-hls\n\nvar makeWrappedSourceBuffer = function makeWrappedSourceBuffer(mediaSource, mimeType) {\n  var sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n  var wrapper = Object.create(null);\n  wrapper.updating = false;\n  wrapper.realBuffer_ = sourceBuffer;\n\n  var _loop = function _loop(key) {\n    if (typeof sourceBuffer[key] === 'function') {\n      wrapper[key] = function () {\n        return sourceBuffer[key].apply(sourceBuffer, arguments);\n      };\n    } else if (typeof wrapper[key] === 'undefined') {\n      Object.defineProperty(wrapper, key, {\n        get: function get$$1() {\n          return sourceBuffer[key];\n        },\n        set: function set$$1(v) {\n          return sourceBuffer[key] = v;\n        }\n      });\n    }\n  };\n\n  for (var key in sourceBuffer) {\n    _loop(key);\n  }\n\n  return wrapper;\n};\n/**\n * VirtualSourceBuffers exist so that we can transmux non native formats\n * into a native format, but keep the same api as a native source buffer.\n * It creates a transmuxer, that works in its own thread (a web worker) and\n * that transmuxer muxes the data into a native format. VirtualSourceBuffer will\n * then send all of that data to the naive sourcebuffer so that it is\n * indestinguishable from a natively supported format.\n *\n * @param {HtmlMediaSource} mediaSource the parent mediaSource\n * @param {Array} codecs array of codecs that we will be dealing with\n * @class VirtualSourceBuffer\n * @extends video.js.EventTarget\n */\n\n\nvar VirtualSourceBuffer = function (_videojs$EventTarget) {\n  inherits(VirtualSourceBuffer, _videojs$EventTarget);\n\n  function VirtualSourceBuffer(mediaSource, codecs) {\n    classCallCheck(this, VirtualSourceBuffer);\n\n    var _this = possibleConstructorReturn(this, (VirtualSourceBuffer.__proto__ || Object.getPrototypeOf(VirtualSourceBuffer)).call(this, videojs$1.EventTarget));\n\n    _this.timestampOffset_ = 0;\n    _this.pendingBuffers_ = [];\n    _this.bufferUpdating_ = false;\n    _this.mediaSource_ = mediaSource;\n    _this.codecs_ = codecs;\n    _this.audioCodec_ = null;\n    _this.videoCodec_ = null;\n    _this.audioDisabled_ = false;\n    _this.appendAudioInitSegment_ = true;\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs$1.browser.IE_VERSION >= 11;\n    var options = {\n      remux: false,\n      alignGopsAtEnd: _this.safeAppend_\n    };\n\n    _this.codecs_.forEach(function (codec) {\n      if (isAudioCodec(codec)) {\n        _this.audioCodec_ = codec;\n      } else if (isVideoCodec(codec)) {\n        _this.videoCodec_ = codec;\n      }\n    }); // append muxed segments to their respective native buffers as\n    // soon as they are available\n\n\n    _this.transmuxer_ = new TransmuxWorker();\n\n    _this.transmuxer_.postMessage({\n      action: 'init',\n      options: options\n    });\n\n    _this.transmuxer_.onmessage = function (event) {\n      if (event.data.action === 'data') {\n        return _this.data_(event);\n      }\n\n      if (event.data.action === 'done') {\n        return _this.done_(event);\n      }\n\n      if (event.data.action === 'gopInfo') {\n        return _this.appendGopInfo_(event);\n      }\n\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        return _this.videoSegmentTimingInfo_(event.data.videoSegmentTimingInfo);\n      }\n    }; // this timestampOffset is a property with the side-effect of resetting\n    // baseMediaDecodeTime in the transmuxer on the setter\n\n\n    Object.defineProperty(_this, 'timestampOffset', {\n      get: function get$$1() {\n        return this.timestampOffset_;\n      },\n      set: function set$$1(val) {\n        if (typeof val === 'number' && val >= 0) {\n          this.timestampOffset_ = val;\n          this.appendAudioInitSegment_ = true; // reset gop buffer on timestampoffset as this signals a change in timeline\n\n          this.gopBuffer_.length = 0;\n          this.timeMapping_ = 0; // We have to tell the transmuxer to set the baseMediaDecodeTime to\n          // the desired timestampOffset for the next segment\n\n          this.transmuxer_.postMessage({\n            action: 'setTimestampOffset',\n            timestampOffset: val\n          });\n        }\n      }\n    }); // setting the append window affects both source buffers\n\n    Object.defineProperty(_this, 'appendWindowStart', {\n      get: function get$$1() {\n        return (this.videoBuffer_ || this.audioBuffer_).appendWindowStart;\n      },\n      set: function set$$1(start) {\n        if (this.videoBuffer_) {\n          this.videoBuffer_.appendWindowStart = start;\n        }\n\n        if (this.audioBuffer_) {\n          this.audioBuffer_.appendWindowStart = start;\n        }\n      }\n    }); // this buffer is \"updating\" if either of its native buffers are\n\n    Object.defineProperty(_this, 'updating', {\n      get: function get$$1() {\n        return !!(this.bufferUpdating_ || !this.audioDisabled_ && this.audioBuffer_ && this.audioBuffer_.updating || this.videoBuffer_ && this.videoBuffer_.updating);\n      }\n    }); // the buffered property is the intersection of the buffered\n    // ranges of the native source buffers\n\n    Object.defineProperty(_this, 'buffered', {\n      get: function get$$1() {\n        return buffered(this.videoBuffer_, this.audioBuffer_, this.audioDisabled_);\n      }\n    });\n    return _this;\n  }\n  /**\n   * When we get a data event from the transmuxer\n   * we call this function and handle the data that\n   * was sent to us\n   *\n   * @private\n   * @param {Event} event the data event from the transmuxer\n   */\n\n\n  createClass(VirtualSourceBuffer, [{\n    key: 'data_',\n    value: function data_(event) {\n      var segment = event.data.segment; // Cast ArrayBuffer to TypedArray\n\n      segment.data = new Uint8Array(segment.data, event.data.byteOffset, event.data.byteLength);\n      segment.initSegment = new Uint8Array(segment.initSegment.data, segment.initSegment.byteOffset, segment.initSegment.byteLength);\n      createTextTracksIfNecessary(this, this.mediaSource_, segment); // Add the segments to the pendingBuffers array\n\n      this.pendingBuffers_.push(segment);\n      return;\n    }\n    /**\n     * When we get a done event from the transmuxer\n     * we call this function and we process all\n     * of the pending data that we have been saving in the\n     * data_ function\n     *\n     * @private\n     * @param {Event} event the done event from the transmuxer\n     */\n\n  }, {\n    key: 'done_',\n    value: function done_(event) {\n      // Don't process and append data if the mediaSource is closed\n      if (this.mediaSource_.readyState === 'closed') {\n        this.pendingBuffers_.length = 0;\n        return;\n      } // All buffers should have been flushed from the muxer\n      // start processing anything we have received\n\n\n      this.processPendingSegments_();\n      return;\n    }\n  }, {\n    key: 'videoSegmentTimingInfo_',\n    value: function videoSegmentTimingInfo_(timingInfo) {\n      var timingInfoInSeconds = {\n        start: {\n          decode: timingInfo.start.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.start.pts / ONE_SECOND_IN_TS\n        },\n        end: {\n          decode: timingInfo.end.dts / ONE_SECOND_IN_TS,\n          presentation: timingInfo.end.pts / ONE_SECOND_IN_TS\n        },\n        baseMediaDecodeTime: timingInfo.baseMediaDecodeTime / ONE_SECOND_IN_TS\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        timingInfoInSeconds.prependedContentDuration = timingInfo.prependedContentDuration / ONE_SECOND_IN_TS;\n      }\n\n      this.trigger({\n        type: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: timingInfoInSeconds\n      });\n    }\n    /**\n     * Create our internal native audio/video source buffers and add\n     * event handlers to them with the following conditions:\n     * 1. they do not already exist on the mediaSource\n     * 2. this VSB has a codec for them\n     *\n     * @private\n     */\n\n  }, {\n    key: 'createRealSourceBuffers_',\n    value: function createRealSourceBuffers_() {\n      var _this2 = this;\n\n      var types = ['audio', 'video'];\n      types.forEach(function (type) {\n        // Don't create a SourceBuffer of this type if we don't have a\n        // codec for it\n        if (!_this2[type + 'Codec_']) {\n          return;\n        } // Do nothing if a SourceBuffer of this type already exists\n\n\n        if (_this2[type + 'Buffer_']) {\n          return;\n        }\n\n        var buffer = null; // If the mediasource already has a SourceBuffer for the codec\n        // use that\n\n        if (_this2.mediaSource_[type + 'Buffer_']) {\n          buffer = _this2.mediaSource_[type + 'Buffer_']; // In multiple audio track cases, the audio source buffer is disabled\n          // on the main VirtualSourceBuffer by the HTMLMediaSource much earlier\n          // than createRealSourceBuffers_ is called to create the second\n          // VirtualSourceBuffer because that happens as a side-effect of\n          // videojs-contrib-hls starting the audioSegmentLoader. As a result,\n          // the audioBuffer is essentially \"ownerless\" and no one will toggle\n          // the `updating` state back to false once the `updateend` event is received\n          //\n          // Setting `updating` to false manually will work around this\n          // situation and allow work to continue\n\n          buffer.updating = false;\n        } else {\n          var codecProperty = type + 'Codec_';\n          var mimeType = type + '/mp4;codecs=\"' + _this2[codecProperty] + '\"';\n          buffer = makeWrappedSourceBuffer(_this2.mediaSource_.nativeMediaSource_, mimeType);\n          _this2.mediaSource_[type + 'Buffer_'] = buffer;\n        }\n\n        _this2[type + 'Buffer_'] = buffer; // Wire up the events to the SourceBuffer\n\n        ['update', 'updatestart', 'updateend'].forEach(function (event) {\n          buffer.addEventListener(event, function () {\n            // if audio is disabled\n            if (type === 'audio' && _this2.audioDisabled_) {\n              return;\n            }\n\n            if (event === 'updateend') {\n              _this2[type + 'Buffer_'].updating = false;\n            }\n\n            var shouldTrigger = types.every(function (t) {\n              // skip checking audio's updating status if audio\n              // is not enabled\n              if (t === 'audio' && _this2.audioDisabled_) {\n                return true;\n              } // if the other type is updating we don't trigger\n\n\n              if (type !== t && _this2[t + 'Buffer_'] && _this2[t + 'Buffer_'].updating) {\n                return false;\n              }\n\n              return true;\n            });\n\n            if (shouldTrigger) {\n              return _this2.trigger(event);\n            }\n          });\n        });\n      });\n    }\n    /**\n     * Emulate the native mediasource function, but our function will\n     * send all of the proposed segments to the transmuxer so that we\n     * can transmux them before we append them to our internal\n     * native source buffers in the correct format.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/appendBuffer\n     * @param {Uint8Array} segment the segment to append to the buffer\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(segment) {\n      // Start the internal \"updating\" state\n      this.bufferUpdating_ = true;\n\n      if (this.audioBuffer_ && this.audioBuffer_.buffered.length) {\n        var audioBuffered = this.audioBuffer_.buffered;\n        this.transmuxer_.postMessage({\n          action: 'setAudioAppendStart',\n          appendStart: audioBuffered.end(audioBuffered.length - 1)\n        });\n      }\n\n      if (this.videoBuffer_) {\n        this.transmuxer_.postMessage({\n          action: 'alignGopsWith',\n          gopsToAlignWith: gopsSafeToAlignWith(this.gopBuffer_, this.mediaSource_.player_ ? this.mediaSource_.player_.currentTime() : null, this.timeMapping_)\n        });\n      }\n\n      this.transmuxer_.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: segment.buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset: segment.byteOffset,\n        byteLength: segment.byteLength\n      }, [segment.buffer]);\n      this.transmuxer_.postMessage({\n        action: 'flush'\n      });\n    }\n    /**\n     * Appends gop information (timing and byteLength) received by the transmuxer for the\n     * gops appended in the last call to appendBuffer\n     *\n     * @param {Event} event\n     *        The gopInfo event from the transmuxer\n     * @param {Array} event.data.gopInfo\n     *        List of gop info to append\n     */\n\n  }, {\n    key: 'appendGopInfo_',\n    value: function appendGopInfo_(event) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, event.data.gopInfo, this.safeAppend_);\n    }\n    /**\n     * Emulate the native mediasource function and remove parts\n     * of the buffer from any of our internal buffers that exist\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/remove\n     * @param {Double} start position to start the remove at\n     * @param {Double} end position to end the remove at\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.updating = true;\n        this.videoBuffer_.remove(start, end);\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.updating = true;\n        this.audioBuffer_.remove(start, end);\n      } // Remove Metadata Cues (id3)\n\n\n      removeCuesFromTrack(start, end, this.metadataTrack_); // Remove Any Captions\n\n      if (this.inbandTextTracks_) {\n        for (var track in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n        }\n      }\n    }\n    /**\n     * Process any segments that the muxer has output\n     * Concatenate segments together based on type and append them into\n     * their respective sourceBuffers\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processPendingSegments_',\n    value: function processPendingSegments_() {\n      var sortedSegments = {\n        video: {\n          segments: [],\n          bytes: 0\n        },\n        audio: {\n          segments: [],\n          bytes: 0\n        },\n        captions: [],\n        metadata: []\n      }; // Sort segments into separate video/audio arrays and\n      // keep track of their total byte lengths\n\n      sortedSegments = this.pendingBuffers_.reduce(function (segmentObj, segment) {\n        var type = segment.type;\n        var data = segment.data;\n        var initSegment = segment.initSegment;\n        segmentObj[type].segments.push(data);\n        segmentObj[type].bytes += data.byteLength;\n        segmentObj[type].initSegment = initSegment; // Gather any captions into a single array\n\n        if (segment.captions) {\n          segmentObj.captions = segmentObj.captions.concat(segment.captions);\n        }\n\n        if (segment.info) {\n          segmentObj[type].info = segment.info;\n        } // Gather any metadata into a single array\n\n\n        if (segment.metadata) {\n          segmentObj.metadata = segmentObj.metadata.concat(segment.metadata);\n        }\n\n        return segmentObj;\n      }, sortedSegments); // Create the real source buffers if they don't exist by now since we\n      // finally are sure what tracks are contained in the source\n\n      if (!this.videoBuffer_ && !this.audioBuffer_) {\n        // Remove any codecs that may have been specified by default but\n        // are no longer applicable now\n        if (sortedSegments.video.bytes === 0) {\n          this.videoCodec_ = null;\n        }\n\n        if (sortedSegments.audio.bytes === 0) {\n          this.audioCodec_ = null;\n        }\n\n        this.createRealSourceBuffers_();\n      }\n\n      if (sortedSegments.audio.info) {\n        this.mediaSource_.trigger({\n          type: 'audioinfo',\n          info: sortedSegments.audio.info\n        });\n      }\n\n      if (sortedSegments.video.info) {\n        this.mediaSource_.trigger({\n          type: 'videoinfo',\n          info: sortedSegments.video.info\n        });\n      }\n\n      if (this.appendAudioInitSegment_) {\n        if (!this.audioDisabled_ && this.audioBuffer_) {\n          sortedSegments.audio.segments.unshift(sortedSegments.audio.initSegment);\n          sortedSegments.audio.bytes += sortedSegments.audio.initSegment.byteLength;\n        }\n\n        this.appendAudioInitSegment_ = false;\n      }\n\n      var triggerUpdateend = false; // Merge multiple video and audio segments into one and append\n\n      if (this.videoBuffer_ && sortedSegments.video.bytes) {\n        sortedSegments.video.segments.unshift(sortedSegments.video.initSegment);\n        sortedSegments.video.bytes += sortedSegments.video.initSegment.byteLength;\n        this.concatAndAppendSegments_(sortedSegments.video, this.videoBuffer_);\n      } else if (this.videoBuffer_ && (this.audioDisabled_ || !this.audioBuffer_)) {\n        // The transmuxer did not return any bytes of video, meaning it was all trimmed\n        // for gop alignment. Since we have a video buffer and audio is disabled, updateend\n        // will never be triggered by this source buffer, which will cause contrib-hls\n        // to be stuck forever waiting for updateend. If audio is not disabled, updateend\n        // will be triggered by the audio buffer, which will be sent upwards since the video\n        // buffer will not be in an updating state.\n        triggerUpdateend = true;\n      } // Add text-track data for all\n\n\n      addTextTrackData(this, sortedSegments.captions, sortedSegments.metadata);\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.concatAndAppendSegments_(sortedSegments.audio, this.audioBuffer_);\n      }\n\n      this.pendingBuffers_.length = 0;\n\n      if (triggerUpdateend) {\n        this.trigger('updateend');\n      } // We are no longer in the internal \"updating\" state\n\n\n      this.bufferUpdating_ = false;\n    }\n    /**\n     * Combine all segments into a single Uint8Array and then append them\n     * to the destination buffer\n     *\n     * @param {Object} segmentObj\n     * @param {SourceBuffer} destinationBuffer native source buffer to append data to\n     * @private\n     */\n\n  }, {\n    key: 'concatAndAppendSegments_',\n    value: function concatAndAppendSegments_(segmentObj, destinationBuffer) {\n      var offset = 0;\n      var tempBuffer = void 0;\n\n      if (segmentObj.bytes) {\n        tempBuffer = new Uint8Array(segmentObj.bytes); // Combine the individual segments into one large typed-array\n\n        segmentObj.segments.forEach(function (segment) {\n          tempBuffer.set(segment, offset);\n          offset += segment.byteLength;\n        });\n\n        try {\n          destinationBuffer.updating = true;\n          destinationBuffer.appendBuffer(tempBuffer);\n        } catch (error) {\n          if (this.mediaSource_.player_) {\n            this.mediaSource_.player_.error({\n              code: -3,\n              type: 'APPEND_BUFFER_ERR',\n              message: error.message,\n              originalError: error\n            });\n          }\n        }\n      }\n    }\n    /**\n     * Emulate the native mediasource function. abort any soureBuffer\n     * actions and throw out any un-appended data.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/SourceBuffer/abort\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.videoBuffer_) {\n        this.videoBuffer_.abort();\n      }\n\n      if (!this.audioDisabled_ && this.audioBuffer_) {\n        this.audioBuffer_.abort();\n      }\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n\n      this.pendingBuffers_.length = 0;\n      this.bufferUpdating_ = false;\n    }\n  }]);\n  return VirtualSourceBuffer;\n}(videojs$1.EventTarget);\n/**\n * @file html-media-source.js\n */\n\n/**\n * Our MediaSource implementation in HTML, mimics native\n * MediaSource where/if possible.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource\n * @class HtmlMediaSource\n * @extends videojs.EventTarget\n */\n\n\nvar HtmlMediaSource = function (_videojs$EventTarget) {\n  inherits(HtmlMediaSource, _videojs$EventTarget);\n\n  function HtmlMediaSource() {\n    classCallCheck(this, HtmlMediaSource);\n\n    var _this = possibleConstructorReturn(this, (HtmlMediaSource.__proto__ || Object.getPrototypeOf(HtmlMediaSource)).call(this));\n\n    var property = void 0;\n    _this.nativeMediaSource_ = new window$1.MediaSource(); // delegate to the native MediaSource's methods by default\n\n    for (property in _this.nativeMediaSource_) {\n      if (!(property in HtmlMediaSource.prototype) && typeof _this.nativeMediaSource_[property] === 'function') {\n        _this[property] = _this.nativeMediaSource_[property].bind(_this.nativeMediaSource_);\n      }\n    } // emulate `duration` and `seekable` until seeking can be\n    // handled uniformly for live streams\n    // see https://github.com/w3c/media-source/issues/5\n\n\n    _this.duration_ = NaN;\n    Object.defineProperty(_this, 'duration', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return this.duration_;\n        }\n\n        return this.nativeMediaSource_.duration;\n      },\n      set: function set$$1(duration) {\n        this.duration_ = duration;\n\n        if (duration !== Infinity) {\n          this.nativeMediaSource_.duration = duration;\n          return;\n        }\n      }\n    });\n    Object.defineProperty(_this, 'seekable', {\n      get: function get$$1() {\n        if (this.duration_ === Infinity) {\n          return videojs$1.createTimeRanges([[0, this.nativeMediaSource_.duration]]);\n        }\n\n        return this.nativeMediaSource_.seekable;\n      }\n    });\n    Object.defineProperty(_this, 'readyState', {\n      get: function get$$1() {\n        return this.nativeMediaSource_.readyState;\n      }\n    });\n    Object.defineProperty(_this, 'activeSourceBuffers', {\n      get: function get$$1() {\n        return this.activeSourceBuffers_;\n      }\n    }); // the list of virtual and native SourceBuffers created by this\n    // MediaSource\n\n    _this.sourceBuffers = [];\n    _this.activeSourceBuffers_ = [];\n    /**\n     * update the list of active source buffers based upon various\n     * imformation from HLS and video.js\n     *\n     * @private\n     */\n\n    _this.updateActiveSourceBuffers_ = function () {\n      // Retain the reference but empty the array\n      _this.activeSourceBuffers_.length = 0; // If there is only one source buffer, then it will always be active and audio will\n      // be disabled based on the codec of the source buffer\n\n      if (_this.sourceBuffers.length === 1) {\n        var sourceBuffer = _this.sourceBuffers[0];\n        sourceBuffer.appendAudioInitSegment_ = true;\n        sourceBuffer.audioDisabled_ = !sourceBuffer.audioCodec_;\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n\n        return;\n      } // There are 2 source buffers, a combined (possibly video only) source buffer and\n      // and an audio only source buffer.\n      // By default, the audio in the combined virtual source buffer is enabled\n      // and the audio-only source buffer (if it exists) is disabled.\n\n\n      var disableCombined = false;\n      var disableAudioOnly = true; // TODO: maybe we can store the sourcebuffers on the track objects?\n      // safari may do something like this\n\n      for (var i = 0; i < _this.player_.audioTracks().length; i++) {\n        var track = _this.player_.audioTracks()[i];\n\n        if (track.enabled && track.kind !== 'main') {\n          // The enabled track is an alternate audio track so disable the audio in\n          // the combined source buffer and enable the audio-only source buffer.\n          disableCombined = true;\n          disableAudioOnly = false;\n          break;\n        }\n      }\n\n      _this.sourceBuffers.forEach(function (sourceBuffer, index) {\n        /* eslinst-disable */\n        // TODO once codecs are required, we can switch to using the codecs to determine\n        //      what stream is the video stream, rather than relying on videoTracks\n\n        /* eslinst-enable */\n        sourceBuffer.appendAudioInitSegment_ = true;\n\n        if (sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // combined\n          sourceBuffer.audioDisabled_ = disableCombined;\n        } else if (sourceBuffer.videoCodec_ && !sourceBuffer.audioCodec_) {\n          // If the \"combined\" source buffer is video only, then we do not want\n          // disable the audio-only source buffer (this is mostly for demuxed\n          // audio and video hls)\n          sourceBuffer.audioDisabled_ = true;\n          disableAudioOnly = false;\n        } else if (!sourceBuffer.videoCodec_ && sourceBuffer.audioCodec_) {\n          // audio only\n          // In the case of audio only with alternate audio and disableAudioOnly is true\n          // this means we want to disable the audio on the alternate audio sourcebuffer\n          // but not the main \"combined\" source buffer. The \"combined\" source buffer is\n          // always at index 0, so this ensures audio won't be disabled in both source\n          // buffers.\n          sourceBuffer.audioDisabled_ = index ? disableAudioOnly : !disableAudioOnly;\n\n          if (sourceBuffer.audioDisabled_) {\n            return;\n          }\n        }\n\n        _this.activeSourceBuffers_.push(sourceBuffer);\n      });\n    };\n\n    _this.onPlayerMediachange_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        sourceBuffer.appendAudioInitSegment_ = true;\n      });\n    };\n\n    _this.onHlsReset_ = function () {\n      _this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.postMessage({\n            action: 'resetCaptions'\n          });\n        }\n      });\n    };\n\n    _this.onHlsSegmentTimeMapping_ = function (event) {\n      _this.sourceBuffers.forEach(function (buffer) {\n        return buffer.timeMapping_ = event.mapping;\n      });\n    }; // Re-emit MediaSource events on the polyfill\n\n\n    ['sourceopen', 'sourceclose', 'sourceended'].forEach(function (eventName) {\n      this.nativeMediaSource_.addEventListener(eventName, this.trigger.bind(this));\n    }, _this); // capture the associated player when the MediaSource is\n    // successfully attached\n\n    _this.on('sourceopen', function (event) {\n      // Get the player this MediaSource is attached to\n      var video = document.querySelector('[src=\"' + _this.url_ + '\"]');\n\n      if (!video) {\n        return;\n      }\n\n      _this.player_ = videojs$1(video.parentNode);\n\n      if (!_this.player_) {\n        return;\n      } // hls-reset is fired by videojs.Hls on to the tech after the main SegmentLoader\n      // resets its state and flushes the buffer\n\n\n      _this.player_.tech_.on('hls-reset', _this.onHlsReset_); // hls-segment-time-mapping is fired by videojs.Hls on to the tech after the main\n      // SegmentLoader inspects an MTS segment and has an accurate stream to display\n      // time mapping\n\n\n      _this.player_.tech_.on('hls-segment-time-mapping', _this.onHlsSegmentTimeMapping_);\n\n      if (_this.player_.audioTracks && _this.player_.audioTracks()) {\n        _this.player_.audioTracks().on('change', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('addtrack', _this.updateActiveSourceBuffers_);\n\n        _this.player_.audioTracks().on('removetrack', _this.updateActiveSourceBuffers_);\n      }\n\n      _this.player_.on('mediachange', _this.onPlayerMediachange_);\n    });\n\n    _this.on('sourceended', function (event) {\n      var duration = durationOfVideo(_this.duration);\n\n      for (var i = 0; i < _this.sourceBuffers.length; i++) {\n        var sourcebuffer = _this.sourceBuffers[i];\n        var cues = sourcebuffer.metadataTrack_ && sourcebuffer.metadataTrack_.cues;\n\n        if (cues && cues.length) {\n          cues[cues.length - 1].endTime = duration;\n        }\n      }\n    }); // explicitly terminate any WebWorkers that were created\n    // by SourceHandlers\n\n\n    _this.on('sourceclose', function (event) {\n      this.sourceBuffers.forEach(function (sourceBuffer) {\n        if (sourceBuffer.transmuxer_) {\n          sourceBuffer.transmuxer_.terminate();\n        }\n      });\n      this.sourceBuffers.length = 0;\n\n      if (!this.player_) {\n        return;\n      }\n\n      if (this.player_.audioTracks && this.player_.audioTracks()) {\n        this.player_.audioTracks().off('change', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('addtrack', this.updateActiveSourceBuffers_);\n        this.player_.audioTracks().off('removetrack', this.updateActiveSourceBuffers_);\n      } // We can only change this if the player hasn't been disposed of yet\n      // because `off` eventually tries to use the el_ property. If it has\n      // been disposed of, then don't worry about it because there are no\n      // event handlers left to unbind anyway\n\n\n      if (this.player_.el_) {\n        this.player_.off('mediachange', this.onPlayerMediachange_);\n      }\n\n      if (this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.tech_.off('hls-reset', this.onHlsReset_);\n        this.player_.tech_.off('hls-segment-time-mapping', this.onHlsSegmentTimeMapping_);\n      }\n    });\n\n    return _this;\n  }\n  /**\n   * Add a range that that can now be seeked to.\n   *\n   * @param {Double} start where to start the addition\n   * @param {Double} end where to end the addition\n   * @private\n   */\n\n\n  createClass(HtmlMediaSource, [{\n    key: 'addSeekableRange_',\n    value: function addSeekableRange_(start, end) {\n      var error = void 0;\n\n      if (this.duration !== Infinity) {\n        error = new Error('MediaSource.addSeekableRange() can only be invoked ' + 'when the duration is Infinity');\n        error.name = 'InvalidStateError';\n        error.code = 11;\n        throw error;\n      }\n\n      if (end > this.nativeMediaSource_.duration || isNaN(this.nativeMediaSource_.duration)) {\n        this.nativeMediaSource_.duration = end;\n      }\n    }\n    /**\n     * Add a source buffer to the media source.\n     *\n     * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/addSourceBuffer\n     * @param {String} type the content-type of the content\n     * @return {Object} the created source buffer\n     */\n\n  }, {\n    key: 'addSourceBuffer',\n    value: function addSourceBuffer(type) {\n      var buffer = void 0;\n      var parsedType = parseContentType(type); // Create a VirtualSourceBuffer to transmux MPEG-2 transport\n      // stream segments into fragmented MP4s\n\n      if (/^(video|audio)\\/mp2t$/i.test(parsedType.type)) {\n        var codecs = [];\n\n        if (parsedType.parameters && parsedType.parameters.codecs) {\n          codecs = parsedType.parameters.codecs.split(',');\n          codecs = translateLegacyCodecs(codecs);\n          codecs = codecs.filter(function (codec) {\n            return isAudioCodec(codec) || isVideoCodec(codec);\n          });\n        }\n\n        if (codecs.length === 0) {\n          codecs = ['avc1.4d400d', 'mp4a.40.2'];\n        }\n\n        buffer = new VirtualSourceBuffer(this, codecs);\n\n        if (this.sourceBuffers.length !== 0) {\n          // If another VirtualSourceBuffer already exists, then we are creating a\n          // SourceBuffer for an alternate audio track and therefore we know that\n          // the source has both an audio and video track.\n          // That means we should trigger the manual creation of the real\n          // SourceBuffers instead of waiting for the transmuxer to return data\n          this.sourceBuffers[0].createRealSourceBuffers_();\n          buffer.createRealSourceBuffers_(); // Automatically disable the audio on the first source buffer if\n          // a second source buffer is ever created\n\n          this.sourceBuffers[0].audioDisabled_ = true;\n        }\n      } else {\n        // delegate to the native implementation\n        buffer = this.nativeMediaSource_.addSourceBuffer(type);\n      }\n\n      this.sourceBuffers.push(buffer);\n      return buffer;\n    }\n  }]);\n  return HtmlMediaSource;\n}(videojs$1.EventTarget);\n/**\n * @file videojs-contrib-media-sources.js\n */\n\n\nvar urlCount = 0; // ------------\n// Media Source\n// ------------\n// store references to the media sources so they can be connected\n// to a video element (a swf object)\n// TODO: can we store this somewhere local to this module?\n\nvideojs$1.mediaSources = {};\n/**\n * Provide a method for a swf object to notify JS that a\n * media source is now open.\n *\n * @param {String} msObjectURL string referencing the MSE Object URL\n * @param {String} swfId the swf id\n */\n\nvar open = function open(msObjectURL, swfId) {\n  var mediaSource = videojs$1.mediaSources[msObjectURL];\n\n  if (mediaSource) {\n    mediaSource.trigger({\n      type: 'sourceopen',\n      swfId: swfId\n    });\n  } else {\n    throw new Error('Media Source not found (Video.js)');\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {Boolean} if  native media sources are supported\n */\n\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return !!window$1.MediaSource && !!window$1.MediaSource.isTypeSupported && window$1.MediaSource.isTypeSupported('video/mp4;codecs=\"avc1.4d400d,mp4a.40.2\"');\n};\n/**\n * An emulation of the MediaSource API so that we can support\n * native and non-native functionality. returns an instance of\n * HtmlMediaSource.\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/MediaSource\n */\n\n\nvar MediaSource = function MediaSource() {\n  this.MediaSource = {\n    open: open,\n    supportsNativeMediaSources: supportsNativeMediaSources\n  };\n\n  if (supportsNativeMediaSources()) {\n    return new HtmlMediaSource();\n  }\n\n  throw new Error('Cannot use create a virtual MediaSource for this video');\n};\n\nMediaSource.open = open;\nMediaSource.supportsNativeMediaSources = supportsNativeMediaSources;\n/**\n * A wrapper around the native URL for our MSE object\n * implementation, this object is exposed under videojs.URL\n *\n * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/URL\n */\n\nvar URL$1 = {\n  /**\n   * A wrapper around the native createObjectURL for our objects.\n   * This function maps a native or emulated mediaSource to a blob\n   * url so that it can be loaded into video.js\n   *\n   * @link https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n   * @param {MediaSource} object the object to create a blob url to\n   */\n  createObjectURL: function createObjectURL(object) {\n    var objectUrlPrefix = 'blob:vjs-media-source/';\n    var url = void 0; // use the native MediaSource to generate an object URL\n\n    if (object instanceof HtmlMediaSource) {\n      url = window$1.URL.createObjectURL(object.nativeMediaSource_);\n      object.url_ = url;\n      return url;\n    } // if the object isn't an emulated MediaSource, delegate to the\n    // native implementation\n\n\n    if (!(object instanceof HtmlMediaSource)) {\n      url = window$1.URL.createObjectURL(object);\n      object.url_ = url;\n      return url;\n    } // build a URL that can be used to map back to the emulated\n    // MediaSource\n\n\n    url = objectUrlPrefix + urlCount;\n    urlCount++; // setup the mapping back to object\n\n    videojs$1.mediaSources[url] = object;\n    return url;\n  }\n};\nvideojs$1.MediaSource = MediaSource;\nvideojs$1.URL = URL$1;\nvar EventTarget$1$1 = videojs$1.EventTarget,\n    mergeOptions$2 = videojs$1.mergeOptions;\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\nvar updateMaster$1 = function updateMaster$$1(oldMaster, newMaster) {\n  var noChanges = void 0;\n  var update = mergeOptions$2(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlistUpdate = updateMaster(update, newMaster.playlists[i]);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n    } else {\n      noChanges = true;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var uri = properties.playlists[0].uri;\n\n      var _playlistUpdate = updateMaster(update, properties.playlists[0]);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[uri];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n};\n\nvar generateSidxKey = function generateSidxKey(sidxInfo) {\n  // should be non-inclusive\n  var sidxByteRangeEnd = sidxInfo.byterange.offset + sidxInfo.byterange.length - 1;\n  return sidxInfo.uri + '-' + sidxInfo.byterange.offset + '-' + sidxByteRangeEnd;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var uri in playlists) {\n    var playlist = playlists[uri];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} masterXml the mpd XML\n *  @param {string} srcUrl the mpd url\n *  @param {Date} clientOffset a time difference between server and client (passed through and not used)\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(masterXml, srcUrl, clientOffset, oldSidxMapping) {\n  // Don't pass current sidx mapping\n  var master = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset\n  });\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions$2(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n}; // exported for testing\n\n\nvar requestSidx_ = function requestSidx_(sidxRange, playlist, xhr, options, finishProcessingFn) {\n  var sidxInfo = {\n    // resolve the segment URL relative to the playlist\n    uri: resolveManifestRedirect(options.handleManifestRedirects, sidxRange.resolvedUri),\n    // resolvedUri: sidxRange.resolvedUri,\n    byterange: sidxRange.byterange,\n    // the segment's playlist\n    playlist: playlist\n  };\n  var sidxRequestOptions = videojs$1.mergeOptions(sidxInfo, {\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(sidxInfo)\n  });\n  return xhr(sidxRequestOptions, finishProcessingFn);\n};\n\nvar DashPlaylistLoader = function (_EventTarget) {\n  inherits(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, hls) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var masterPlaylistLoader = arguments[3];\n    classCallCheck(this, DashPlaylistLoader);\n\n    var _this = possibleConstructorReturn(this, (DashPlaylistLoader.__proto__ || Object.getPrototypeOf(DashPlaylistLoader)).call(this));\n\n    var _options$withCredenti = options.withCredentials,\n        withCredentials = _options$withCredenti === undefined ? false : _options$withCredenti,\n        _options$handleManife = options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === undefined ? false : _options$handleManife;\n    _this.hls_ = hls;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or playlist is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().uri);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {}; // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (typeof srcUrlOrPlaylist === 'string') {\n      _this.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.sidxMapping_ = {};\n      return possibleConstructorReturn(_this);\n    }\n\n    _this.setupChildLoader(masterPlaylistLoader, srcUrlOrPlaylist);\n\n    return _this;\n  }\n\n  createClass(DashPlaylistLoader, [{\n    key: 'setupChildLoader',\n    value: function setupChildLoader(masterPlaylistLoader, playlist) {\n      this.masterPlaylistLoader_ = masterPlaylistLoader;\n      this.childPlaylist_ = playlist;\n    }\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window$1.clearTimeout(this.mediaRequest_);\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n    }\n  }, {\n    key: 'hasPendingRequest',\n    value: function hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n  }, {\n    key: 'stopRequest',\n    value: function stopRequest() {\n      if (this.request) {\n        var oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n  }, {\n    key: 'sidxRequestFinished_',\n    value: function sidxRequestFinished_(playlist, master, startingState, doneFn) {\n      var _this2 = this;\n\n      return function (err, request) {\n        // disposed\n        if (!_this2.request) {\n          return;\n        } // pending request is cleared\n\n\n        _this2.request = null;\n\n        if (err) {\n          _this2.error = {\n            status: request.status,\n            message: 'DASH playlist request error at URL: ' + playlist.uri,\n            response: request.response,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (startingState) {\n            _this2.state = startingState;\n          }\n\n          _this2.trigger('error');\n\n          return doneFn(master, null);\n        }\n\n        var bytes = new Uint8Array(request.response);\n        var sidx = mp4Inspector.parseSidx(bytes.subarray(8));\n        return doneFn(master, sidx);\n      };\n    }\n  }, {\n    key: 'media',\n    value: function media(playlist) {\n      var _this3 = this; // getter\n\n\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n\n      var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.master.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n\n        playlist = this.master.playlists[playlist];\n      }\n\n      var mediaChange = !this.media_ || playlist.uri !== this.media_.uri; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.uri] && this.loadedPlaylists_[playlist.uri].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n\n        return;\n      } // switching to the active playlist is a no-op\n\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n\n      if (!playlist.sidx) {\n        // Continue asynchronously if there is no sidx\n        // wait one tick to allow haveMaster to run first on a child loader\n        this.mediaRequest_ = window$1.setTimeout(this.haveMetadata.bind(this, {\n          startingState: startingState,\n          playlist: playlist\n        }), 0); // exit early and don't do sidx work\n\n        return;\n      } // we have sidx mappings\n\n\n      var oldMaster = void 0;\n      var sidxMapping = void 0; // sidxMapping is used when parsing the masterXml, so store\n      // it on the masterPlaylistLoader\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        sidxMapping = this.masterPlaylistLoader_.sidxMapping_;\n      } else {\n        oldMaster = this.master;\n        sidxMapping = this.sidxMapping_;\n      }\n\n      var sidxKey = generateSidxKey(playlist.sidx);\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx\n      };\n      this.request = requestSidx_(playlist.sidx, playlist, this.hls_.xhr, {\n        handleManifestRedirects: this.handleManifestRedirects\n      }, this.sidxRequestFinished_(playlist, oldMaster, startingState, function (newMaster, sidx) {\n        if (!newMaster || !sidx) {\n          throw new Error('failed to request sidx');\n        } // update loader's sidxMapping with parsed sidx box\n\n\n        sidxMapping[sidxKey].sidx = sidx; // everything is ready just continue to haveMetadata\n\n        _this3.haveMetadata({\n          startingState: startingState,\n          playlist: newMaster.playlists[playlist.uri]\n        });\n      }));\n    }\n  }, {\n    key: 'haveMetadata',\n    value: function haveMetadata(_ref) {\n      var startingState = _ref.startingState,\n          playlist = _ref.playlist;\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.uri] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.uri); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MASTER') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this.stopRequest();\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n  }, {\n    key: 'load',\n    value: function load(isFinalRendition) {\n      var _this4 = this;\n\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      var media = this.media();\n\n      if (isFinalRendition) {\n        var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          return _this4.load();\n        }, delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n\n      this.trigger('loadedplaylist');\n    }\n    /**\n     * Parses the master xml string and updates playlist uri references\n     *\n     * @return {Object}\n     *         The parsed mpd manifest object\n     */\n\n  }, {\n    key: 'parseMasterXml',\n    value: function parseMasterXml() {\n      var master = parse(this.masterXml_, {\n        manifestUri: this.srcUrl,\n        clientOffset: this.clientOffset_,\n        sidxMapping: this.sidxMapping_\n      });\n      master.uri = this.srcUrl; // Set up phony URIs for the playlists since we won't have external URIs for DASH\n      // but reference playlists by their URI throughout the project\n      // TODO: Should we create the dummy uris in mpd-parser as well (leaning towards yes).\n\n      for (var i = 0; i < master.playlists.length; i++) {\n        var phonyUri = 'placeholder-uri-' + i;\n        master.playlists[i].uri = phonyUri; // set up by URI references\n\n        master.playlists[phonyUri] = master.playlists[i];\n      } // set up phony URIs for the media group playlists since we won't have external\n      // URIs for DASH but reference playlists by their URI throughout the project\n\n\n      forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n        if (properties.playlists && properties.playlists.length) {\n          var _phonyUri = 'placeholder-uri-' + mediaType + '-' + groupKey + '-' + labelKey;\n\n          properties.playlists[0].uri = _phonyUri; // setup URI references\n\n          master.playlists[_phonyUri] = properties.playlists[0];\n        }\n      });\n      setupMediaPlaylists(master);\n      resolveMediaGroupUris(master);\n      return master;\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this5 = this;\n\n      this.started = true; // We don't need to request the master manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (this.masterPlaylistLoader_) {\n        this.mediaRequest_ = window$1.setTimeout(this.haveMaster_.bind(this), 0);\n        return;\n      } // request the specified URL\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this5.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this5.request = null;\n\n        if (error) {\n          _this5.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this5.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this5.state === 'HAVE_NOTHING') {\n            _this5.started = false;\n          }\n\n          return _this5.trigger('error');\n        }\n\n        _this5.masterXml_ = req.responseText;\n\n        if (req.responseHeaders && req.responseHeaders.date) {\n          _this5.masterLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          _this5.masterLoaded_ = Date.now();\n        }\n\n        _this5.srcUrl = resolveManifestRedirect(_this5.handleManifestRedirects, _this5.srcUrl, req);\n\n        _this5.syncClientServerClock_(_this5.onClientServerClockSync_.bind(_this5));\n      });\n    }\n    /**\n     * Parses the master xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n  }, {\n    key: 'syncClientServerClock_',\n    value: function syncClientServerClock_(done) {\n      var _this6 = this;\n\n      var utcTiming = parseUTCTiming(this.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.clientOffset_ = this.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      if (utcTiming.method === 'DIRECT') {\n        this.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n\n      this.request = this.hls_.xhr({\n        uri: resolveUrl(this.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this6.request) {\n          return;\n        }\n\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          _this6.clientOffset_ = _this6.masterLoaded_ - Date.now();\n          return done();\n        }\n\n        var serverTime = void 0;\n\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = _this6.masterLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n\n        _this6.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n  }, {\n    key: 'haveMaster_',\n    value: function haveMaster_() {\n      this.state = 'HAVE_MASTER'; // clear media request\n\n      this.mediaRequest_ = null;\n\n      if (!this.masterPlaylistLoader_) {\n        this.master = this.parseMasterXml(); // We have the master playlist at this point, so\n        // trigger this to allow MasterPlaylistController\n        // to make an initial playlist selection\n\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    /**\n     * Handler for after client/server clock synchronization has happened. Sets up\n     * xml refresh timer if specificed by the manifest.\n     */\n\n  }, {\n    key: 'onClientServerClockSync_',\n    value: function onClientServerClockSync_() {\n      var _this7 = this;\n\n      this.haveMaster_();\n\n      if (!this.hasPendingRequest() && !this.media_) {\n        this.media(this.master.playlists[0]);\n      } // TODO: minimumUpdatePeriod can have a value of 0. Currently the manifest will not\n      // be refreshed when this is the case. The inter-op guide says that when the\n      // minimumUpdatePeriod is 0, the manifest should outline all currently available\n      // segments, but future segments may require an update. I think a good solution\n      // would be to update the manifest at the same rate that the media playlists\n      // are \"refreshed\", i.e. every targetDuration.\n\n\n      if (this.master && this.master.minimumUpdatePeriod) {\n        this.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this7.trigger('minimumUpdatePeriod');\n        }, this.master.minimumUpdatePeriod);\n      }\n    }\n    /**\n     * Sends request to refresh the master xml and updates the parsed master manifest\n     * TODO: Does the client offset need to be recalculated when the xml is refreshed?\n     */\n\n  }, {\n    key: 'refreshXml_',\n    value: function refreshXml_() {\n      var _this8 = this; // The srcUrl here *may* need to pass through handleManifestsRedirects when\n      // sidx is implemented\n\n\n      this.request = this.hls_.xhr({\n        uri: this.srcUrl,\n        withCredentials: this.withCredentials\n      }, function (error, req) {\n        // disposed\n        if (!_this8.request) {\n          return;\n        } // clear the loader's request reference\n\n\n        _this8.request = null;\n\n        if (error) {\n          _this8.error = {\n            status: req.status,\n            message: 'DASH playlist request error at URL: ' + _this8.srcUrl,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n\n          if (_this8.state === 'HAVE_NOTHING') {\n            _this8.started = false;\n          }\n\n          return _this8.trigger('error');\n        }\n\n        _this8.masterXml_ = req.responseText; // This will filter out updated sidx info from the mapping\n\n        _this8.sidxMapping_ = filterChangedSidxMappings(_this8.masterXml_, _this8.srcUrl, _this8.clientOffset_, _this8.sidxMapping_);\n\n        var master = _this8.parseMasterXml();\n\n        var updatedMaster = updateMaster$1(_this8.master, master);\n\n        if (updatedMaster) {\n          var sidxKey = generateSidxKey(_this8.media().sidx); // the sidx was updated, so the previous mapping was removed\n\n          if (!_this8.sidxMapping_[sidxKey]) {\n            var playlist = _this8.media();\n\n            _this8.request = requestSidx_(playlist.sidx, playlist, _this8.hls_.xhr, {\n              handleManifestRedirects: _this8.handleManifestRedirects\n            }, _this8.sidxRequestFinished_(playlist, master, _this8.state, function (newMaster, sidx) {\n              if (!newMaster || !sidx) {\n                throw new Error('failed to request sidx on minimumUpdatePeriod');\n              } // update loader's sidxMapping with parsed sidx box\n\n\n              _this8.sidxMapping_[sidxKey].sidx = sidx;\n              _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n                _this8.trigger('minimumUpdatePeriod');\n              }, _this8.master.minimumUpdatePeriod); // TODO: do we need to reload the current playlist?\n\n              _this8.refreshMedia_(_this8.media().uri);\n\n              return;\n            }));\n          } else {\n            _this8.master = updatedMaster;\n          }\n        }\n\n        _this8.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n          _this8.trigger('minimumUpdatePeriod');\n        }, _this8.master.minimumUpdatePeriod);\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the master xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the master loader.\n     */\n\n  }, {\n    key: 'refreshMedia_',\n    value: function refreshMedia_(mediaUri) {\n      var _this9 = this;\n\n      if (!mediaUri) {\n        throw new Error('refreshMedia_ must take a media uri');\n      }\n\n      var oldMaster = void 0;\n      var newMaster = void 0;\n\n      if (this.masterPlaylistLoader_) {\n        oldMaster = this.masterPlaylistLoader_.master;\n        newMaster = this.masterPlaylistLoader_.parseMasterXml();\n      } else {\n        oldMaster = this.master;\n        newMaster = this.parseMasterXml();\n      }\n\n      var updatedMaster = updateMaster$1(oldMaster, newMaster);\n\n      if (updatedMaster) {\n        if (this.masterPlaylistLoader_) {\n          this.masterPlaylistLoader_.master = updatedMaster;\n        } else {\n          this.master = updatedMaster;\n        }\n\n        this.media_ = updatedMaster.playlists[mediaUri];\n      } else {\n        this.media_ = newMaster.playlists[mediaUri];\n        this.trigger('playlistunchanged');\n      }\n\n      if (!this.media().endList) {\n        this.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n        }, refreshDelay(this.media(), !!updatedMaster));\n      }\n\n      this.trigger('loadedplaylist');\n    }\n  }]);\n  return DashPlaylistLoader;\n}(EventTarget$1$1);\n\nvar logger = function logger(source) {\n  if (videojs$1.log.debug) {\n    return videojs$1.log.debug.bind(videojs$1, 'VHS:', source + ' >');\n  }\n\n  return function () {};\n};\n\nfunction noop() {}\n/**\n * @file source-updater.js\n */\n\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the\n * SourceBuffer from\n * @param {String} mimeType the desired MIME type of the underlying\n * SourceBuffer\n * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer is\n * added to the media source\n */\n\n\nvar SourceUpdater = function () {\n  function SourceUpdater(mediaSource, mimeType, type, sourceBufferEmitter) {\n    classCallCheck(this, SourceUpdater);\n    this.callbacks_ = [];\n    this.pendingCallback_ = null;\n    this.timestampOffset_ = 0;\n    this.mediaSource = mediaSource;\n    this.processedAppend_ = false;\n    this.type_ = type;\n    this.mimeType_ = mimeType;\n    this.logger_ = logger('SourceUpdater[' + type + '][' + mimeType + ']');\n\n    if (mediaSource.readyState === 'closed') {\n      mediaSource.addEventListener('sourceopen', this.createSourceBuffer_.bind(this, mimeType, sourceBufferEmitter));\n    } else {\n      this.createSourceBuffer_(mimeType, sourceBufferEmitter);\n    }\n  }\n\n  createClass(SourceUpdater, [{\n    key: 'createSourceBuffer_',\n    value: function createSourceBuffer_(mimeType, sourceBufferEmitter) {\n      var _this = this;\n\n      this.sourceBuffer_ = this.mediaSource.addSourceBuffer(mimeType);\n      this.logger_('created SourceBuffer');\n\n      if (sourceBufferEmitter) {\n        sourceBufferEmitter.trigger('sourcebufferadded');\n\n        if (this.mediaSource.sourceBuffers.length < 2) {\n          // There's another source buffer we must wait for before we can start updating\n          // our own (or else we can get into a bad state, i.e., appending video/audio data\n          // before the other video/audio source buffer is available and leading to a video\n          // or audio only buffer).\n          sourceBufferEmitter.on('sourcebufferadded', function () {\n            _this.start_();\n          });\n          return;\n        }\n      }\n\n      this.start_();\n    }\n  }, {\n    key: 'start_',\n    value: function start_() {\n      var _this2 = this;\n\n      this.started_ = true; // run completion handlers and process callbacks as updateend\n      // events fire\n\n      this.onUpdateendCallback_ = function () {\n        var pendingCallback = _this2.pendingCallback_;\n        _this2.pendingCallback_ = null;\n        _this2.sourceBuffer_.removing = false;\n\n        _this2.logger_('buffered [' + printableRange(_this2.buffered()) + ']');\n\n        if (pendingCallback) {\n          pendingCallback();\n        }\n\n        _this2.runCallback_();\n      };\n\n      this.sourceBuffer_.addEventListener('updateend', this.onUpdateendCallback_);\n      this.runCallback_();\n    }\n    /**\n     * Aborts the current segment and resets the segment parser.\n     *\n     * @param {Function} done function to call when done\n     * @see http://w3c.github.io/media-source/#widl-SourceBuffer-abort-void\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort(done) {\n      var _this3 = this;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this3.sourceBuffer_.abort();\n        }, done);\n      }\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {ArrayBuffer} bytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n  }, {\n    key: 'appendBuffer',\n    value: function appendBuffer(config, done) {\n      var _this4 = this;\n\n      this.processedAppend_ = true;\n      this.queueCallback_(function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.addEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        _this4.sourceBuffer_.appendBuffer(config.bytes);\n      }, function () {\n        if (config.videoSegmentTimingInfoCallback) {\n          _this4.sourceBuffer_.removeEventListener('videoSegmentTimingInfo', config.videoSegmentTimingInfoCallback);\n        }\n\n        done();\n      });\n    }\n    /**\n     * Indicates what TimeRanges are buffered in the managed SourceBuffer.\n     *\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-buffered\n     */\n\n  }, {\n    key: 'buffered',\n    value: function buffered() {\n      if (!this.sourceBuffer_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceBuffer_.buffered;\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {Number} start where to start the removal\n     * @param {Number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      var _this5 = this;\n\n      var done = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n\n      if (this.processedAppend_) {\n        this.queueCallback_(function () {\n          _this5.logger_('remove [' + start + ' => ' + end + ']');\n\n          _this5.sourceBuffer_.removing = true;\n\n          _this5.sourceBuffer_.remove(start, end);\n        }, done);\n      }\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {Boolean} the updating status of the SourceBuffer\n     */\n\n  }, {\n    key: 'updating',\n    value: function updating() {\n      // we are updating if the sourcebuffer is updating or\n      return !this.sourceBuffer_ || this.sourceBuffer_.updating || // if we have a pending callback that is not our internal noop\n      !!this.pendingCallback_ && this.pendingCallback_ !== noop;\n    }\n    /**\n     * Set/get the timestampoffset on the SourceBuffer\n     *\n     * @return {Number} the timestamp offset\n     */\n\n  }, {\n    key: 'timestampOffset',\n    value: function timestampOffset(offset) {\n      var _this6 = this;\n\n      if (typeof offset !== 'undefined') {\n        this.queueCallback_(function () {\n          _this6.sourceBuffer_.timestampOffset = offset;\n\n          _this6.runCallback_();\n        });\n        this.timestampOffset_ = offset;\n      }\n\n      return this.timestampOffset_;\n    }\n    /**\n     * Queue a callback to run\n     */\n\n  }, {\n    key: 'queueCallback_',\n    value: function queueCallback_(callback, done) {\n      this.callbacks_.push([callback.bind(this), done]);\n      this.runCallback_();\n    }\n    /**\n     * Run a queued callback\n     */\n\n  }, {\n    key: 'runCallback_',\n    value: function runCallback_() {\n      var callbacks = void 0;\n\n      if (!this.updating() && this.callbacks_.length && this.started_) {\n        callbacks = this.callbacks_.shift();\n        this.pendingCallback_ = callbacks[1];\n        callbacks[0]();\n      }\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      var disposeFn = function disposeFn() {\n        if (_this7.sourceBuffer_ && _this7.mediaSource.readyState === 'open') {\n          _this7.sourceBuffer_.abort();\n        }\n\n        _this7.sourceBuffer_.removeEventListener('updateend', disposeFn);\n      };\n\n      this.sourceBuffer_.removeEventListener('updateend', this.onUpdateendCallback_);\n\n      if (this.sourceBuffer_.removing) {\n        this.sourceBuffer_.addEventListener('updateend', disposeFn);\n      } else {\n        disposeFn();\n      }\n    }\n  }]);\n  return SourceUpdater;\n}();\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  BUFFER_LOW_WATER_LINE_RATE: 1\n};\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    segment.key.bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.map.bytes = new Uint8Array(request.response); // Initialize CaptionParser if it hasn't been yet\n\n    if (captionParser && !captionParser.isInitialized()) {\n      captionParser.init();\n    }\n\n    segment.map.timescales = mp4probe.timescale(segment.map.bytes);\n    segment.map.videoTrackIds = mp4probe.videoTrackIds(segment.map.bytes);\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(segment, captionParser, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n    var parsed = void 0;\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    } // stop processing if received empty content\n\n\n    if (response.byteLength === 0) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Empty HLS segment content at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(request.response);\n    } else {\n      segment.bytes = new Uint8Array(request.response);\n    } // This is likely an FMP4 and has the init segment.\n    // Run through the CaptionParser in case there are captions.\n\n\n    if (captionParser && segment.map && segment.map.bytes) {\n      // Initialize CaptionParser if it hasn't been yet\n      if (!captionParser.isInitialized()) {\n        captionParser.init();\n      }\n\n      parsed = captionParser.parse(segment.bytes, segment.map.videoTrackIds, segment.map.timescales);\n\n      if (parsed && parsed.captions) {\n        segment.captionStreams = parsed.captionStreams;\n        segment.fmp4Captions = parsed.captions;\n      }\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(decrypter, segment, doneFn) {\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === segment.requestId) {\n      decrypter.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      segment.bytes = new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength);\n      return doneFn(null, segment);\n    }\n  };\n\n  decrypter.addEventListener('message', decryptionHandler);\n  var keyBytes = void 0;\n\n  if (segment.key.bytes.slice) {\n    keyBytes = segment.key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(segment.key.bytes));\n  } // this is an encrypted segment\n  // incrementally decrypt the segment\n\n\n  decrypter.postMessage(createTransferableMessage({\n    source: segment.requestId,\n    encrypted: segment.encryptedBytes,\n    key: keyBytes,\n    iv: segment.key.iv\n  }), [segment.encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decrypter - a WebWorker interface to AES-128 decryption routines\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(activeXhrs, decrypter, doneFn) {\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      // Keep track of when *all* of the requests have completed\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.encryptedBytes) {\n        return decryptSegment(decrypter, segment, doneFn);\n      } // Otherwise, everything is ready just continue\n\n\n      return doneFn(null, segment);\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(segment, progressFn) {\n  return function (event) {\n    segment.stats = videojs$1.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @returns {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(xhr, xhrOptions, decryptionWorker, captionParser, segment, progressFn, doneFn) {\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion(activeXhrs, decryptionWorker, doneFn); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var keyRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var initSegmentOptions = videojs$1.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse(segment, captionParser, finishProcessingFn);\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs$1.mergeOptions(xhrOptions, {\n    uri: segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse(segment, captionParser, finishProcessingFn);\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress(segment, progressFn));\n  activeXhrs.push(segmentXhr);\n  return function () {\n    return abortAll(activeXhrs);\n  };\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  var result = void 0;\n\n  if (!el) {\n    return '';\n  }\n\n  result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth = void 0;\n  var rightBandwidth = void 0;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {Number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth = void 0;\n  var rightWidth = void 0;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {Number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {Number} playerWidth\n *        Current width of the player element\n * @param {Number} playerHeight\n *        Current height of the player element\n * @param {Boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions) {\n  // convert the playlists to an intermediary representation to make comparisons easier\n  var sortedPlaylistReps = master.playlists.map(function (playlist) {\n    var width = void 0;\n    var height = void 0;\n    var bandwidth = void 0;\n    width = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    height = playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    return _chosenRep ? _chosenRep.playlist : null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList = void 0;\n  var resolutionPlusOneSmallest = void 0;\n  var resolutionPlusOneRep = void 0; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n  return chosenRep ? chosenRep.playlist : null;\n}; // Playlist Selectors\n\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10), parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10), this.limitRenditionByPlayerDimensions);\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {Number} settings.currentTime\n *        The current time of the player\n * @param {Number} settings.bandwidth\n *        Current measured bandwidth\n * @param {Number} settings.duration\n *        Duration of the media\n * @param {Number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {Number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {Number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration$$1 = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration$$1, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of HlsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return parseCodecs(playlist.attributes.CODECS).videoCodec;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStreams the caption streams to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStreams) {\n  for (var trackId in captionStreams) {\n    if (!inbandTextTracks[trackId]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'hls-608'\n      });\n      var track = tech.textTracks().getTrackById(trackId);\n\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[trackId] = track;\n      } else {\n        // Otherwise, create a track with the default `CC#` label and\n        // without a language\n        inbandTextTracks[trackId] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: trackId,\n          label: trackId\n        }, false).track;\n      }\n    }\n  }\n};\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window.WebKitDataCue || window.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    var startTime = caption.startTime;\n    var endTime = caption.endTime;\n\n    if (!inbandTextTracks[track]) {\n      return;\n    }\n\n    startTime += timestampOffset;\n    endTime += timestampOffset;\n    inbandTextTracks[track].addCue(new Cue(startTime, endTime, caption.text));\n  });\n};\n/**\n * @file segment-loader.js\n */\n// in ms\n\n\nvar CHECK_BUFFER_DELAY = 500;\n/**\n * Determines if we should call endOfStream on the media source based\n * on the state of the buffer or if appened segment was the final\n * segment in the playlist.\n *\n * @param {Object} playlist a media playlist object\n * @param {Object} mediaSource the MediaSource object\n * @param {Number} segmentIndex the index of segment we last appended\n * @returns {Boolean} do we need to call endOfStream on the MediaSource\n */\n\nvar detectEndOfStream = function detectEndOfStream(playlist, mediaSource, segmentIndex) {\n  if (!playlist || !mediaSource) {\n    return false;\n  }\n\n  var segments = playlist.segments; // determine a few boolean values to help make the branch below easier\n  // to read\n\n  var appendedLastSegment = segmentIndex === segments.length; // if we've buffered to the end of the video, we need to call endOfStream\n  // so that MediaSources can trigger the `ended` event when it runs out of\n  // buffered data instead of waiting for me\n\n  return playlist.endList && mediaSource.readyState === 'open' && appendedLastSegment;\n};\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n};\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, newSegmentMedia) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !newSegmentMedia) {\n    return null;\n  }\n\n  if (!newSegmentMedia.containsAudio && !newSegmentMedia.containsVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.containsVideo && !newSegmentMedia.containsVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.containsVideo && newSegmentMedia.containsVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {Number} currentTime\n *        The current time of the player\n * @param {Number} targetDuration\n *        The target duration of the current playlist\n * @return {Number}\n *         Time that is safe to remove from the back buffer without interupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable$$1, currentTime, targetDuration) {\n  var removeToTime = void 0;\n\n  if (seekable$$1.length && seekable$$1.start(0) > 0 && seekable$$1.start(0) < currentTime) {\n    // If we have a seekable range use that as the limit for what can be removed safely\n    removeToTime = seekable$$1.start(0);\n  } else {\n    // otherwise remove anything older than 30 seconds before the current play head\n    removeToTime = currentTime - 30;\n  } // Don't allow removing from the buffer within target duration of current time\n  // to avoid the possibility of removing the GOP currently being played which could\n  // cause playback stalls.\n\n\n  return Math.min(removeToTime, currentTime - targetDuration);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var _segmentInfo$segment = segmentInfo.segment,\n      start = _segmentInfo$segment.start,\n      end = _segmentInfo$segment.end,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === undefined ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      timeline = segmentInfo.timeline;\n  return ['appending [' + index + '] of [' + seq + ', ' + (seq + segments.length) + '] from playlist [' + id + ']', '[' + start + ' => ' + end + '] in timeline [' + timeline + ']'].join(' ');\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = function (_videojs$EventTarget) {\n  inherits(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings) {\n    classCallCheck(this, SegmentLoader); // check pre-conditions\n\n    var _this = possibleConstructorReturn(this, (SegmentLoader.__proto__ || Object.getPrototypeOf(SegmentLoader)).call(this));\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.hls_ = settings.hls;\n    _this.loaderType_ = settings.loaderType;\n    _this.startingMedia_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT'; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.mimeType_ = null;\n    _this.sourceUpdater_ = null;\n    _this.xhrOptions_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {}; // Fmp4 CaptionParser\n\n    if (_this.loaderType_ === 'main') {\n      _this.captionParser_ = new CaptionParser();\n    } else {\n      _this.captionParser_ = null;\n    }\n\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n\n    _this.syncController_.on('syncinfoupdate', function () {\n      return _this.trigger('syncinfoupdate');\n    });\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      return _this.ended_ = false;\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger('SegmentLoader[' + _this.loaderType_ + ']');\n    Object.defineProperty(_this, 'state', {\n      get: function get$$1() {\n        return this.state_;\n      },\n      set: function set$$1(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + ' -> ' + newState);\n          this.state_ = newState;\n        }\n      }\n    });\n    return _this;\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n\n\n  createClass(SegmentLoader, [{\n    key: 'resetStats_',\n    value: function resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.dispose();\n      }\n\n      this.resetStats_();\n\n      if (this.captionParser_) {\n        this.captionParser_.reset();\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n  }, {\n    key: 'abort',\n    value: function abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n\n        return;\n      }\n\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n  }, {\n    key: 'abort_',\n    value: function abort_() {\n      if (this.pendingSegment_) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n\n      this.pendingSegment_ = null;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n  }, {\n    key: 'error',\n    value: function error(_error) {\n      if (typeof _error !== 'undefined') {\n        this.error_ = _error;\n      }\n\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n  }, {\n    key: 'endOfStream',\n    value: function endOfStream() {\n      this.ended_ = true;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n  }, {\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.sourceUpdater_) {\n        return videojs$1.createTimeRanges();\n      }\n\n      return this.sourceUpdater_.buffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          timescales: map.timescales,\n          videoTrackIds: map.videoTrackIds\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {Boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n  }, {\n    key: 'segmentKey',\n    value: function segmentKey(key) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!key) {\n        return null;\n      }\n\n      var id = segmentKeyId(key);\n      var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set$$1 && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n\n      var result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && ( // the source updater is created when init_ is called, so either having a\n      // source updater or being in the INIT state with a mimeType is enough\n      // to say we have all the needed configuration to start loading.\n      this.sourceUpdater_ || this.mimeType_ && this.state === 'INIT') && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // not sure if this is the best place for this\n\n\n      this.syncController_.setDateTimeMapping(this.playlist_); // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource_, this.mimeType_, this.loaderType_, this.sourceBufferEmitter_);\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n  }, {\n    key: 'playlist',\n    value: function playlist(newPlaylist) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (!newPlaylist) {\n        return;\n      }\n\n      var oldPlaylist = this.playlist_;\n      var segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n\n      if (!this.hasPlayed_()) {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        };\n      }\n\n      var oldId = null;\n\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n\n      this.logger_('playlist update [' + oldId + ' => ' + (newPlaylist.id || newPlaylist.uri) + ']'); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must \"resync\" the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          this.resyncLoader();\n        } // the rest of this function depends on `oldPlaylist` being defined\n\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_('live window shift [' + mediaSequenceDiff + ']'); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff;\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleUpdateEnd_` after the segment has been successfully appended\n\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff; // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n      }\n\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n  }, {\n    key: 'paused',\n    value: function paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * create/set the following mimetype on the SourceBuffer through a\n     * SourceUpdater\n     *\n     * @param {String} mimeType the mime type string to use\n     * @param {Object} sourceBufferEmitter an event emitter that fires when a source buffer\n     * is added to the media source\n     */\n\n  }, {\n    key: 'mimeType',\n    value: function mimeType(_mimeType, sourceBufferEmitter) {\n      if (this.mimeType_) {\n        return;\n      }\n\n      this.mimeType_ = _mimeType;\n      this.sourceBufferEmitter_ = sourceBufferEmitter; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'resetEverything',\n    value: function resetEverything(done) {\n      this.ended_ = false;\n      this.resetLoader();\n      this.remove(0, this.duration_(), done); // clears fmp4 captions\n\n      if (this.captionParser_) {\n        this.captionParser_.clearAllCaptions();\n      }\n\n      this.trigger('reseteverything');\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n  }, {\n    key: 'resetLoader',\n    value: function resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n  }, {\n    key: 'resyncLoader',\n    value: function resyncLoader() {\n      this.mediaIndex = null;\n      this.syncPoint_ = null;\n      this.abort();\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end, done) {\n      if (this.sourceUpdater_) {\n        this.sourceUpdater_.remove(start, end, done);\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n\n      if (this.inbandTextTracks_) {\n        for (var id in this.inbandTextTracks_) {\n          removeCuesFromTrack(start, end, this.inbandTextTracks_[id]);\n        }\n      }\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBuffer_',\n    value: function monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n  }, {\n    key: 'monitorBufferTick_',\n    value: function monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n\n      if (this.checkBufferTimeout_) {\n        window$1.clearTimeout(this.checkBufferTimeout_);\n      }\n\n      this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      if (this.sourceUpdater_.updating()) {\n        return;\n      }\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex)) {\n        this.endOfStream();\n        return;\n      }\n\n      if (segmentInfo.mediaIndex === this.playlist_.segments.length - 1 && this.mediaSource_.readyState === 'ended' && !this.seeking_()) {\n        return;\n      } // We will need to change timestampOffset of the sourceBuffer if:\n      // - The segment.timeline !== this.currentTimeline\n      //   (we are crossing a discontinuity somehow)\n      // - The \"timestampOffset\" for the start of this segment is less than\n      //   the currently set timestampOffset\n      // Also, clear captions if we are crossing a discontinuity boundary\n      // Previously, we changed the timestampOffset if the start of this segment\n      // is less than the currently set timestampOffset but this isn't wanted\n      // as it can produce bad behavior, especially around long running\n      // live streams\n\n\n      if (segmentInfo.timeline !== this.currentTimeline_) {\n        this.syncController_.reset();\n        segmentInfo.timestampOffset = segmentInfo.startOfSegment;\n\n        if (this.captionParser_) {\n          this.captionParser_.clearAllCaptions();\n        }\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if this segment loader is at the end of it's stream.\n     *\n     * @param {Number} mediaIndex the index of segment we last appended\n     * @param {Object} [playlist=this.playlist_] a media playlist object\n     * @returns {Boolean} true if at end of stream, false otherwise.\n     */\n\n  }, {\n    key: 'isEndOfStream_',\n    value: function isEndOfStream_(mediaIndex) {\n      var playlist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.playlist_;\n      return detectEndOfStream(playlist, this.mediaSource_, mediaIndex) && !this.sourceUpdater_.updating();\n    }\n    /**\n     * Determines what segment request should be made, given current playback\n     * state.\n     *\n     * @param {TimeRanges} buffered - the state of the buffer\n     * @param {Object} playlist - the playlist object to fetch segments from\n     * @param {Number} mediaIndex - the previous mediaIndex fetched or null\n     * @param {Boolean} hasPlayed - a flag indicating whether we have played or not\n     * @param {Number} currentTime - the playback position in seconds\n     * @param {Object} syncPoint - a segment info object that describes the\n     * @returns {Object} a segment request object that describes the segment to load\n     */\n\n  }, {\n    key: 'checkBuffer_',\n    value: function checkBuffer_(buffered, playlist, mediaIndex, hasPlayed, currentTime, syncPoint) {\n      var lastBufferedEnd = 0;\n      var startOfSegment = void 0;\n\n      if (buffered.length) {\n        lastBufferedEnd = buffered.end(buffered.length - 1);\n      }\n\n      var bufferedTime = Math.max(0, lastBufferedEnd - currentTime);\n\n      if (!playlist.segments.length) {\n        return null;\n      } // if there is plenty of content buffered, and the video has\n      // been played before relax for awhile\n\n\n      if (bufferedTime >= this.goalBufferLength_()) {\n        return null;\n      } // if the video has not yet played once, and we already have\n      // one segment downloaded do nothing\n\n\n      if (!hasPlayed && bufferedTime >= 1) {\n        return null;\n      } // When the syncPoint is null, there is no way of determining a good\n      // conservative segment index to fetch from\n      // The best thing to do here is to get the kind of sync-point data by\n      // making a request\n\n\n      if (syncPoint === null) {\n        mediaIndex = this.getSyncSegmentCandidate_(playlist);\n        return this.generateSegmentInfo_(playlist, mediaIndex, null, true);\n      } // Under normal playback conditions fetching is a simple walk forward\n\n\n      if (mediaIndex !== null) {\n        var segment = playlist.segments[mediaIndex];\n\n        if (segment && segment.end) {\n          startOfSegment = segment.end;\n        } else {\n          startOfSegment = lastBufferedEnd;\n        }\n\n        return this.generateSegmentInfo_(playlist, mediaIndex + 1, startOfSegment, false);\n      } // There is a sync-point but the lack of a mediaIndex indicates that\n      // we need to make a good conservative guess about which segment to\n      // fetch\n\n\n      if (this.fetchAtBuffer_) {\n        // Find the segment containing the end of the buffer\n        var mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, lastBufferedEnd, syncPoint.segmentIndex, syncPoint.time);\n        mediaIndex = mediaSourceInfo.mediaIndex;\n        startOfSegment = mediaSourceInfo.startTime;\n      } else {\n        // Find the segment containing currentTime\n        var _mediaSourceInfo = Playlist.getMediaInfoForTime(playlist, currentTime, syncPoint.segmentIndex, syncPoint.time);\n\n        mediaIndex = _mediaSourceInfo.mediaIndex;\n        startOfSegment = _mediaSourceInfo.startTime;\n      }\n\n      return this.generateSegmentInfo_(playlist, mediaIndex, startOfSegment, false);\n    }\n    /**\n     * The segment loader has no recourse except to fetch a segment in the\n     * current playlist and use the internal timestamps in that segment to\n     * generate a syncPoint. This function returns a good candidate index\n     * for that process.\n     *\n     * @param {Object} playlist - the playlist object to look for a\n     * @returns {Number} An index of a segment from the playlist to load\n     */\n\n  }, {\n    key: 'getSyncSegmentCandidate_',\n    value: function getSyncSegmentCandidate_(playlist) {\n      var _this2 = this;\n\n      if (this.currentTimeline_ === -1) {\n        return 0;\n      }\n\n      var segmentIndexArray = playlist.segments.map(function (s, i) {\n        return {\n          timeline: s.timeline,\n          segmentIndex: i\n        };\n      }).filter(function (s) {\n        return s.timeline === _this2.currentTimeline_;\n      });\n\n      if (segmentIndexArray.length) {\n        return segmentIndexArray[Math.min(segmentIndexArray.length - 1, 1)].segmentIndex;\n      }\n\n      return Math.max(playlist.segments.length - 1, 0);\n    }\n  }, {\n    key: 'generateSegmentInfo_',\n    value: function generateSegmentInfo_(playlist, mediaIndex, startOfSegment, isSyncRequest) {\n      if (mediaIndex < 0 || mediaIndex >= playlist.segments.length) {\n        return null;\n      }\n\n      var segment = playlist.segments[mediaIndex];\n      return {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex: mediaIndex,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest: isSyncRequest,\n        startOfSegment: startOfSegment,\n        // the segment's playlist\n        playlist: playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment: segment\n      };\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @return {Boolean} True if the request was aborted, false otherwise\n     * @private\n     */\n\n  }, {\n    key: 'abortRequestEarly_',\n    value: function abortRequestEarly_(stats) {\n      if (this.hls_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return false;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return false;\n      }\n\n      var currentTime = this.currentTime_();\n      var measuredBandwidth = stats.bandwidth;\n      var segmentDuration = this.pendingSegment_.duration;\n      var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      var timeUntilRebuffer$$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.hls_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$$1) {\n        return false;\n      }\n\n      var switchCandidate = minRebufferMaxBandwidthSelector({\n        master: this.hls_.playlists.master,\n        currentTime: currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration: segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n\n      if (!switchCandidate) {\n        return;\n      }\n\n      var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$$1;\n      var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return false;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.abort();\n      this.trigger('earlyabort');\n      return true;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n  }, {\n    key: 'handleProgress_',\n    value: function handleProgress_(event, simpleSegment) {\n      if (!this.pendingSegment_ || simpleSegment.requestId !== this.pendingSegment_.requestId || this.abortRequestEarly_(simpleSegment.stats)) {\n        return;\n      }\n\n      this.trigger('progress');\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n  }, {\n    key: 'loadSegment_',\n    value: function loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      segmentInfo.abortRequests = mediaSegmentRequest(this.hls_.xhr, this.xhrOptions_, this.decrypter_, this.captionParser_, this.createSimplifiedSegmentObj_(segmentInfo), // progress callback\n      this.handleProgress_.bind(this), this.segmentRequestFinished_.bind(this));\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n  }, {\n    key: 'trimBackBuffer_',\n    value: function trimBackBuffer_(segmentInfo) {\n      var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @returns {Object} a simplified segment object copy\n     */\n\n  }, {\n    key: 'createSimplifiedSegmentObj_',\n    value: function createSimplifiedSegmentObj_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var simpleSegment = {\n        resolvedUri: segment.resolvedUri,\n        byterange: segment.byterange,\n        requestId: segmentInfo.requestId\n      };\n\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n\n      if (segment.map) {\n        simpleSegment.map = this.initSegment(segment.map);\n      }\n\n      return simpleSegment;\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n  }, {\n    key: 'segmentRequestFinished_',\n    value: function segmentRequestFinished_(error, simpleSegment) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n\n      if (simpleSegment.stats) {\n        this.mediaBytesTransferred += simpleSegment.stats.bytesReceived;\n        this.mediaTransferDuration += simpleSegment.stats.roundTripTime;\n      } // The request was aborted and the SegmentLoader has already been reset\n\n\n      if (!this.pendingSegment_) {\n        this.mediaRequestsAborted += 1;\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // the requests were aborted just record the aborted stat and exit\n        // this is not a true error condition and nothing corrective needs\n        // to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n          return;\n        }\n\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.mediaRequestsTimedout += 1;\n          this.bandwidth = 1;\n          this.roundTrip = NaN;\n          this.trigger('bandwidthupdate');\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to blacklist the current playlist\n\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      } // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n\n      this.bandwidth = simpleSegment.stats.bandwidth;\n      this.roundTrip = simpleSegment.stats.roundTripTime; // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegment(simpleSegment.map, true);\n      } // if this request included a segment key, save that data in the cache\n\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n\n      this.processSegmentResponse_(simpleSegment);\n    }\n    /**\n     * Move any important data from the simplified segment object\n     * back to the real segment object for future phases\n     *\n     * @private\n     */\n\n  }, {\n    key: 'processSegmentResponse_',\n    value: function processSegmentResponse_(simpleSegment) {\n      var segmentInfo = this.pendingSegment_;\n      segmentInfo.bytes = simpleSegment.bytes;\n\n      if (simpleSegment.map) {\n        segmentInfo.segment.map.bytes = simpleSegment.map.bytes;\n      }\n\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests; // This has fmp4 captions, add them to text tracks\n\n      if (simpleSegment.fmp4Captions) {\n        createCaptionsTrackIfNotExists(this.inbandTextTracks_, this.hls_.tech_, simpleSegment.captionStreams);\n        addCaptionData({\n          inbandTextTracks: this.inbandTextTracks_,\n          captionArray: simpleSegment.fmp4Captions,\n          // fmp4s will not have a timestamp offset\n          timestampOffset: 0\n        }); // Reset stored captions since we added parsed\n        // captions to a text track at this point\n\n        if (this.captionParser_) {\n          this.captionParser_.clearParsedCaptions();\n        }\n      }\n\n      this.handleSegment_();\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var timingInfo = this.syncController_.probeSegmentInfo(segmentInfo); // When we have our first timing info, determine what media types this loader is\n      // dealing with. Although we're maintaining extra state, it helps to preserve the\n      // separation of segment loader from the actual source buffers.\n\n      if (typeof this.startingMedia_ === 'undefined' && timingInfo && ( // Guard against cases where we're not getting timing info at all until we are\n      // certain that all streams will provide it.\n      timingInfo.containsAudio || timingInfo.containsVideo)) {\n        this.startingMedia_ = {\n          containsAudio: timingInfo.containsAudio,\n          containsVideo: timingInfo.containsVideo\n        };\n      }\n\n      var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.startingMedia_, timingInfo);\n\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          blacklistDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      }\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      if (segmentInfo.timestampOffset !== null && segmentInfo.timestampOffset !== this.sourceUpdater_.timestampOffset()) {\n        this.sourceUpdater_.timestampOffset(segmentInfo.timestampOffset); // fired when a timestamp offset is set in HLS (can also identify discontinuities)\n\n        this.trigger('timestampoffset');\n      }\n\n      var timelineMapping = this.syncController_.mappingForTimeline(segmentInfo.timeline);\n\n      if (timelineMapping !== null) {\n        this.trigger({\n          type: 'segmenttimemapping',\n          mapping: timelineMapping\n        });\n      }\n\n      this.state = 'APPENDING'; // if the media initialization segment is changing, append it\n      // before the content segment\n\n      if (segment.map) {\n        var initId = initSegmentId(segment.map);\n\n        if (!this.activeInitSegmentId_ || this.activeInitSegmentId_ !== initId) {\n          var initSegment = this.initSegment(segment.map);\n          this.sourceUpdater_.appendBuffer({\n            bytes: initSegment.bytes\n          }, function () {\n            _this3.activeInitSegmentId_ = initId;\n          });\n        }\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n\n      this.logger_(segmentInfoString(segmentInfo));\n      this.sourceUpdater_.appendBuffer({\n        bytes: segmentInfo.bytes,\n        videoSegmentTimingInfoCallback: this.handleVideoSegmentTimingInfo_.bind(this, segmentInfo.requestId)\n      }, this.handleUpdateEnd_.bind(this));\n    }\n  }, {\n    key: 'handleVideoSegmentTimingInfo_',\n    value: function handleVideoSegmentTimingInfo_(requestId, event) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n\n      var segment = this.pendingSegment_.segment;\n\n      if (!segment.videoTimingInfo) {\n        segment.videoTimingInfo = {};\n      }\n\n      segment.videoTimingInfo.transmuxerPrependedSeconds = event.videoSegmentTimingInfo.prependedContentDuration || 0;\n      segment.videoTimingInfo.transmuxedPresentationStart = event.videoSegmentTimingInfo.start.presentation;\n      segment.videoTimingInfo.transmuxedPresentationEnd = event.videoSegmentTimingInfo.end.presentation; // mainly used as a reference for debugging\n\n      segment.videoTimingInfo.baseMediaDecodeTime = event.videoSegmentTimingInfo.baseMediaDecodeTime;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleUpdateEnd_',\n    value: function handleUpdateEnd_() {\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n\n        return;\n      }\n\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment;\n      var isWalkingForward = this.mediaIndex !== null;\n      this.pendingSegment_ = null;\n      this.recordThroughput_(segmentInfo);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.state = 'READY';\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.fetchAtBuffer_ = true;\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate'); // If we previously appended a segment that ends more than 3 targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3) {\n        this.resetEverything();\n        return;\n      } // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n\n      this.trigger('progress'); // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex + 1, segmentInfo.playlist)) {\n        this.endOfStream();\n      }\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n  }, {\n    key: 'recordThroughput_',\n    value: function recordThroughput_(segmentInfo) {\n      var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n  }, {\n    key: 'addSegmentMetadataCue_',\n    value: function addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n\n      var segment = segmentInfo.segment;\n      var start = segment.start;\n      var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n      var value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.uri,\n        start: start,\n        end: end\n      };\n      var data = JSON.stringify(value);\n      var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }]);\n  return SegmentLoader;\n}(videojs$1.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n/**\n * @file vtt-segment-loader.js\n */\n\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char2) {\n  return _char2.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = function (_SegmentLoader) {\n  inherits(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VTTSegmentLoader); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    var _this = possibleConstructorReturn(this, (VTTSegmentLoader.__proto__ || Object.getPrototypeOf(VTTSegmentLoader)).call(this, settings, options));\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    return _this;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n\n\n  createClass(VTTSegmentLoader, [{\n    key: 'buffered_',\n    value: function buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues.length) {\n        return videojs$1.createTimeRanges();\n      }\n\n      var cues = this.subtitlesTrack_.cues;\n      var start = cues[0].startTime;\n      var end = cues[cues.length - 1].startTime;\n      return videojs$1.createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {Boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n  }, {\n    key: 'initSegment',\n    value: function initSegment(map) {\n      var set$$1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!map) {\n        return null;\n      }\n\n      var id = initSegmentId(map);\n      var storedMap = this.initSegments_[id];\n\n      if (set$$1 && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        var combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {Boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n  }, {\n    key: 'couldBeginLoading_',\n    value: function couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'init_',\n    value: function init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n  }, {\n    key: 'track',\n    value: function track(_track) {\n      if (typeof _track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n\n      this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     * @param {Number} start - the start time of the region to remove from the buffer\n     * @param {Number} end - the end time of the region to remove from the buffer\n     */\n\n  }, {\n    key: 'remove',\n    value: function remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fillBuffer_',\n    value: function fillBuffer_() {\n      var _this2 = this;\n\n      if (!this.syncPoint_) {\n        this.syncPoint_ = this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      } // see if we need to begin loading immediately\n\n\n      var segmentInfo = this.checkBuffer_(this.buffered_(), this.playlist_, this.mediaIndex, this.hasPlayed_(), this.currentTime_(), this.syncPoint_);\n      segmentInfo = this.skipEmptySegments_(segmentInfo);\n\n      if (!segmentInfo) {\n        return;\n      }\n\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        var checkTimestampOffset = function checkTimestampOffset() {\n          _this2.state = 'READY';\n\n          if (!_this2.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            _this2.monitorBuffer_();\n          }\n        };\n\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n  }, {\n    key: 'skipEmptySegments_',\n    value: function skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        segmentInfo = this.generateSegmentInfo_(segmentInfo.playlist, segmentInfo.mediaIndex + 1, segmentInfo.startOfSegment + segmentInfo.duration, segmentInfo.isSyncRequest);\n      }\n\n      return segmentInfo;\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSegment_',\n    value: function handleSegment_() {\n      var _this3 = this;\n\n      if (!this.pendingSegment_ || !this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n\n      this.state = 'APPENDING';\n      var segmentInfo = this.pendingSegment_;\n      var segment = segmentInfo.segment; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        var loadHandler = void 0;\n\n        var errorHandler = function errorHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n          _this3.error({\n            message: 'Error loading vtt.js'\n          });\n\n          _this3.state = 'READY';\n\n          _this3.pause();\n\n          _this3.trigger('error');\n        };\n\n        loadHandler = function loadHandler() {\n          _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n          _this3.handleSegment_();\n        };\n\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n\n      segment.requested = true;\n\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.error({\n          message: e.message\n        });\n        this.state = 'READY';\n        this.pause();\n        return this.trigger('error');\n      }\n\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration;\n\n      if (segmentInfo.cues.length) {\n        // remove any overlapping cues to prevent doubling\n        this.remove(segmentInfo.cues[0].endTime, segmentInfo.cues[segmentInfo.cues.length - 1].endTime);\n      }\n\n      segmentInfo.cues.forEach(function (cue) {\n        _this3.subtitlesTrack_.addCue(cue);\n      });\n      this.handleUpdateEnd_();\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n  }, {\n    key: 'parseVTTCues_',\n    value: function parseVTTCues_(segmentInfo) {\n      var decoder = void 0;\n      var decodeBytesToString = false;\n\n      if (typeof window$1.TextDecoder === 'function') {\n        decoder = new window$1.TextDecoder('utf8');\n      } else {\n        decoder = window$1.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n\n      var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n      parser.ontimestampmap = function (map) {\n        return segmentInfo.timestampmap = map;\n      };\n\n      parser.onparsingerror = function (error) {\n        videojs$1.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n\n      if (segmentInfo.segment.map) {\n        var mapData = segmentInfo.segment.map.bytes;\n\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n\n        parser.parse(mapData);\n      }\n\n      var segmentData = segmentInfo.bytes;\n\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n  }, {\n    key: 'updateTimeMapping_',\n    value: function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      var segment = segmentInfo.segment;\n\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n\n      var timestampmap = segmentInfo.timestampmap;\n      var diff = timestampmap.MPEGTS / 90000 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(function (cue) {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n\n      if (!playlist.syncInfo) {\n        var firstStart = segmentInfo.cues[0].startTime;\n        var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }]);\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track) {\n  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue = void 0;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        var adOffset = void 0;\n        var adTotal = void 0; // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat);\n\n        var _segment$cueOutCont$s2 = slicedToArray(_segment$cueOutCont$s, 2);\n\n        adOffset = _segment$cueOutCont$s2[0];\n        adTotal = _segment$cueOutCont$s2[1];\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n};\n/**\n * @file sync-controller.js\n */\n\n\nvar tsprobe = tsInspector.inspect;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (duration$$1 !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (!syncController.datetimeToDisplayTime) {\n      return null;\n    }\n\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.dateTimeObject) {\n        var segmentTime = segment.dateTimeObject.getTime() / 1000;\n        var segmentStart = segmentTime + syncController.datetimeToDisplayTime;\n        var distance = Math.abs(currentTime - segmentStart); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n\n        lastDistance = distance;\n        syncPoint = {\n          time: segmentStart,\n          segmentIndex: i\n        };\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var segments = playlist.segments || [];\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n\n      if (segment.timeline === currentTimeline && typeof segment.start !== 'undefined') {\n        var distance = Math.abs(currentTime - segment.start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: segment.start,\n            segmentIndex: i\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration$$1, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = function (_videojs$EventTarget) {\n  inherits(SyncController, _videojs$EventTarget);\n\n  function SyncController() {\n    classCallCheck(this, SyncController); // Segment Loader state variables...\n    // ...for synching across variants\n\n    var _this = possibleConstructorReturn(this, (SyncController.__proto__ || Object.getPrototypeOf(SyncController)).call(this));\n\n    _this.inspectCache_ = undefined; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.datetimeToDisplayTime = null;\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {Number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {Number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @returns {Object}\n   *          A sync-point object\n   */\n\n\n  createClass(SyncController, [{\n    key: 'getSyncPoint',\n    value: function getSyncPoint(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = this.runStrategies_(playlist, duration$$1, currentTimeline, currentTime);\n\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @returns {Number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n  }, {\n    key: 'getExpiredTime',\n    value: function getExpiredTime(playlist, duration$$1) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n\n      var syncPoints = this.runStrategies_(playlist, duration$$1, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n\n      var syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n\n      return Math.abs(syncPoint.time + sumDurations(playlist, syncPoint.segmentIndex, 0));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {Number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {Number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @returns {Array}\n     *          A list of sync-point objects\n     */\n\n  }, {\n    key: 'runStrategies_',\n    value: function runStrategies_(playlist, duration$$1, currentTimeline, currentTime) {\n      var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (var i = 0; i < syncPointStrategies.length; i++) {\n        var strategy = syncPointStrategies[i];\n        var syncPoint = strategy.run(this, playlist, duration$$1, currentTimeline, currentTime);\n\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint: syncPoint\n          });\n        }\n      }\n\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {String} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {Number} target.value\n     *        The value to target for the specified key.\n     * @returns {Object}\n     *          The sync-point nearest the target\n     */\n\n  }, {\n    key: 'selectSyncPoint_',\n    value: function selectSyncPoint_(syncPoints, target) {\n      var bestSyncPoint = syncPoints[0].syncPoint;\n      var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      var bestStrategy = syncPoints[0].strategy;\n\n      for (var i = 1; i < syncPoints.length; i++) {\n        var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n\n      this.logger_('syncPoint for [' + target.key + ': ' + target.value + '] chosen with strategy' + (' [' + bestStrategy + ']: [time:' + bestSyncPoint.time + ',') + (' segmentIndex:' + bestSyncPoint.segmentIndex + ']'));\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n  }, {\n    key: 'saveExpiredSegmentInfo',\n    value: function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n        var lastRemovedSegment = oldPlaylist.segments[i];\n\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_('playlist refresh sync: [time:' + newPlaylist.syncInfo.time + ',' + (' mediaSequence: ' + newPlaylist.syncInfo.mediaSequence + ']'));\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should\n     * only ever happen once at the start of playback.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n  }, {\n    key: 'setDateTimeMapping',\n    value: function setDateTimeMapping(playlist) {\n      if (!this.datetimeToDisplayTime && playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        var playlistTimestamp = playlist.segments[0].dateTimeObject.getTime() / 1000;\n        this.datetimeToDisplayTime = -playlistTimestamp;\n      }\n    }\n    /**\n     * Reset the state of the inspection cache when we do a rendition\n     * switch\n     */\n\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.inspectCache_ = undefined;\n    }\n    /**\n     * Probe or inspect a fmp4 or an mpeg2-ts segment to determine the start\n     * and end of the segment in it's internal \"media time\". Used to generate\n     * mappings from that internal \"media time\" to the display time that is\n     * shown on the player.\n     *\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'probeSegmentInfo',\n    value: function probeSegmentInfo(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var playlist = segmentInfo.playlist;\n      var timingInfo = void 0;\n\n      if (segment.map) {\n        timingInfo = this.probeMp4Segment_(segmentInfo);\n      } else {\n        timingInfo = this.probeTsSegment_(segmentInfo);\n      }\n\n      if (timingInfo) {\n        if (this.calculateSegmentTimeMapping_(segmentInfo, timingInfo)) {\n          this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n          // now with segment timing information\n\n          if (!playlist.syncInfo) {\n            playlist.syncInfo = {\n              mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n              time: segment.start\n            };\n          }\n        }\n      }\n\n      return timingInfo;\n    }\n    /**\n     * Probe an fmp4 or an mpeg2-ts segment to determine the start of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeMp4Segment_',\n    value: function probeMp4Segment_(segmentInfo) {\n      var segment = segmentInfo.segment;\n      var timescales = mp4probe.timescale(segment.map.bytes);\n      var startTime = mp4probe.startTime(timescales, segmentInfo.bytes);\n\n      if (segmentInfo.timestampOffset !== null) {\n        segmentInfo.timestampOffset -= startTime;\n      }\n\n      return {\n        start: startTime,\n        end: startTime + segment.duration\n      };\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start and end of the segment\n     * in it's internal \"media time\".\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     * @return {object} The start and end time of the current segment in \"media time\"\n     */\n\n  }, {\n    key: 'probeTsSegment_',\n    value: function probeTsSegment_(segmentInfo) {\n      var timeInfo = tsprobe(segmentInfo.bytes, this.inspectCache_);\n      var segmentStartTime = void 0;\n      var segmentEndTime = void 0;\n\n      if (!timeInfo) {\n        return null;\n      }\n\n      if (timeInfo.video && timeInfo.video.length === 2) {\n        this.inspectCache_ = timeInfo.video[1].dts;\n        segmentStartTime = timeInfo.video[0].dtsTime;\n        segmentEndTime = timeInfo.video[1].dtsTime;\n      } else if (timeInfo.audio && timeInfo.audio.length === 2) {\n        this.inspectCache_ = timeInfo.audio[1].dts;\n        segmentStartTime = timeInfo.audio[0].dtsTime;\n        segmentEndTime = timeInfo.audio[1].dtsTime;\n      }\n\n      var probedInfo = {\n        start: segmentStartTime,\n        end: segmentEndTime,\n        containsVideo: timeInfo.video && timeInfo.video.length === 2,\n        containsAudio: timeInfo.audio && timeInfo.audio.length === 2\n      };\n      return probedInfo;\n    }\n  }, {\n    key: 'timestampOffsetForTimeline',\n    value: function timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].time;\n    }\n  }, {\n    key: 'mappingForTimeline',\n    value: function mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @returns {Boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n  }, {\n    key: 'calculateSegmentTimeMapping_',\n    value: function calculateSegmentTimeMapping_(segmentInfo, timingInfo) {\n      var segment = segmentInfo.segment;\n      var mappingObj = this.timelines[segmentInfo.timeline];\n\n      if (segmentInfo.timestampOffset !== null) {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_('time mapping for timeline ' + segmentInfo.timeline + ': ' + ('[time: ' + mappingObj.time + '] [mapping: ' + mappingObj.mapping + ']'));\n        segment.start = segmentInfo.startOfSegment;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        segment.start = timingInfo.start + mappingObj.mapping;\n        segment.end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n  }, {\n    key: 'saveDiscontinuitySyncInfo_',\n    value: function saveDiscontinuitySyncInfo_(segmentInfo) {\n      var playlist = segmentInfo.playlist;\n      var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n          var segmentIndex = playlist.discontinuityStarts[i];\n          var discontinuity = playlist.discontinuitySequence + i + 1;\n          var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          var accuracy = Math.abs(mediaIndexDiff);\n\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            var time = void 0;\n\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations(playlist, segmentInfo.mediaIndex, segmentIndex);\n            } else {\n              time = segment.end + sumDurations(playlist, segmentInfo.mediaIndex + 1, segmentIndex);\n            }\n\n            this.discontinuities[discontinuity] = {\n              time: time,\n              accuracy: accuracy\n            };\n          }\n        }\n      }\n    }\n  }]);\n  return SyncController;\n}(videojs$1.EventTarget);\n\nvar Decrypter$1 = new shimWorker(\"./decrypter-worker.worker.js\", function (window, document$$1) {\n  var self = this;\n\n  var decrypterWorker = function () {\n    /*\n     * pkcs7.pad\n     * https://github.com/brightcove/pkcs7\n     *\n     * Copyright (c) 2014 Brightcove\n     * Licensed under the apache2 license.\n     */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n\n    var classCallCheck = function classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var createClass = function () {\n      function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n          var descriptor = props[i];\n          descriptor.enumerable = descriptor.enumerable || false;\n          descriptor.configurable = true;\n          if (\"value\" in descriptor) descriptor.writable = true;\n          Object.defineProperty(target, descriptor.key, descriptor);\n        }\n      }\n\n      return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) defineProperties(Constructor, staticProps);\n        return Constructor;\n      };\n    }();\n\n    var inherits = function inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n\n    var precompute = function precompute() {\n      var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      var encTable = tables[0];\n      var decTable = tables[1];\n      var sbox = encTable[4];\n      var sboxInv = decTable[4];\n      var i = void 0;\n      var x = void 0;\n      var xInv = void 0;\n      var d = [];\n      var th = [];\n      var x2 = void 0;\n      var x4 = void 0;\n      var x8 = void 0;\n      var s = void 0;\n      var tEnc = void 0;\n      var tDec = void 0; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n\n      return tables;\n    };\n\n    var aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    var AES = function () {\n      function AES(key) {\n        classCallCheck(this, AES);\n        /**\n         * The expanded S-box and inverse S-box tables. These will be computed\n         * on the client so that we don't have to send them down the wire.\n         *\n         * There are two tables, _tables[0] is for encryption and\n         * _tables[1] is for decryption.\n         *\n         * The first 4 sub-tables are the expanded S-box with MixColumns. The\n         * last (_tables[01][4]) is the S-box itself.\n         *\n         * @private\n         */\n        // if we have yet to precompute the S-box tables\n        // do so now\n\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        var i = void 0;\n        var j = void 0;\n        var tmp = void 0;\n        var encKey = void 0;\n        var decKey = void 0;\n        var sbox = this._tables[0][4];\n        var decTable = this._tables[1];\n        var keyLen = key.length;\n        var rcon = 1;\n\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n\n        encKey = key.slice(0);\n        decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {Number} encrypted0 the first word to decrypt\n       * @param {Number} encrypted1 the second word to decrypt\n       * @param {Number} encrypted2 the third word to decrypt\n       * @param {Number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {Number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n\n      AES.prototype.decrypt = function decrypt$$1(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        var a = encrypted0 ^ key[0];\n        var b = encrypted3 ^ key[1];\n        var c = encrypted2 ^ key[2];\n        var d = encrypted1 ^ key[3];\n        var a2 = void 0;\n        var b2 = void 0;\n        var c2 = void 0; // key.length === 2 ?\n\n        var nInnerRounds = key.length / 4 - 2;\n        var i = void 0;\n        var kIndex = 4;\n        var table = this._tables[1]; // load up the tables\n\n        var table0 = table[0];\n        var table1 = table[1];\n        var table2 = table[2];\n        var table3 = table[3];\n        var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      };\n\n      return AES;\n    }();\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n\n    var Stream = function () {\n      function Stream() {\n        classCallCheck(this, Stream);\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n\n      Stream.prototype.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {String} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {Boolean} if we could turn it off or not\n       */\n\n\n      Stream.prototype.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n\n        var index = this.listeners[type].indexOf(listener);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {String} type the event name\n       */\n\n\n      Stream.prototype.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      Stream.prototype.dispose = function dispose() {\n        this.listeners = {};\n      };\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */\n\n\n      Stream.prototype.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n\n      return Stream;\n    }();\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTiemout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n\n    var AsyncStream$$1 = function (_Stream) {\n      inherits(AsyncStream$$1, _Stream);\n\n      function AsyncStream$$1() {\n        classCallCheck(this, AsyncStream$$1);\n\n        var _this = possibleConstructorReturn(this, _Stream.call(this, Stream));\n\n        _this.jobs = [];\n        _this.delay = 1;\n        _this.timeout_ = null;\n        return _this;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n\n      AsyncStream$$1.prototype.processJob_ = function processJob_() {\n        this.jobs.shift()();\n\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      };\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n\n      AsyncStream$$1.prototype.push = function push(job) {\n        this.jobs.push(job);\n\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      };\n\n      return AsyncStream$$1;\n    }(Stream);\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n\n    var ntoh = function ntoh(word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n\n    var decrypt$$1 = function decrypt$$1(encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      var init0 = void 0;\n      var init1 = void 0;\n      var init2 = void 0;\n      var init3 = void 0;\n      var encrypted0 = void 0;\n      var encrypted1 = void 0;\n      var encrypted2 = void 0;\n      var encrypted3 = void 0; // iteration variable\n\n      var wordIx = void 0; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n\n    var Decrypter$$1 = function () {\n      function Decrypter$$1(encrypted, key, initVector, done) {\n        classCallCheck(this, Decrypter$$1);\n        var step = Decrypter$$1.STEP;\n        var encrypted32 = new Int32Array(encrypted.buffer);\n        var decrypted = new Uint8Array(encrypted.byteLength);\n        var i = 0;\n        this.asyncStream_ = new AsyncStream$$1(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {Number} the value of step 32000\n       */\n\n      /**\n       * @private\n       */\n\n\n      Decrypter$$1.prototype.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          var bytes = decrypt$$1(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      };\n\n      createClass(Decrypter$$1, null, [{\n        key: 'STEP',\n        get: function get$$1() {\n          // 4 * 8000;\n          return 32000;\n        }\n      }]);\n      return Decrypter$$1;\n    }();\n    /**\n     * @file bin-utils.js\n     */\n\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n\n    var createTransferableMessage = function createTransferableMessage(message) {\n      var transferable = {};\n      Object.keys(message).forEach(function (key) {\n        var value = message[key];\n\n        if (ArrayBuffer.isView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self\n     *        the scope for the web worker\n     */\n\n\n    var DecrypterWorker = function DecrypterWorker(self) {\n      self.onmessage = function (event) {\n        var data = event.data;\n        var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n        var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n        var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n        /* eslint-disable no-new, handle-callback-err */\n\n        new Decrypter$$1(encrypted, key, iv, function (err, bytes) {\n          self.postMessage(createTransferableMessage({\n            source: data.source,\n            decrypted: bytes\n          }), [bytes.buffer]);\n        });\n        /* eslint-enable */\n      };\n    };\n\n    var decrypterWorker = new DecrypterWorker(self);\n    return decrypterWorker;\n  }();\n});\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.activeGroup(activeTrack);\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      // when switching from demuxed audio/video to muxed audio/video (noted by no playlist\n      // loader for the audio group), we want to do a destructive reset of the main segment\n      // loader and not restart the audio loaders\n      mainSegmentLoader.resetEverything();\n      return;\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs$1.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs$1.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader; // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      } // List of playlists that have an AUDIO attribute value matching the current\n      // group ID\n\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs$1.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        hls = settings.hls,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, hls, requestOptions);\n        } else if (sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], hls, requestOptions, masterPlaylistLoader);\n        }\n\n        properties = videojs$1.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // We only support CEA608 captions for now, so ignore anything that\n        // doesn't use a CCx INSTREAM-ID\n\n        if (!properties.instreamId.match(/CC\\d/)) {\n          continue;\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs$1.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: properties.instreamId,\n            kind: 'captions',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {String} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null;\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    variants = variants || groups.main;\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {SegmentLoader} settings.segmentLoaders.AUDIO\n *        Audio segment loader\n * @param {SegmentLoader} settings.segmentLoaders.SUBTITLES\n *        Subtitle segment loader\n * @param {SegmentLoader} settings.segmentLoaders.main\n *        Main segment loader\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {HlsHandler} settings.hls\n *        HLS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      hls = settings.hls; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n  var groupId = (audioGroup.filter(function (group) {\n    return group[\"default\"];\n  })[0] || audioGroup[0]).id;\n  mediaTypes.AUDIO.tracks[groupId].enabled = true;\n  mediaTypes.AUDIO.onTrackChanged();\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  hls.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop\n    };\n  });\n  return mediaTypes;\n};\n/**\n * @file master-playlist-controller.js\n */\n\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Hls = void 0; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = function (_videojs$EventTarget) {\n  inherits(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    classCallCheck(this, MasterPlaylistController);\n\n    var _this = possibleConstructorReturn(this, (MasterPlaylistController.__proto__ || Object.getPrototypeOf(MasterPlaylistController)).call(this));\n\n    var url = options.url,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externHls = options.externHls,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        seekTo = options.seekTo,\n        cacheEncryptionKeys = options.cacheEncryptionKeys;\n\n    if (!url) {\n      throw new Error('A non-empty playlist URL is required');\n    }\n\n    Hls = externHls;\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.hls_ = tech.hls;\n    _this.seekTo_ = seekTo;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      timeout: null\n    };\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new videojs$1.MediaSource(); // load the media source into the player\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_.bind(_this));\n\n    _this.seekable_ = videojs$1.createTimeRanges();\n\n    _this.hasPlayed_ = function () {\n      return false;\n    };\n\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter$1();\n    _this.inbandTextTracks_ = {};\n    var segmentLoaderSettings = {\n      hls: _this.hls_,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable$$1() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration$$1() {\n        return _this.mediaSource.duration;\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_();\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys\n    };\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(url, _this.hls_, _this.requestOptions_) : new PlaylistLoader(url, _this.hls_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs$1.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt'\n    }), options);\n\n    _this.setupSegmentLoaderListeners_(); // Create SegmentLoader stat-getters\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_this, stat);\n    });\n    _this.logger_ = logger('MPC');\n\n    _this.masterPlaylistLoader_.load();\n\n    return _this;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n\n\n  createClass(MasterPlaylistController, [{\n    key: 'setupMasterPlaylistLoaderListeners_',\n    value: function setupMasterPlaylistLoaderListeners_() {\n      var _this2 = this;\n\n      this.masterPlaylistLoader_.on('loadedmetadata', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n\n        if (media.endList && _this2.tech_.preload() !== 'none') {\n          _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n          _this2.mainSegmentLoader_.load();\n        }\n\n        setupMediaGroups({\n          sourceType: _this2.sourceType_,\n          segmentLoaders: {\n            AUDIO: _this2.audioSegmentLoader_,\n            SUBTITLES: _this2.subtitleSegmentLoader_,\n            main: _this2.mainSegmentLoader_\n          },\n          tech: _this2.tech_,\n          requestOptions: _this2.requestOptions_,\n          masterPlaylistLoader: _this2.masterPlaylistLoader_,\n          hls: _this2.hls_,\n          master: _this2.master(),\n          mediaTypes: _this2.mediaTypes_,\n          blacklistCurrentPlaylist: _this2.blacklistCurrentPlaylist.bind(_this2)\n        });\n\n        _this2.triggerPresenceUsage_(_this2.master(), media);\n\n        try {\n          _this2.setupSourceBuffers_();\n        } catch (e) {\n          videojs$1.log.warn('Failed to create SourceBuffers', e);\n          return _this2.mediaSource.endOfStream('decode');\n        }\n\n        _this2.setupFirstPlay();\n\n        if (!_this2.mediaTypes_.AUDIO.activePlaylistLoader || _this2.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          _this2.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          _this2.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n            _this2.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.masterPlaylistLoader_.on('loadedplaylist', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        if (!updatedPlaylist) {\n          // blacklist any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          _this2.excludeUnsupportedVariants_();\n\n          var selectedMedia = void 0;\n\n          if (_this2.enableLowInitialPlaylist) {\n            selectedMedia = _this2.selectInitialPlaylist();\n          }\n\n          if (!selectedMedia) {\n            selectedMedia = _this2.selectPlaylist();\n          }\n\n          _this2.initialMedia_ = selectedMedia;\n\n          _this2.masterPlaylistLoader_.media(_this2.initialMedia_);\n\n          return;\n        }\n\n        if (_this2.useCueTags_) {\n          _this2.updateAdCues_(updatedPlaylist);\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `mediachange`\n\n\n        _this2.mainSegmentLoader_.playlist(updatedPlaylist, _this2.requestOptions_);\n\n        _this2.updateDuration(); // If the player isn't paused, ensure that the segment loader is running,\n        // as it is possible that it was temporarily stopped while waiting for\n        // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n\n        if (!_this2.tech_.paused()) {\n          _this2.mainSegmentLoader_.load();\n\n          if (_this2.audioSegmentLoader_) {\n            _this2.audioSegmentLoader_.load();\n          }\n        }\n\n        if (!updatedPlaylist.endList) {\n          var addSeekableRange = function addSeekableRange() {\n            var seekable$$1 = _this2.seekable();\n\n            if (seekable$$1.length !== 0) {\n              _this2.mediaSource.addSeekableRange_(seekable$$1.start(0), seekable$$1.end(0));\n            }\n          };\n\n          if (_this2.duration() !== Infinity) {\n            var onDurationchange = function onDurationchange() {\n              if (_this2.duration() === Infinity) {\n                addSeekableRange();\n              } else {\n                _this2.tech_.one('durationchange', onDurationchange);\n              }\n            };\n\n            _this2.tech_.one('durationchange', onDurationchange);\n          } else {\n            addSeekableRange();\n          }\n        }\n      });\n      this.masterPlaylistLoader_.on('error', function () {\n        _this2.blacklistCurrentPlaylist(_this2.masterPlaylistLoader_.error);\n      });\n      this.masterPlaylistLoader_.on('mediachanging', function () {\n        _this2.mainSegmentLoader_.abort();\n\n        _this2.mainSegmentLoader_.pause();\n      });\n      this.masterPlaylistLoader_.on('mediachange', function () {\n        var media = _this2.masterPlaylistLoader_.media();\n\n        var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(_this2.masterPlaylistLoader_.master, _this2.masterPlaylistLoader_.media())) {\n          _this2.requestOptions_.timeout = 0;\n        } else {\n          _this2.requestOptions_.timeout = requestTimeout;\n        } // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n\n        _this2.mainSegmentLoader_.playlist(media, _this2.requestOptions_);\n\n        _this2.mainSegmentLoader_.load();\n\n        _this2.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.masterPlaylistLoader_.on('playlistunchanged', function () {\n        var updatedPlaylist = _this2.masterPlaylistLoader_.media();\n\n        var playlistOutdated = _this2.stuckAtPlaylistEnd_(updatedPlaylist);\n\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // blacklist it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          _this2.blacklistCurrentPlaylist({\n            message: 'Playlist no longer updating.'\n          }); // useful for monitoring QoS\n\n\n          _this2.tech_.trigger('playliststuck');\n        }\n      });\n      this.masterPlaylistLoader_.on('renditiondisabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-disabled'\n        });\n      });\n      this.masterPlaylistLoader_.on('renditionenabled', function () {\n        _this2.tech_.trigger({\n          type: 'usage',\n          name: 'hls-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n  }, {\n    key: 'triggerPresenceUsage_',\n    value: function triggerPresenceUsage_(master, media) {\n      var mediaGroups = master.mediaGroups || {};\n      var defaultDemuxed = true;\n      var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n      for (var mediaGroup in mediaGroups.AUDIO) {\n        for (var label in mediaGroups.AUDIO[mediaGroup]) {\n          var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-demuxed'\n        });\n      }\n\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-webvtt'\n        });\n      }\n\n      if (Hls.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-aes'\n        });\n      }\n\n      if (Hls.Playlist.isFmp4(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n      }\n\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-alternate-audio'\n        });\n      }\n\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-playlist-cue-tags'\n        });\n      }\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSegmentLoaderListeners_',\n    value: function setupSegmentLoaderListeners_() {\n      var _this3 = this;\n\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this3.selectPlaylist();\n\n        var currentPlaylist = _this3.masterPlaylistLoader_.media();\n\n        var buffered = _this3.tech_.buffered();\n\n        var forwardBuffer = buffered.length ? buffered.end(buffered.length - 1) - _this3.tech_.currentTime() : 0;\n\n        var bufferLowWaterLine = _this3.bufferLowWaterLine(); // If the playlist is live, then we want to not take low water line into account.\n        // This is because in LIVE, the player plays 3 segments from the end of the\n        // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n        // in those segments, a viewer will never experience a rendition upswitch.\n\n\n        if (!currentPlaylist.endList || // For the same reason as LIVE, we ignore the low water line when the VOD\n        // duration is below the max potential low water line\n        _this3.duration() < Config.MAX_BUFFER_LOW_WATER_LINE || // we want to switch down to lower resolutions quickly to continue playback, but\n        nextPlaylist.attributes.BANDWIDTH < currentPlaylist.attributes.BANDWIDTH || // ensure we have some buffer before we switch up to prevent us running out of\n        // buffer while loading a higher rendition.\n        forwardBuffer >= bufferLowWaterLine) {\n          _this3.masterPlaylistLoader_.media(nextPlaylist);\n        }\n\n        _this3.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this3.trigger('progress');\n      });\n      this.mainSegmentLoader_.on('error', function () {\n        _this3.blacklistCurrentPlaylist(_this3.mainSegmentLoader_.error());\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', function () {\n        _this3.tech_.trigger({\n          type: 'usage',\n          name: 'hls-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', function () {\n        _this3.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', function () {\n        _this3.blacklistCurrentPlaylist({\n          message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n        }, ABORT_EARLY_BLACKLIST_SECONDS);\n      });\n      this.mainSegmentLoader_.on('reseteverything', function () {\n        // If playing an MTS stream, a videojs.MediaSource is listening for\n        // hls-reset to reset caption parsing state in the transmuxer\n        _this3.tech_.trigger('hls-reset');\n      });\n      this.mainSegmentLoader_.on('segmenttimemapping', function (event) {\n        // If playing an MTS stream in html, a videojs.MediaSource is listening for\n        // hls-segment-time-mapping update its internal mapping of stream to display time\n        _this3.tech_.trigger({\n          type: 'hls-segment-time-mapping',\n          mapping: event.mapping\n        });\n      });\n      this.audioSegmentLoader_.on('ended', function () {\n        _this3.onEndOfStream();\n      });\n    }\n  }, {\n    key: 'mediaSecondsLoaded_',\n    value: function mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n  }, {\n    key: 'load',\n    value: function load() {\n      this.mainSegmentLoader_.load();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions without performing destructive actions, like\n     * removing already buffered content\n     *\n     * @private\n     */\n\n  }, {\n    key: 'smoothQualityChange_',\n    value: function smoothQualityChange_() {\n      var media = this.selectPlaylist();\n\n      if (media !== this.masterPlaylistLoader_.media()) {\n        this.masterPlaylistLoader_.media(media);\n        this.mainSegmentLoader_.resetLoader(); // don't need to reset audio as it is reset when media changes\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n  }, {\n    key: 'fastQualityChange_',\n    value: function fastQualityChange_() {\n      var _this4 = this;\n\n      var media = this.selectPlaylist();\n\n      if (media === this.masterPlaylistLoader_.media()) {\n        return;\n      }\n\n      this.masterPlaylistLoader_.media(media); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(function () {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs$1.browser.IE_VERSION || videojs$1.browser.IS_EDGE) {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime() + 0.04);\n        } else {\n          _this4.tech_.setCurrentTime(_this4.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n\n      if (this.tech_.ended()) {\n        this.seekTo_(0);\n      }\n\n      if (this.hasPlayed_()) {\n        this.load();\n      }\n\n      var seekable$$1 = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable$$1.start(0)) {\n          return this.seekTo_(seekable$$1.end(seekable$$1.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n  }, {\n    key: 'setupFirstPlay',\n    value: function setupFirstPlay() {\n      var _this5 = this;\n\n      var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_()) {\n        return false;\n      } // when the video is a live stream\n\n\n      if (!media.endList) {\n        var seekable$$1 = this.seekable();\n\n        if (!seekable$$1.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n\n        if (videojs$1.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', function () {\n            _this5.trigger('firstplay');\n\n            _this5.seekTo_(seekable$$1.end(0));\n\n            _this5.hasPlayed_ = function () {\n              return true;\n            };\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.seekTo_(seekable$$1.end(0));\n      }\n\n      this.hasPlayed_ = function () {\n        return true;\n      }; // we can begin loading now that everything is ready\n\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n  }, {\n    key: 'handleSourceOpen_',\n    value: function handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      try {\n        this.setupSourceBuffers_();\n      } catch (e) {\n        videojs$1.log.warn('Failed to create Source Buffers', e);\n        return this.mediaSource.endOfStream('decode');\n      } // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n\n      if (this.tech_.autoplay()) {\n        var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, function (e) {});\n        }\n      }\n\n      this.trigger('sourceopen');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n  }, {\n    key: 'onEndOfStream',\n    value: function onEndOfStream() {\n      var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        // if the audio playlist loader exists, then alternate audio is active\n        if (!this.mainSegmentLoader_.startingMedia_ || this.mainSegmentLoader_.startingMedia_.containsVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n\n      if (!isEndOfStream) {\n        return;\n      }\n\n      this.logger_('calling mediaSource.endOfStream()'); // on chrome calling endOfStream can sometimes cause an exception,\n      // even when the media source is in a valid state.\n\n      try {\n        this.mediaSource.endOfStream();\n      } catch (e) {\n        videojs$1.log.warn('Failed to call media source endOfStream', e);\n      }\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n  }, {\n    key: 'stuckAtPlaylistEnd_',\n    value: function stuckAtPlaylistEnd_(playlist) {\n      var seekable$$1 = this.seekable();\n\n      if (!seekable$$1.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n\n      var expired = this.syncController_.getExpiredTime(playlist, this.mediaSource.duration);\n\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n\n      var absolutePlaylistEnd = Hls.Playlist.playlistEnd(playlist, expired);\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n\n      var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Blacklists a playlist when an error occurs for a set amount of time\n     * making it unavailable for selection by the rendition selection algorithm\n     * and then forces a new playlist (rendition) selection.\n     *\n     * @param {Object=} error an optional error that may include the playlist\n     * to blacklist\n     * @param {Number=} blacklistDuration an optional number of seconds to blacklist the\n     * playlist\n     */\n\n  }, {\n    key: 'blacklistCurrentPlaylist',\n    value: function blacklistCurrentPlaylist() {\n      var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var blacklistDuration = arguments[1];\n      var currentPlaylist = void 0;\n      var nextPlaylist = void 0; // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // blacklisted instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n\n      currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n      blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the master OR while we were disposing of the tech\n\n      if (!currentPlaylist) {\n        this.error = error;\n\n        try {\n          return this.mediaSource.endOfStream('network');\n        } catch (e) {\n          return this.trigger('error');\n        }\n      }\n\n      var isFinalRendition = this.masterPlaylistLoader_.master.playlists.filter(isEnabled).length === 1;\n      var playlists = this.masterPlaylistLoader_.master.playlists;\n\n      if (playlists.length === 1) {\n        // Never blacklisting this playlist because it's the only playlist\n        videojs$1.log.warn('Problem encountered with the current ' + 'HLS playlist. Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist');\n        return this.masterPlaylistLoader_.load(isFinalRendition);\n      }\n\n      if (isFinalRendition) {\n        // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // blacklist. This allows other playlists to be attempted in case any have been\n        // fixed.\n        videojs$1.log.warn('Removing all playlists from the blacklist because the last ' + 'rendition is about to be blacklisted.');\n        playlists.forEach(function (playlist) {\n          if (playlist.excludeUntil !== Infinity) {\n            delete playlist.excludeUntil;\n          }\n        }); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      } // Blacklist this playlist\n\n\n      currentPlaylist.excludeUntil = Date.now() + blacklistDuration * 1000;\n      this.tech_.trigger('blacklistplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-blacklisted'\n      }); // Select a new playlist\n\n      nextPlaylist = this.selectPlaylist();\n      videojs$1.log.warn('Problem encountered with the current HLS playlist.' + (error.message ? ' ' + error.message : '') + ' Switching to another playlist.');\n      return this.masterPlaylistLoader_.media(nextPlaylist, isFinalRendition);\n    }\n    /**\n     * Pause all segment loaders\n     */\n\n  }, {\n    key: 'pauseLoading',\n    value: function pauseLoading() {\n      this.mainSegmentLoader_.pause();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.pause();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.pause();\n      }\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      var buffered = findRange(this.tech_.buffered(), currentTime);\n\n      if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n\n      if (!this.masterPlaylistLoader_.media().segments) {\n        return 0;\n      } // In flash playback, the segment loaders should be reset on every seek, even\n      // in buffer seeks. If the seek location is already buffered, continue buffering as\n      // usual\n      // TODO: redo this comment\n\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      if (!this.masterPlaylistLoader_) {\n        return 0;\n      }\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n\n      return Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.seekable_;\n    }\n  }, {\n    key: 'onSyncInfoUpdate_',\n    value: function onSyncInfoUpdate_() {\n      var mainSeekable = void 0;\n      var audioSeekable = void 0;\n\n      if (!this.masterPlaylistLoader_) {\n        return;\n      }\n\n      var media = this.masterPlaylistLoader_.media();\n\n      if (!media) {\n        return;\n      }\n\n      var expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n\n      mainSeekable = Hls.Playlist.seekable(media, expired);\n\n      if (mainSeekable.length === 0) {\n        return;\n      }\n\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.mediaSource.duration);\n\n        if (expired === null) {\n          return;\n        }\n\n        audioSeekable = Hls.Playlist.seekable(media, expired);\n\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n\n      var oldEnd = void 0;\n      var oldStart = void 0;\n\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = videojs$1.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n\n      this.logger_('seekable updated [' + printableRange(this.seekable_) + ']');\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n  }, {\n    key: 'updateDuration',\n    value: function updateDuration() {\n      var _this6 = this;\n\n      var oldDuration = this.mediaSource.duration;\n      var newDuration = Hls.Playlist.duration(this.masterPlaylistLoader_.media());\n      var buffered = this.tech_.buffered();\n\n      var setDuration = function setDuration() {\n        // on firefox setting the duration may sometimes cause an exception\n        // even if the media source is open and source buffers are not\n        // updating, something about the media source being in an invalid state.\n        _this6.logger_('Setting duration from ' + _this6.mediaSource.duration + ' => ' + newDuration);\n\n        try {\n          _this6.mediaSource.duration = newDuration;\n        } catch (e) {\n          videojs$1.log.warn('Failed to set media source duration', e);\n        }\n\n        _this6.tech_.trigger('durationchange');\n\n        _this6.mediaSource.removeEventListener('sourceopen', setDuration);\n      };\n\n      if (buffered.length > 0) {\n        newDuration = Math.max(newDuration, buffered.end(buffered.length - 1));\n      } // if the duration has changed, invalidate the cached value\n\n\n      if (oldDuration !== newDuration) {\n        // update the duration\n        if (this.mediaSource.readyState !== 'open') {\n          this.mediaSource.addEventListener('sourceopen', setDuration);\n        } else {\n          setDuration();\n        }\n      }\n    }\n    /**\n     * dispose of the MasterPlaylistController and everything\n     * that it controls\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      var _this7 = this;\n\n      this.decrypter_.terminate();\n      this.masterPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n        var groups = _this7.mediaTypes_[type].groups;\n\n        for (var id in groups) {\n          groups[id].forEach(function (group) {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n    }\n    /**\n     * return the master playlist object if we have one\n     *\n     * @return {Object} the master playlist object that we parsed\n     */\n\n  }, {\n    key: 'master',\n    value: function master() {\n      return this.masterPlaylistLoader_.master;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n  }, {\n    key: 'media',\n    value: function media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.masterPlaylistLoader_.media() || this.initialMedia_;\n    }\n    /**\n     * setup our internal source buffers on our segment Loaders\n     *\n     * @private\n     */\n\n  }, {\n    key: 'setupSourceBuffers_',\n    value: function setupSourceBuffers_() {\n      var media = this.masterPlaylistLoader_.media();\n      var mimeTypes = void 0; // wait until a media playlist is available and the Media Source is\n      // attached\n\n      if (!media || this.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      mimeTypes = mimeTypesForPlaylist(this.masterPlaylistLoader_.master, media);\n\n      if (mimeTypes.length < 1) {\n        this.error = 'No compatible SourceBuffer configuration for the variant stream:' + media.resolvedUri;\n        return this.mediaSource.endOfStream('decode');\n      }\n\n      this.configureLoaderMimeTypes_(mimeTypes); // exclude any incompatible variant streams from future playlist\n      // selection\n\n      this.excludeIncompatibleVariants_(media);\n    }\n  }, {\n    key: 'configureLoaderMimeTypes_',\n    value: function configureLoaderMimeTypes_(mimeTypes) {\n      // If the content is demuxed, we can't start appending segments to a source buffer\n      // until both source buffers are set up, or else the browser may not let us add the\n      // second source buffer (it will assume we are playing either audio only or video\n      // only).\n      var sourceBufferEmitter = // If there is more than one mime type\n      mimeTypes.length > 1 && // and the first mime type does not have muxed video and audio\n      mimeTypes[0].indexOf(',') === -1 && // and the two mime types are different (they can be the same in the case of audio\n      // only with alternate audio)\n      mimeTypes[0] !== mimeTypes[1] ? // then we want to wait on the second source buffer\n      new videojs$1.EventTarget() : // otherwise there is no need to wait as the content is either audio only,\n      // video only, or muxed content.\n      null;\n      this.mainSegmentLoader_.mimeType(mimeTypes[0], sourceBufferEmitter);\n\n      if (mimeTypes[1]) {\n        this.audioSegmentLoader_.mimeType(mimeTypes[1], sourceBufferEmitter);\n      }\n    }\n    /**\n     * Blacklists playlists with codecs that are unsupported by the browser.\n     */\n\n  }, {\n    key: 'excludeUnsupportedVariants_',\n    value: function excludeUnsupportedVariants_() {\n      this.master().playlists.forEach(function (variant) {\n        if (variant.attributes.CODECS && window$1.MediaSource && window$1.MediaSource.isTypeSupported && !window$1.MediaSource.isTypeSupported('video/mp4; codecs=\"' + mapLegacyAvcCodecs(variant.attributes.CODECS) + '\"')) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n    /**\n     * Blacklist playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current master playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n  }, {\n    key: 'excludeIncompatibleVariants_',\n    value: function excludeIncompatibleVariants_(media) {\n      var codecCount = 2;\n      var videoCodec = null;\n      var codecs = void 0;\n\n      if (media.attributes.CODECS) {\n        codecs = parseCodecs(media.attributes.CODECS);\n        videoCodec = codecs.videoCodec;\n        codecCount = codecs.codecCount;\n      }\n\n      this.master().playlists.forEach(function (variant) {\n        var variantCodecs = {\n          codecCount: 2,\n          videoCodec: null\n        };\n\n        if (variant.attributes.CODECS) {\n          variantCodecs = parseCodecs(variant.attributes.CODECS);\n        } // if the streams differ in the presence or absence of audio or\n        // video, they are incompatible\n\n\n        if (variantCodecs.codecCount !== codecCount) {\n          variant.excludeUntil = Infinity;\n        } // if h.264 is specified on the current playlist, some flavor of\n        // it must be specified on all compatible variants\n\n\n        if (variantCodecs.videoCodec !== videoCodec) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n    }\n  }, {\n    key: 'updateAdCues_',\n    value: function updateAdCues_(media) {\n      var offset = 0;\n      var seekable$$1 = this.seekable();\n\n      if (seekable$$1.length) {\n        offset = seekable$$1.start(0);\n      }\n\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {Number} Desired forward buffer length in seconds\n     */\n\n  }, {\n    key: 'goalBufferLength',\n    value: function goalBufferLength() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.GOAL_BUFFER_LENGTH;\n      var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {Number} Desired buffer low water line in seconds\n     */\n\n  }, {\n    key: 'bufferLowWaterLine',\n    value: function bufferLowWaterLine() {\n      var currentTime = this.tech_.currentTime();\n      var initial = Config.BUFFER_LOW_WATER_LINE;\n      var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, max);\n    }\n  }]);\n  return MasterPlaylistController;\n}(videojs$1.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {String} playlistUri - uri of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {Boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistUri, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistUri];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(hlsHandler, playlist, id) {\n  classCallCheck(this, Representation);\n  var mpc = hlsHandler.masterPlaylistController_,\n      smoothQualityChange = hlsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + 'QualityChange_'].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes.RESOLUTION) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution.width;\n    this.height = resolution.height;\n  }\n\n  this.bandwidth = playlist.attributes.BANDWIDTH; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(hlsHandler.playlists, playlist.uri, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the HlsHandler class\n * @param {HlsHandler} hlsHandler - An instance of HlsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(hlsHandler) {\n  var playlists = hlsHandler.playlists; // Add a single API-specific function to the HlsHandler instance\n\n  hlsHandler.representations = function () {\n    return playlists.master.playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(hlsHandler, e, e.uri);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n// Set of events that reset the playback-watcher time check logic and clear the timeout\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   * @constructor\n   * @param {object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    classCallCheck(this, PlaybackWatcher);\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.seekTo = options.seekTo;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var fixesBadSeeksHandler = function fixesBadSeeksHandler() {\n      return _this.fixesBadSeeks_();\n    };\n\n    this.tech_.on('seekablechanged', fixesBadSeeksHandler);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.logger_('dispose');\n\n      _this.tech_.off('seekablechanged', fixesBadSeeksHandler);\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  createClass(PlaybackWatcher, [{\n    key: 'monitorCurrentTime_',\n    value: function monitorCurrentTime_() {\n      this.checkCurrentTime_();\n\n      if (this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n      this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n  }, {\n    key: 'checkCurrentTime_',\n    value: function checkCurrentTime_() {\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = this.tech_.currentTime();\n        return;\n      }\n\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Cancels any pending timers and resets the 'timeupdate' mechanism\n     * designed to detect that we are stalled\n     *\n     * @private\n     */\n\n  }, {\n    key: 'cancelTimer_',\n    value: function cancelTimer_() {\n      this.consecutiveUpdates = 0;\n\n      if (this.timer_) {\n        this.logger_('cancelTimer_');\n        clearTimeout(this.timer_);\n      }\n\n      this.timer_ = null;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {Boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n  }, {\n    key: 'fixesBadSeeks_',\n    value: function fixesBadSeeks_() {\n      var seeking = this.tech_.seeking();\n\n      if (!seeking) {\n        return false;\n      }\n\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n      var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      var seekTo = void 0;\n\n      if (isAfterSeekableRange) {\n        var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + SAFE_TIME_DELTA;\n      }\n\n      if (typeof seekTo !== 'undefined') {\n        this.logger_('Trying to seek outside of seekable at time ' + currentTime + ' with ' + ('seekable range ' + printableRange(seekable) + '. Seeking to ') + (seekTo + '.'));\n        this.seekTo(seekTo);\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'waiting_',\n    value: function waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n\n      var currentTime = this.tech_.currentTime();\n      var buffered = this.tech_.buffered();\n      var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.cancelTimer_();\n        this.seekTo(currentTime);\n        this.logger_('Stopped at ' + currentTime + ' while inside a buffered region ' + ('[' + currentRange.start(0) + ' -> ' + currentRange.end(0) + ']. Attempting to resume ') + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {Boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n  }, {\n    key: 'techWaiting_',\n    value: function techWaiting_() {\n      var seekable = this.seekable();\n      var currentTime = this.tech_.currentTime();\n\n      if (this.tech_.seeking() && this.fixesBadSeeks_()) {\n        // Tech is seeking or bad seek fixed, no action needed\n        return true;\n      }\n\n      if (this.tech_.seeking() || this.timer_ !== null) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        var livePoint = seekable.end(seekable.length - 1);\n        this.logger_('Fell out of live window at time ' + currentTime + '. Seeking to ' + ('live point (seekable end) ' + livePoint));\n        this.cancelTimer_();\n        this.seekTo(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-live-resync'\n        });\n        return true;\n      }\n\n      var buffered = this.tech_.buffered();\n      var nextRange = findNextRange(buffered, currentTime);\n\n      if (this.videoUnderflow_(nextRange, buffered, currentTime)) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.cancelTimer_();\n        this.seekTo(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'hls-video-underflow'\n        });\n        return true;\n      } // check for gap\n\n\n      if (nextRange.length > 0) {\n        var difference = nextRange.start(0) - currentTime;\n        this.logger_('Stopped at ' + currentTime + ', setting timer for ' + difference + ', seeking ' + ('to ' + nextRange.start(0)));\n        this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n      return false;\n    }\n  }, {\n    key: 'afterSeekableWindow_',\n    value: function afterSeekableWindow_(seekable, currentTime, playlist) {\n      var allowSeeksWithinUnsafeLiveWindow = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n\n      var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      var isLive = !playlist.endList;\n\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'beforeSeekableWindow_',\n    value: function beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - SAFE_TIME_DELTA) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: 'videoUnderflow_',\n    value: function videoUnderflow_(nextRange, buffered, currentTime) {\n      if (nextRange.length === 0) {\n        // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n        var gap = this.gapFromVideoUnderflow_(buffered, currentTime);\n\n        if (gap) {\n          this.logger_('Encountered a gap in video from ' + gap.start + ' to ' + gap.end + '. ' + ('Seeking to current time ' + currentTime));\n          return true;\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n  }, {\n    key: 'skipTheGap_',\n    value: function skipTheGap_(scheduledCurrentTime) {\n      var buffered = this.tech_.buffered();\n      var currentTime = this.tech_.currentTime();\n      var nextRange = findNextRange(buffered, currentTime);\n      this.cancelTimer_();\n\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.seekTo(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-gap-skip'\n      });\n    }\n  }, {\n    key: 'gapFromVideoUnderflow_',\n    value: function gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      var gaps = findGaps(buffered);\n\n      for (var i = 0; i < gaps.length; i++) {\n        var start = gaps.start(i);\n        var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start: start,\n            end: end\n          };\n        }\n      }\n\n      return null;\n    }\n  }]);\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_;\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs$1.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs$1.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$1 = \"1.10.3\"; // since VHS handles HLS and DASH (and in the future, more types), use * to capture all\n\nvideojs$1.use('*', function (player) {\n  return {\n    setSource: function setSource(srcObj, next) {\n      // pass null as the first argument to indicate that the source is not rejected\n      next(null, srcObj);\n    },\n    // VHS needs to know when seeks happen. For external seeks (generated at the player\n    // level), this middleware will capture the action. For internal seeks (generated at\n    // the tech level), we use a wrapped function so that we can handle it on our own\n    // (specified elsewhere).\n    setCurrentTime: function setCurrentTime(time) {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(time);\n      }\n\n      return time;\n    },\n    // Sync VHS after play requests.\n    // This specifically handles replay where the order of actions is\n    // play, video element will seek to 0 (skipping the setCurrentTime middleware)\n    // then triggers a play event.\n    play: function play() {\n      if (player.vhs && player.currentSource().src === player.vhs.source_.src) {\n        player.vhs.setCurrentTime(player.tech_.currentTime());\n      }\n    }\n  };\n});\n/**\n * @file videojs-http-streaming.js\n *\n * The main file for the HLS project.\n * License: https://github.com/videojs/videojs-http-streaming/blob/master/LICENSE\n */\n\nvar Hls$1 = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  Decrypter: Decrypter,\n  AsyncStream: AsyncStream,\n  decrypt: decrypt,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properites\n\n['GOAL_BUFFER_LENGTH', 'MAX_GOAL_BUFFER_LENGTH', 'GOAL_BUFFER_LENGTH_RATE', 'BUFFER_LOW_WATER_LINE', 'MAX_BUFFER_LOW_WATER_LINE', 'BUFFER_LOW_WATER_LINE_RATE', 'BANDWIDTH_VARIANCE'].forEach(function (prop) {\n  Object.defineProperty(Hls$1, prop, {\n    get: function get$$1() {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n      return Config[prop];\n    },\n    set: function set$$1(value) {\n      videojs$1.log.warn('using Hls.' + prop + ' is UNSAFE be sure you know what you are doing');\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs$1.log.warn('value of Hls.' + prop + ' must be greater than or equal to 0');\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY$1 = 'videojs-vhs';\n\nvar simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n  var mpegurlRE = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n\n  if (mpegurlRE.test(type)) {\n    return 'hls';\n  }\n\n  var dashRE = /^application\\/dash\\+xml/i;\n\n  if (dashRE.test(type)) {\n    return 'dash';\n  }\n\n  return null;\n};\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in hls.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleHlsMediaChange\n */\n\n\nvar handleHlsMediaChange = function handleHlsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.uri) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} hls Hls object to listen to for media events.\n * @function handleHlsLoadedMetadata\n */\n\n\nvar handleHlsLoadedMetadata = function handleHlsLoadedMetadata(qualityLevels, hls) {\n  hls.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleHlsMediaChange(qualityLevels, hls.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nHls$1.canPlaySource = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, videoPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  } // upsert the content types based on the selected playlist\n\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {\n      audioContentType: 'audio/mp4; codecs=\"' + audioPlaylist.attributes.CODECS + '\"',\n      videoContentType: 'video/mp4; codecs=\"' + videoPlaylist.attributes.CODECS + '\"'\n    };\n\n    if (videoPlaylist.contentProtection && videoPlaylist.contentProtection[keySystem] && videoPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = videoPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs$1.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n\nvar setupEmeOptions = function setupEmeOptions(hlsHandler) {\n  if (hlsHandler.options_.sourceType !== 'dash') {\n    return;\n  }\n\n  var player = videojs$1.players[hlsHandler.tech_.options_.playerId];\n\n  if (player.eme) {\n    var sourceOptions = emeKeySystems(hlsHandler.source_.keySystems, hlsHandler.playlists.media(), hlsHandler.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader.media());\n\n    if (sourceOptions) {\n      player.currentSource().keySystems = sourceOptions; // works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449\n\n      if (player.eme.initializeMediaKeys) {\n        player.eme.initializeMediaKeys();\n      }\n    }\n  }\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window.localStorage) {\n    return null;\n  }\n\n  var storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY$1);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs$1.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nHls$1.supportsNativeHls = function () {\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nHls$1.supportsNativeDash = function () {\n  if (!videojs$1.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nHls$1.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Hls$1.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Hls$1.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nHls$1.isSupported = function () {\n  return videojs$1.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component$1 = videojs$1.getComponent('Component');\n/**\n * The Hls Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class HlsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar HlsHandler = function (_Component) {\n  inherits(HlsHandler, _Component);\n\n  function HlsHandler(source, tech, options) {\n    classCallCheck(this, HlsHandler); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    var _this = possibleConstructorReturn(this, (HlsHandler.__proto__ || Object.getPrototypeOf(HlsHandler)).call(this, tech, options.hls));\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs$1(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get$$1() {\n            videojs$1.log.warn('player.hls is deprecated. Use player.tech().hls instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _this;\n          },\n          configurable: true\n        });\n      } // Set up a reference to the HlsHandler from player.vhs. This allows users to start\n      // migrating from player.tech_.hls... to player.vhs... for API access. Although this\n      // isn't the most appropriate form of reference for video.js (since all APIs should\n      // be provided through core video.js), it is a common pattern for plugins, and vhs\n      // will act accordingly.\n\n\n      _player.vhs = _this; // deprecated, for backwards compatibility\n\n      _player.dash = _this;\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.smoothQualityChange_();\n      }\n    }); // Handle seeking when looping - middleware doesn't handle this seek event from the tech\n\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.tech_.currentTime() === 0 && this.tech_.player_.loop()) {\n        this.setCurrentTime(0);\n      }\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  createClass(HlsHandler, [{\n    key: 'setOptions_',\n    value: function setOptions_() {\n      var _this2 = this; // defaults\n\n\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.handleManifestRedirects = this.options_.handleManifestRedirects || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n      if (typeof this.options_.blacklistDuration !== 'number') {\n        this.options_.blacklistDuration = 5 * 60;\n      }\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          var storedObject = getVhsLocalStorage();\n\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-bandwidth-from-local-storage'\n            });\n          }\n\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'hls-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys'].forEach(function (option) {\n        if (typeof _this2.source_[option] !== 'undefined') {\n          _this2.options_[option] = _this2.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n  }, {\n    key: 'src',\n    value: function src(_src, type) {\n      var _this3 = this; // do nothing if the src is falsey\n\n\n      if (!_src) {\n        return;\n      }\n\n      this.setOptions_(); // add master playlist controller options\n\n      this.options_.url = this.source_.src;\n      this.options_.tech = this.tech_;\n      this.options_.externHls = Hls$1;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update both the tech and call our own\n      // setCurrentTime function. This is needed because \"seeking\" events aren't always\n      // reliable. External seeks (via the player object) are handled via middleware.\n\n      this.options_.seekTo = function (time) {\n        _this3.tech_.setCurrentTime(time);\n\n        _this3.setCurrentTime(time);\n      };\n\n      this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n      this.playbackWatcher_ = new PlaybackWatcher(videojs$1.mergeOptions(this.options_, {\n        seekable: function seekable$$1() {\n          return _this3.seekable();\n        },\n        media: function media() {\n          return _this3.masterPlaylistController_.media();\n        }\n      }));\n      this.masterPlaylistController_.on('error', function () {\n        var player = videojs$1.players[_this3.tech_.options_.playerId];\n        player.error(_this3.masterPlaylistController_.error);\n      }); // `this` in selectPlaylist should be the HlsHandler for backwards\n      // compatibility with < v2\n\n      this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : Hls$1.STANDARD_PLAYLIST_SELECTOR.bind(this);\n      this.masterPlaylistController_.selectInitialPlaylist = Hls$1.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n      this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.selectPlaylist;\n          },\n          set: function set$$1(selectPlaylist) {\n            this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set: function set$$1(throughput) {\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get: function get$$1() {\n            return this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          },\n          set: function set$$1(bandwidth) {\n            this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get: function get$$1() {\n            var invBandwidth = 1 / (this.bandwidth || 1);\n            var invThroughput = void 0;\n\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n\n            var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set: function set$$1() {\n            videojs$1.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: function get$$1() {\n            return _this3.bandwidth || 0;\n          },\n          enumerable: true\n        },\n        mediaRequests: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequests_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n          },\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n          },\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n          },\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n          },\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: function get$$1() {\n            return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n          },\n          enumerable: true\n        },\n        buffered: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.buffered());\n          },\n          enumerable: true\n        },\n        currentTime: {\n          get: function get$$1() {\n            return _this3.tech_.currentTime();\n          },\n          enumerable: true\n        },\n        currentSource: {\n          get: function get$$1() {\n            return _this3.tech_.currentSource_;\n          },\n          enumerable: true\n        },\n        currentTech: {\n          get: function get$$1() {\n            return _this3.tech_.name_;\n          },\n          enumerable: true\n        },\n        duration: {\n          get: function get$$1() {\n            return _this3.tech_.duration();\n          },\n          enumerable: true\n        },\n        master: {\n          get: function get$$1() {\n            return _this3.playlists.master;\n          },\n          enumerable: true\n        },\n        playerDimensions: {\n          get: function get$$1() {\n            return _this3.tech_.currentDimensions();\n          },\n          enumerable: true\n        },\n        seekable: {\n          get: function get$$1() {\n            return timeRangesToArray(_this3.tech_.seekable());\n          },\n          enumerable: true\n        },\n        timestamp: {\n          get: function get$$1() {\n            return Date.now();\n          },\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: function get$$1() {\n            return _this3.tech_.getVideoPlaybackQuality();\n          },\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n      this.tech_.on('bandwidthupdate', function () {\n        if (_this3.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: _this3.bandwidth,\n            throughput: Math.round(_this3.throughput)\n          });\n        }\n      });\n      this.masterPlaylistController_.on('selectedinitialmedia', function () {\n        // Add the manual rendition mix-in to HlsHandler\n        renditionSelectionMixin(_this3);\n        setupEmeOptions(_this3);\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.masterPlaylistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      });\n      this.tech_.ready(function () {\n        return _this3.setupQualityLevels_();\n      }); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n\n      this.tech_.src(videojs$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource));\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n  }, {\n    key: 'setupQualityLevels_',\n    value: function setupQualityLevels_() {\n      var _this4 = this;\n\n      var player = videojs$1.players[this.tech_.options_.playerId];\n\n      if (player && player.qualityLevels) {\n        this.qualityLevels_ = player.qualityLevels();\n        this.masterPlaylistController_.on('selectedinitialmedia', function () {\n          handleHlsLoadedMetadata(_this4.qualityLevels_, _this4);\n        });\n        this.playlists.on('mediachange', function () {\n          handleHlsMediaChange(_this4.qualityLevels_, _this4.playlists);\n        });\n      }\n    }\n    /**\n     * Begin playing the video.\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      this.masterPlaylistController_.play();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'setCurrentTime',\n    value: function setCurrentTime(currentTime) {\n      this.masterPlaylistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'duration',\n    value: function duration$$1() {\n      return this.masterPlaylistController_.duration();\n    }\n    /**\n     * a wrapper around the function in MasterPlaylistController\n     */\n\n  }, {\n    key: 'seekable',\n    value: function seekable$$1() {\n      return this.masterPlaylistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n  }, {\n    key: 'dispose',\n    value: function dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n\n      if (this.masterPlaylistController_) {\n        this.masterPlaylistController_.dispose();\n      }\n\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n\n      if (this.player_) {\n        delete this.player_.vhs;\n        delete this.player_.dash;\n        delete this.player_.hls;\n      }\n\n      if (this.tech_ && this.tech_.hls) {\n        delete this.tech_.hls;\n      }\n\n      get$1(HlsHandler.prototype.__proto__ || Object.getPrototypeOf(HlsHandler.prototype), 'dispose', this).call(this);\n    }\n  }, {\n    key: 'convertToProgramTime',\n    value: function convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.masterPlaylistController_.media(),\n        time: time,\n        callback: callback\n      });\n    } // the player must be playing before calling this\n\n  }, {\n    key: 'seekToProgramTime',\n    value: function seekToProgramTime$$1(programTime, callback) {\n      var pauseAfterSeek = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var retryCount = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 2;\n      return seekToProgramTime({\n        programTime: programTime,\n        playlist: this.masterPlaylistController_.media(),\n        retryCount: retryCount,\n        pauseAfterSeek: pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback: callback\n      });\n    }\n  }]);\n  return HlsHandler;\n}(Component$1);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar HlsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$1,\n  canHandleSource: function canHandleSource(srcObj) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    return HlsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var localOptions = videojs$1.mergeOptions(videojs$1.options, options);\n    tech.hls = new HlsHandler(source, tech, localOptions);\n    tech.hls.xhr = xhrFactory();\n    tech.hls.src(source.src, source.type);\n    return tech.hls;\n  },\n  canPlayType: function canPlayType(type) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var _videojs$mergeOptions = videojs$1.mergeOptions(videojs$1.options, options),\n        overrideNative = _videojs$mergeOptions.hls.overrideNative;\n\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Hls$1.supportsTypeNatively(supportedType) || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n\nif (typeof videojs$1.MediaSource === 'undefined' || typeof videojs$1.URL === 'undefined') {\n  videojs$1.MediaSource = MediaSource;\n  videojs$1.URL = URL$1;\n} // register source handlers with the appropriate techs\n\n\nif (MediaSource.supportsNativeMediaSources()) {\n  videojs$1.getTech('Html5').registerSourceHandler(HlsSourceHandler, 0);\n}\n\nvideojs$1.HlsHandler = HlsHandler;\nvideojs$1.HlsSourceHandler = HlsSourceHandler;\nvideojs$1.Hls = Hls$1;\n\nif (!videojs$1.use) {\n  videojs$1.registerComponent('Hls', Hls$1);\n}\n\nvideojs$1.options.hls = videojs$1.options.hls || {};\n\nif (videojs$1.registerPlugin) {\n  videojs$1.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n} else {\n  videojs$1.plugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs$1;\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n","/**\n * mux.js\n *\n * Copyright (c) Brightcove\n * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n *\n * Utilities to detect basic properties and metadata about Aac data.\n */\n'use strict';\n\nvar ADTS_SAMPLING_FREQUENCIES = [\n  96000,\n  88200,\n  64000,\n  48000,\n  44100,\n  32000,\n  24000,\n  22050,\n  16000,\n  12000,\n  11025,\n  8000,\n  7350\n];\n\nvar isLikelyAacData = function(data) {\n  if ((data[0] === 'I'.charCodeAt(0)) &&\n      (data[1] === 'D'.charCodeAt(0)) &&\n      (data[2] === '3'.charCodeAt(0))) {\n    return true;\n  }\n  return false;\n};\n\nvar parseSyncSafeInteger = function(data) {\n  return (data[0] << 21) |\n          (data[1] << 14) |\n          (data[2] << 7) |\n          (data[3]);\n};\n\n// return a percent-encoded representation of the specified byte range\n// @see http://en.wikipedia.org/wiki/Percent-encoding\nvar percentEncode = function(bytes, start, end) {\n  var i, result = '';\n  for (i = start; i < end; i++) {\n    result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n  }\n  return result;\n};\n\n// return the string representation of the specified byte range,\n// interpreted as ISO-8859-1.\nvar parseIso88591 = function(bytes, start, end) {\n  return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n};\n\nvar parseId3TagSize = function(header, byteIndex) {\n  var\n    returnSize = (header[byteIndex + 6] << 21) |\n                 (header[byteIndex + 7] << 14) |\n                 (header[byteIndex + 8] << 7) |\n                 (header[byteIndex + 9]),\n    flags = header[byteIndex + 5],\n    footerPresent = (flags & 16) >> 4;\n\n  if (footerPresent) {\n    return returnSize + 20;\n  }\n  return returnSize + 10;\n};\n\nvar parseAdtsSize = function(header, byteIndex) {\n  var\n    lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n    middle = header[byteIndex + 4] << 3,\n    highTwo = header[byteIndex + 3] & 0x3 << 11;\n\n  return (highTwo | middle) | lowThree;\n};\n\nvar parseType = function(header, byteIndex) {\n  if ((header[byteIndex] === 'I'.charCodeAt(0)) &&\n      (header[byteIndex + 1] === 'D'.charCodeAt(0)) &&\n      (header[byteIndex + 2] === '3'.charCodeAt(0))) {\n    return 'timed-metadata';\n  } else if ((header[byteIndex] & 0xff === 0xff) &&\n             ((header[byteIndex + 1] & 0xf0) === 0xf0)) {\n    return 'audio';\n  }\n  return null;\n};\n\nvar parseSampleRate = function(packet) {\n  var i = 0;\n\n  while (i + 5 < packet.length) {\n    if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n      // If a valid header was not found,  jump one forward and attempt to\n      // find a valid ADTS header starting at the next byte\n      i++;\n      continue;\n    }\n    return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n  }\n\n  return null;\n};\n\nvar parseAacTimestamp = function(packet) {\n  var frameStart, frameSize, frame, frameHeader;\n\n  // find the start of the first frame and the end of the tag\n  frameStart = 10;\n  if (packet[5] & 0x40) {\n    // advance the frame start past the extended header\n    frameStart += 4; // header size field\n    frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n  }\n\n  // parse one or more ID3 frames\n  // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n  do {\n    // determine the number of bytes in this frame\n    frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n    if (frameSize < 1) {\n      return null;\n    }\n    frameHeader = String.fromCharCode(packet[frameStart],\n                                      packet[frameStart + 1],\n                                      packet[frameStart + 2],\n                                      packet[frameStart + 3]);\n\n    if (frameHeader === 'PRIV') {\n      frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n      for (var i = 0; i < frame.byteLength; i++) {\n        if (frame[i] === 0) {\n          var owner = parseIso88591(frame, 0, i);\n          if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.subarray(i + 1);\n            var size = ((d[3] & 0x01)  << 30) |\n                       (d[4]  << 22) |\n                       (d[5] << 14) |\n                       (d[6] << 6) |\n                       (d[7] >>> 2);\n            size *= 4;\n            size += d[7] & 0x03;\n\n            return size;\n          }\n          break;\n        }\n      }\n    }\n\n    frameStart += 10; // advance past the frame header\n    frameStart += frameSize; // advance past the frame body\n  } while (frameStart < packet.byteLength);\n  return null;\n};\n\nmodule.exports = {\n  isLikelyAacData: isLikelyAacData,\n  parseId3TagSize: parseId3TagSize,\n  parseAdtsSize: parseAdtsSize,\n  parseType: parseType,\n  parseSampleRate: parseSampleRate,\n  parseAacTimestamp: parseAacTimestamp\n};\n"],"sourceRoot":""}